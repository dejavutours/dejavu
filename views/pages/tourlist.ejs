<!DOCTYPE html>
<html lang="en">

<head>
  <%- include('../partials/headtag'); %>
  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css">
  <style>
    /* Existing styles remain unchanged */
    .subtitle {
      color: #f05a5a;
      font-size: 14px;
      margin-bottom: 8px;
    }

    .subtitle h1 {
      font-size: 28px;
      margin-bottom: 20px;
      color: #222;
    }

    .search-container {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 20px;
      gap: 15px;
    }

    .search-bar {
      display: flex;
      flex-grow: 1;
      max-width: 800px;
      border: 1px solid #e0e0e0;
      border-radius: 6px;
      overflow: hidden;
      background-color: white;
    }

    .select-wrapper {
      position: relative;
      min-width: 55px;
      border-right: 1px solid #e0e0e0;
    }

    .select-wrapper .select {
      display: block;
      width: 100%;
      padding: 10px 30px 10px 15px;
      border: none;
      background-color: white;
      font-size: 14px;
      cursor: pointer;
      color: #333;
    }

    .select-wrapper::after {
      content: "▼";
      font-size: 10px;
      color: #888;
      position: absolute;
      right: 12px;
      top: 50%;
      transform: translateY(-50%);
      pointer-events: none;
    }

    .input-wrapper {
      position: relative;
      flex-grow: 1;
      display: flex;
      align-items: center;
    }

    .search-icon {
      position: absolute;
      left: 15px;
      width: 16px;
      height: 16px;
      background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="%239e9e9e" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="11" cy="11" r="8"/><path d="M21 21l-4.35-4.35"/></svg>');
      background-repeat: no-repeat;
      background-position: center;
    }

    .search-input {
      width: 100%;
      padding: 10px 15px 10px 40px;
      border: none;
      font-size: 14px;
      outline: none;
      color: #333;
    }

    .search-input::placeholder {
      color: #9e9e9e;
    }

    .filters-btn {
      display: flex;
      align-items: center;
      padding: 10px 20px;
      background-color: white;
      border: 1px solid #e0e0e0;
      border-radius: 6px;
      font-size: 14px;
      cursor: pointer;
      gap: 8px;
      color: #333;
    }

    .filters-btn .filters-icon {
      display: inline-block;
      width: 16px;
      height: 16px;
      background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="%23333" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><line x1="4" y1="21" x2="4" y2="14"/><line x1="4" y1="10" x2="4" y2="3"/><line x1="12" y1="21" x2="12" y2="12"/><line x1="12" y1="8" x2="12" y2="3"/><line x1="20" y1="21" x2="20" y2="16"/><line x1="20" y1="12" x2="20" y2="3"/><line x1="1" y1="14" x2="7" y2="14"/><line x1="9" y1="8" x2="15" y2="8"/><line x1="17" y1="16" x2="23" y2="16"/></svg>');
      background-repeat: no-repeat;
      background-position: center;
    }

    .packages-grid {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));
      gap: 10px;
    }

    .package-card {
      cursor: pointer;
      overflow: hidden;
      box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
    }

    .package-card:hover {
      box-shadow: 0 12px 20px rgba(0, 0, 0, 0.1);
    }

    .card-image-container {
      position: relative;
      height: 280px;
      overflow: hidden;
      border-radius: 12px;
    }

    .card-image {
      width: 100%;
      height: 100%;
      object-fit: cover;
      transition: transform 0.5s ease;
    }

    .package-card:hover .card-image {
      transform: scale(1.05);
    }

    .discount-tag {
      position: absolute;
      top: 10px;
      right: 10px;
      background-color: #ff5a5f;
      color: white;
      padding: 5px 10px;
      border-radius: 4px;
      font-size: 12px;
      font-weight: bold;
    }

    .region {
      display: flex;
      align-items: center;
      margin-bottom: 10px;
      color: #666;
      font-size: 13px;
    }

    .region::before {
      content: "";
      display: inline-block;
      width: 14px;
      height: 14px;
      margin-right: 5px;
      background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="%23666" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z"/><circle cx="12" cy="10" r="3"/></svg>');
      background-repeat: no-repeat;
      background-position: center;
    }

    .font-weight-bold {
      font-weight: bold;
    }

    .overflow-auto {
      overflow: auto;
    }

    .chip {
      display: flex;
      align-items: center;
      padding: 3px 10px;
      margin: 0px 0px 11px 7px;
      font-size: 14px;
      border-radius: 10px;
      background-color: #f1f3f5;
      color: #333;
      border: 1px solid #d1d1d1;
      cursor: pointer;
    }

    .chip .close {
      margin-left: 8px;
      font-size: 16px;
      cursor: pointer;
      color: #666;
    }

    .chip .close:hover {
      color: #000;
    }

    .location-text {
      color: #6c757d;
      font-size: 14px;
    }

    .icon-text {
      display: flex;
      align-items: center;
      gap: 6px;
      font-size: 14px;
      color: #000000;
    }

    .icon-text i {
      color: #020202;
    }

    .details {
      font-size: 14px;
      color: #6c757d;
    }

    .bottom-info {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-top: 10px;
    }

    .price {
      font-weight: bold;
      font-size: 18px;
      color: #000;
    }

    .price small {
      font-size: 14px;
      color: #6c757d;
    }

    /* Modal-specific styles */
    .image-preview {
      position: relative;
    }

    .image-preview img {
      border-radius: 8px;
    }

    .image-preview .btn {
      padding: 2px 6px;
    }

    .banner-image {
      position: relative;
      cursor: pointer;
      transition: transform 0.2s;
    }

    .banner-image:hover {
      transform: scale(1.05);
    }

    .banner-image img {
      max-width: 150px;
      max-height: 150px;
      border-radius: 8px;
    }

    .banner-image .remove-btn {
      position: absolute;
      top: 5px;
      right: 5px;
      padding: 2px 6px;
    }

    .modal-dialog {
      max-width: 800px;
    }

    @media (max-width: 768px) {
      .packages-grid {
        grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
      }
    }

    @media (max-width: 576px) {
      .search-container {
        flex-direction: column;
        align-items: stretch;
      }

      .search-bar {
        max-width: 100%;
      }

      .filters-btn {
        align-self: flex-end;
      }

      .packages-grid {
        grid-template-columns: 1fr;
      }

      .modal-dialog {
        max-width: 100%;
        margin: 0.5rem;
      }

      .image-preview img,
      .banner-image img {
        max-width: 100px;
        max-height: 100px;
      }
    }
  </style>
</head>

<body>
  <%- include('../partials/header'); %>
  <div class="container">
    <div class="subtitle">Our curated tour packages</div>
    <h1>Where are you planning to go next?</h1>
    <div class="search-container">
      <div class="search-bar">
        <div class="select-wrapper">
          <span class="select">ALL</span>
        </div>
        <div class="input-wrapper">
          <span class="search-icon"></span>
          <input id="SearchEntry" type="text" class="search-input" placeholder="Try searching place name, region, category">
        </div>
      </div>
      <button class="filters-btn" id="filterButton">
        <span class="filters-icon"></span>
        Filters
      </button>
    </div>
    <div class="container mt-4">
      <div id="chipContainer" class="d-flex flex-wrap">
        <% filterChips.forEach((chip, index) => { %>
        <div class="chip">
          <span><%= chip %></span>
          <span class="close" onclick="removeChip('<%= chip %>','<%=index%>')">×</span>
        </div>
        <% }); %>
        <% if (Searchvalue) { %>
        <div class="chip">
          <span><%= Searchvalue %></span>
          <span class="close" onclick="removeSearchChip('<%= Searchvalue %>')">×</span>
        </div>
        <% } %>
      </div>
    </div>
    <!-- the package card section -->
    <div class="packages-grid">
      <% 
      // Filter packages based on user role
    let displayedPackages = profile?.email === process.env.GMAIL_ADMIN 
      ? tourPackages 
      : tourPackages.filter(tour => tour.isActive);
    
    displayedPackages.forEach(function(tour, index) { 
  %>
      <div class="package-card p-2 border rounded-4 <%= !tour.isActive ? 'inactive' : '' %>" onclick="window.location.href='/tripdetail/<%= tour.name %>'" <% if (!tour.isActive && profile?.email === process.env.GMAIL_ADMIN) { %> data-toggle="tooltip" data-placement="top" title="This trip is inactive" <% } %>>
        <div class="card-image-container">
          <img src="<%= tour.imageurl %>" alt="Tour package - <%= tour.name %> in <%= tour.state %>, India" class="card-image card-img-top img-fluid rounded-4" loading="lazy">
        </div>
        <div class="card-body p-2">
          <h2 class="card-title fw-bold"><%= tour.name %></h2>
          <p class="location-text"><%- tour.destinations %></p>
          <div class="icon-text">
            <i class="bi bi-geo-alt-fill"></i>
            <span><%= tour.state %>, India</span>
          </div>
          <div class="bottom-info">
            <span class="details"><i class="bi bi-calendar-event"></i> <%- tour.days %></span>
            <span class="price">From ₹<%- tour.price %><small>/person</small></span>
          </div>
          <% if (profile?.email === process.env.GMAIL_ADMIN) { %>
          <div class="mt-2 mb-2 d-flex align-items-center gap-2">
            <!-- Option 1: Keep as <a> with stopPropagation -->
            <a href="/admin/addtours?tripid=<%= tour._id %>" class="btn btn-primary btn-sm edit-tour" data-id="<%= tour._id %>">Edit</a>
            <!-- Option 2: Convert to <button> (uncomment if preferred) -->
            <!-- <button class="btn btn-primary btn-sm edit-tour" data-id="<%= tour._id %>">Edit</button> -->
            <button class="btn btn-primary btn-sm manage-images" data-id="<%= tour._id %>">Manage Images</button>
            <button class="btn btn-warning btn-sm change-status" data-id="<%= tour._id %>" data-active="<%= tour.isActive !== false %>">
              <%= tour.isActive !== false ? 'Disable' : 'Enable' %>
            </button>
            <button class="btn btn-danger btn-sm delete-tour" data-id="<%= tour._id %>">Delete</button>
          </div>
          <% } %>
        </div>
      </div>
      <% }); %>
    </div>
  </div>

  <!-- Filters Modal -->
  <div class="modal fade bd-example-modal-lg" id="filtersModal" tabindex="-1" aria-labelledby="filtersModalLabel" aria-hidden="true">
    <!-- Existing filter modal content unchanged -->
    <div class="modal-dialog modal-dialog-scrollable">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="filtersModalLabel">Filters</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <form id="tourList" action="/getNewTours" method="GET" class="overflow-auto">
          <div class="modal-body">
            <input type="hidden" name="_csrf" value="<%= csrfToken %>">
            <input id="filterValue" name="filterValue" type="hidden">
            <input id="searchValue" name="searchValue" type="hidden">
            <!-- Existing filter sections unchanged -->
            <!-- <div class="filter-section mb-4"> -->
            <!-- <div class="filter-section-title font-weight-bold">Filter by departure date between</div> -->
            <!-- <div class="row">
                <div class="col-md-6 mb-3"><label class="form-label">From date</label><select class="form-select"><option selected>Select...</option></select></div>
                <div class="col-md-6 mb-3"><label class="form-label">To date</label><select class="form-select"><option selected>Select...</option></select></div>
              </div> -->
            <!-- </div> -->
            <div class="filter-section mb-4">
              <div class="filter-section-title font-weight-bold">Tour category</div>
              <div class="row">
                <div class="col-6 col-md-3 mb-2">
                  <div class="form-check">
                    <input class="form-check-input" type="checkbox" id="adventure">
                    <label class="form-check-label" for="adventure">Adventure</label>
                  </div>
                </div>
                <div class="col-6 col-md-3 mb-2">
                  <div class="form-check">
                    <input class="form-check-input" type="checkbox" id="heritage">
                    <label class="form-check-label" for="heritage">Heritage</label>
                  </div>
                </div>
                <div class="col-6 col-md-3 mb-2">
                  <div class="form-check">
                    <input class="form-check-input" type="checkbox" id="wildlife">
                    <label class="form-check-label" for="wildlife">Wildlife</label>
                  </div>
                </div>
                <div class="col-6 col-md-3 mb-2">
                  <div class="form-check">
                    <input class="form-check-input" type="checkbox" id="safari">
                    <label class="form-check-label" for="safari">Safari</label>
                  </div>
                </div>

                <div class="col-6 col-md-3 mb-2">
                  <div class="form-check">
                    <input class="form-check-input" type="checkbox" id="trekking">
                    <label class="form-check-label" for="trekking">Trekking</label>
                  </div>
                </div>
                <div class="col-6 col-md-3 mb-2">
                  <div class="form-check">
                    <input class="form-check-input" type="checkbox" id="camping">
                    <label class="form-check-label" for="camping">Camping</label>
                  </div>
                </div>
                <div class="col-6 col-md-3 mb-2">
                  <div class="form-check">
                    <input class="form-check-input" type="checkbox" id="sightseeing">
                    <label class="form-check-label" for="sightseeing">Sightseeing</label>
                  </div>
                </div>
                <div class="col-6 col-md-3 mb-2">
                  <div class="form-check">
                    <input class="form-check-input" type="checkbox" id="offbeat">
                    <label class="form-check-label" for="offbeat">Offbeat</label>
                  </div>
                </div>

                <div class="col-6 col-md-3 mb-2">
                  <div class="form-check">
                    <input class="form-check-input" type="checkbox" id="backpacking">
                    <label class="form-check-label" for="backpacking">Backpacking</label>
                  </div>
                </div>
                <div class="col-6 col-md-3 mb-2">
                  <div class="form-check">
                    <input class="form-check-input" type="checkbox" id="spiritual">
                    <label class="form-check-label" for="spiritual">Spiritual</label>
                  </div>
                </div>
                <div class="col-6 col-md-3 mb-2">
                  <div class="form-check">
                    <input class="form-check-input" type="checkbox" id="summer">
                    <label class="form-check-label" for="summer">Summer</label>
                  </div>
                </div>
                <div class="col-6 col-md-3 mb-2">
                  <div class="form-check">
                    <input class="form-check-input" type="checkbox" id="leisure">
                    <label class="form-check-label" for="leisure">Leisure</label>
                  </div>
                </div>

                <div class="col-6 col-md-3 mb-2">
                  <div class="form-check">
                    <input class="form-check-input" type="checkbox" id="himalaya">
                    <label class="form-check-label" for="himalaya">Himalaya</label>
                  </div>
                </div>
                <div class="col-6 col-md-3 mb-2">
                  <div class="form-check">
                    <input class="form-check-input" type="checkbox" id="festival">
                    <label class="form-check-label" for="festival">Festival</label>
                  </div>
                </div>
                <div class="col-6 col-md-3 mb-2">
                  <div class="form-check">
                    <input class="form-check-input" type="checkbox" id="winter">
                    <label class="form-check-label" for="winter">Winter</label>
                  </div>
                </div>
                <div class="col-6 col-md-3 mb-2">
                  <div class="form-check">
                    <input class="form-check-input" type="checkbox" id="monsoon">
                    <label class="form-check-label" for="monsoon">Monsoon</label>
                  </div>
                </div>
              </div>
            </div>
            <div class="filter-section mb-4">
              <div class="filter-section-title font-weight-bold">Tour type</div>
              <div class="row">
                <div class="col-6 col-md-3 mb-2">
                  <div class="form-check">
                    <input class="form-check-input" type="checkbox" id="family">
                    <label class="form-check-label" for="family">Family</label>
                  </div>
                </div>
                <div class="col-6 col-md-3 mb-2">
                  <div class="form-check">
                    <input class="form-check-input" type="checkbox" id="solo">
                    <label class="form-check-label" for="solo">Solo</label>
                  </div>
                </div>

                <div class="col-6 col-md-3 mb-2">
                  <div class="form-check">
                    <input class="form-check-input" type="checkbox" id="couple">
                    <label class="form-check-label" for="couple">Couple friendly</label>
                  </div>
                </div>
                <div class="col-6 col-md-3 mb-2">
                  <div class="form-check">
                    <input class="form-check-input" type="checkbox" id="bachelors">
                    <label class="form-check-label" for="bachelors">Bachelors</label>
                  </div>
                </div>

                <div class="col-6 col-md-3 mb-2">
                  <div class="form-check">
                    <input class="form-check-input" type="checkbox" id="students">
                    <label class="form-check-label" for="students">Students</label>
                  </div>
                </div>
              </div>
            </div>
            <div class="filter-section mb-4">
              <div class="filter-section-title font-weight-bold">Departure city</div>
              <div class="row">
                <div class="col-6 col-md-3 mb-2">
                  <div class="form-check">
                    <input class="form-check-input" type="checkbox" id="ahmedabad">
                    <label class="form-check-label" for="ahmedabad">Ahmedabad</label>
                  </div>
                </div>
                <div class="col-6 col-md-3 mb-2">
                  <div class="form-check">
                    <input class="form-check-input" type="checkbox" id="mumbai">
                    <label class="form-check-label" for="mumbai">Mumbai</label>
                  </div>
                </div>
                <div class="col-6 col-md-3 mb-2">
                  <div class="form-check">
                    <input class="form-check-input" type="checkbox" id="bhuj">
                    <label class="form-check-label" for="bhuj">Bhuj</label>
                  </div>
                </div>

                <div class="col-6 col-md-3 mb-2">
                  <div class="form-check">
                    <input class="form-check-input" type="checkbox" id="vadodara">
                    <label class="form-check-label" for="vadodara">Vadodara</label>
                  </div>
                </div>
                <div class="col-6 col-md-3 mb-2">
                  <div class="form-check">
                    <input class="form-check-input" type="checkbox" id="pune">
                    <label class="form-check-label" for="pune">Pune</label>
                  </div>
                </div>
                <div class="col-6 col-md-3 mb-2">
                  <div class="form-check">
                    <input class="form-check-input" type="checkbox" id="rajkot">
                    <label class="form-check-label" for="rajkot">Rajkot</label>
                  </div>
                </div>

                <div class="col-6 col-md-3 mb-2">
                  <div class="form-check">
                    <input class="form-check-input" type="checkbox" id="surat">
                    <label class="form-check-label" for="surat">Surat</label>
                  </div>
                </div>
                <div class="col-6 col-md-3 mb-2">
                  <div class="form-check">
                    <input class="form-check-input" type="checkbox" id="delhi">
                    <label class="form-check-label" for="delhi">Delhi</label>
                  </div>
                </div>
              </div>
            </div>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-outline-secondary" id="clearButton">Clear selection</button>
            <button type="submit" class="btn btn-primary show-trips-btn" id="ApplyFilterButton">Show trips</button>
          </div>
        </form>
      </div>
    </div>
  </div>

  <!-- Image Management Modal -->
  <div class="modal fade" id="imageManagementModal" tabindex="-1" aria-labelledby="imageManagementModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-scrollable">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="imageManagementModalLabel">Manage Trip Images</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <input type="hidden" id="tripIdForImages">
          <!-- Main Image Section -->
          <div class="mb-4">
            <h6>Main Image (Required)</h6>
            <div id="mainImagePreview" class="image-preview position-relative d-inline-block">
              <img src="" alt="Main Image" class="img-thumbnail">
              <button class="btn btn-sm btn-warning position-absolute top-0 end-0 update-main-image" title="Update Main Image">
                <i class="bi bi-pencil"></i>
              </button>
            </div>
            <input type="file" class="form-control mt-2 d-none" id="mainImageInput" accept="image/*">
            <small class="text-muted d-block mt-1">This image is required and can only be updated (not deleted).</small>
          </div>
          <!-- Banner Images Section -->
          <div>
            <h6>Banner Images (Optional)</h6>
            <div id="bannerImagesPreview" class="d-flex flex-wrap gap-2"></div>
            <input type="file" class="form-control mt-2" id="bannerImagesInput" multiple accept="image/*">
            <small class="text-muted d-block mt-1">Add up to 12 banner images. Click an image to remove it.</small>
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
          <button type="button" class="btn btn-primary" id="saveImages">Save Changes</button>
        </div>
      </div>
    </div>
  </div>

  <%- include('../partials/footer'); %>
  <%- include('../partials/scripttag'); %>
</body>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Helper to stop event propagation
    const stopPropagation = (e) => e.stopPropagation();

    // Filter Logic
    const filterChips = '<%= filterChips || "" %>'.split(',').filter(Boolean);
    if (filterChips.length > 0) {
      filterChips.forEach(chip => {
        const chipProperty = document.getElementById(chip);
        if (chipProperty) chipProperty.checked = true;
      });
    }
    const searchValue = '<%= Searchvalue || "" %>';
    if (searchValue) document.getElementById('searchValue').value = searchValue;

    const searchEntry = document.getElementById('SearchEntry');
    if (searchEntry) {
      searchEntry.addEventListener('keypress', function(event) {
        if (event.key === 'Enter') {
          document.getElementById('searchValue').value = searchEntry.value;
          updatefilterValueforApiCall();
          getTourListAPICall();
        }
      });
    }

    // Modal Filter Logic
    const filterButton = document.getElementById('filterButton');
    const filtersModal = document.getElementById('filtersModal');
    const clearButton = document.getElementById('clearButton');
    const applyFilterButton = document.getElementById('ApplyFilterButton');
    let modal = filtersModal && typeof bootstrap !== 'undefined' ? new bootstrap.Modal(filtersModal) : null;

    if (filterButton && modal) filterButton.addEventListener('click', () => modal.show());
    if (clearButton) {
      clearButton.addEventListener('click', () => {
        document.querySelectorAll('input[type="checkbox"]').forEach(checkbox => checkbox.checked = false);
        document.querySelectorAll('select').forEach(select => select.selectedIndex = 0);
      });
    }
    if (applyFilterButton) {
      applyFilterButton.addEventListener('click', () => {
        updatefilterValueforApiCall();
        getTourListAPICall();
        if (modal) modal.hide();
      });
    }

    // Button Event Listeners
    // Edit Button (Option 1: Keep as <a>)
    document.querySelectorAll('.edit-tour').forEach(button => {
      button.addEventListener('click', function(e) {
        stopPropagation(e); // Prevent card redirect
        // Default <a> behavior will navigate to /admin/addtours?tripid=<id>
      });
    });

    // Edit Button (Option 2: As <button>, uncomment if preferred)
    /*
    document.querySelectorAll('.edit-tour').forEach(button => {
      button.addEventListener('click', function (e) {
        stopPropagation(e);
        const tripId = this.dataset.id;
        window.location.href = `/admin/addtours?tripid=${tripId}`; // Manual navigation
      });
    });
    */

    // Manage Images
    const imageModalElement = document.getElementById('imageManagementModal');
    let imageModal = imageModalElement && typeof bootstrap !== 'undefined' ? new bootstrap.Modal(imageModalElement) : null;
    const allTours = <%- JSON.stringify(tourPackages || []) %>;

    document.querySelectorAll('.manage-images').forEach(button => {
      button.addEventListener('click', function(e) {
        stopPropagation(e);
        openImageModal(this.dataset.id);
      });
    });

    // Change Status
    document.querySelectorAll('.change-status').forEach(button => {
      button.addEventListener('click', async function(e) {
        stopPropagation(e);
        const tripId = this.dataset.id;
        const currentStatus = this.dataset.active === 'true';
        const newStatus = !currentStatus;

        try {
          const response = await fetch('/admin/changeTripStatus', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
              'X-CSRF-Token': '<%= csrfToken %>'
            },
            body: JSON.stringify({
              tripId,
              isActive: newStatus
            })
          });
          const result = await response.json();
          if (result.success) {
            this.textContent = newStatus ? 'Disable' : 'Enable';
            this.dataset.active = newStatus;
            this.closest('.package-card').classList.toggle('inactive', !newStatus);
            alert(`Trip status changed to ${newStatus ? 'Enabled' : 'Disabled'}`);
          } else {
            alert('Failed to change status: ' + result.message);
          }
        } catch (error) {
          console.error('Error changing status:', error);
          alert('An error occurred while changing the status.');
        }
      });
    });

    // Delete Trip
    // Delete Trip
    document.querySelectorAll('.delete-tour').forEach(button => {
      button.addEventListener('click', async function (e) {
        stopPropagation(e);
        const tripId = this.dataset.id;
        if (confirm('Are you sure you want to delete this trip? This action cannot be undone.')) {
          try {
            // console.log('Sending delete request for tripId:', tripId); // Debug log
            const response = await fetch('/admin/deleteTripDetail', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json',
                'X-CSRF-Token': '<%= csrfToken %>' // Ensure this is valid
              },
              body: JSON.stringify({ tripId })
            });

            // Log full response details
            // console.log('Response status:', response.status);
            if (!response.ok) {
              const text = await response.text();
              // console.error('Raw response:', text);
              throw new Error(`HTTP error! Status: ${response.status}`);
            }

            const result = await response.json();
            // console.log('Response JSON:', result); // Debug log
            if (result.success) {
              this.closest('.package-card').remove();
              alert('Trip deleted successfully');
            } else {
              alert('Failed to delete trip: ' + result.message);
            }
          } catch (error) {
            console.error('Error deleting trip:', error);
            alert('An error occurred while deleting the trip.');
          }
        }
      });
    });
    // Image Management Logic 
    const tripIdInput = document.getElementById('tripIdForImages');
    const mainImagePreview = document.getElementById('mainImagePreview')?.querySelector('img');
    const mainImageInput = document.getElementById('mainImageInput');
    const bannerImagesPreview = document.getElementById('bannerImagesPreview');
    const bannerImagesInput = document.getElementById('bannerImagesInput');
    const saveImagesBtn = document.getElementById('saveImages');

    function openImageModal(tripId) {
      if (!imageModal || !tripIdInput || !mainImagePreview || !bannerImagesPreview) return;
      tripIdInput.value = tripId;
      const tour = allTours.find(t => t._id === tripId);
      if (!tour) return;

      mainImagePreview.src = tour.imageurl || '/images/default.jpg';
      mainImageInput.value = '';
      bannerImagesPreview.innerHTML = '';
      const bannerImages = tour.bannerimages || [];
      bannerImages.forEach((img, index) => {
        const div = document.createElement('div');
        div.className = 'banner-image';
        div.innerHTML = `
          <img src="${img}" alt="Banner ${index + 1}">
          <button class="btn btn-sm btn-danger remove-btn" title="Remove"><i class="bi bi-trash"></i></button>
        `;
        div.querySelector('.remove-btn').addEventListener('click', () => removeBannerImage(tripId, img));
        bannerImagesPreview.appendChild(div);
      });
      bannerImagesInput.value = '';
      imageModal.show();
    }

    if (mainImagePreview && mainImageInput) {
      mainImagePreview.nextElementSibling?.addEventListener('click', () => mainImageInput.click());
      mainImageInput.addEventListener('change', () => {
        if (mainImageInput.files.length > 0) {
          const file = mainImageInput.files[0];
          if (!file.type.startsWith('image/')) {
            alert('Please upload a valid image file.');
            mainImageInput.value = '';
            return;
          }
          mainImagePreview.src = URL.createObjectURL(file);
        }
      });
    }

    async function removeBannerImage(tripId, imageUrl) {
      if (confirm('Are you sure you want to remove this banner image?')) {
        try {
          const response = await fetch('/admin/removeBannerImage', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
              'X-CSRF-Token': '<%= csrfToken %>'
            },
            body: JSON.stringify({
              tripId,
              imageUrl
            })
          });
          const result = await response.json();
          if (result.success) {
            const bannerDiv = bannerImagesPreview.querySelector(`img[src="${imageUrl}"]`).parentElement;
            bannerDiv.remove();
            alert('Banner image removed successfully');
          } else {
            alert('Failed to remove banner image: ' + result.message);
          }
        } catch (error) {
          console.error('Error removing banner image:', error);
          alert('An error occurred while removing the banner image.');
        }
      }
    }

    if (saveImagesBtn) {
      saveImagesBtn.addEventListener('click', async () => {
        const tripId = tripIdInput.value;
        const mainImageFile = mainImageInput.files[0];
        const bannerImageFiles = bannerImagesInput.files;

        if (mainImageFile) {
          if (!mainImageFile.type.startsWith('image/')) {
            alert('Please upload a valid image for the main image.');
            return;
          }
          const mainFormData = new FormData();
          mainFormData.append('image', mainImageFile);
          mainFormData.append('tripId', tripId);
          const mainResponse = await fetch('/admin/updateImageUrl', {
            method: 'POST',
            headers: {
              'X-CSRF-Token': '<%= csrfToken %>'
            },
            body: mainFormData
          });
          const mainData = await mainResponse.json();
          if (!mainData.success) {
            alert('Error updating main image: ' + mainData.message);
            return;
          }
        }

        if (bannerImageFiles.length > 0) {
          const invalidFiles = Array.from(bannerImageFiles).filter(file => !file.type.startsWith('image/'));
          if (invalidFiles.length > 0) {
            alert('Please upload only valid image files for banner images.');
            return;
          }
          const bannerFormData = new FormData();
          for (let i = 0; i < bannerImageFiles.length; i++) {
            bannerFormData.append('image', bannerImageFiles[i]);
          }
          bannerFormData.append('tripId', tripId);
          const bannerResponse = await fetch('/admin/updateBannerImages', {
            method: 'POST',
            headers: {
              'X-CSRF-Token': '<%= csrfToken %>'
            },
            body: bannerFormData
          });
          const bannerData = await bannerResponse.json();
          if (!bannerData.success) {
            alert('Error updating banner images: ' + bannerData.message);
            return;
          }
        }

        alert('Images updated successfully!');
        getTourListAPICall();
        if (imageModal) imageModal.hide();
      });
    }
  });

  // Filter Helper Functions
  function getTourListAPICall() {
    document.getElementById('tourList').submit();
  }

  function removeChip(chip, index) {
    const chipProperty = document.getElementById(chip);
    if (chipProperty) chipProperty.checked = false;
    updatefilterValueforApiCall();
    getTourListAPICall();
  }

  function removeSearchChip(value) {
    document.getElementById('searchValue').value = null;
    updatefilterValueforApiCall();
    getTourListAPICall();
  }

  function getCheckedValues() {
    const categories = {};
    document.querySelectorAll('.filter-section').forEach(section => {
      const sectionTitle = section.querySelector('.filter-section-title')?.innerText.trim();
      if (!sectionTitle) return;
      const checkedValues = Array.from(section.querySelectorAll('input[type="checkbox"]:checked')).map(input => input.id);
      categories[sectionTitle] = checkedValues;
    });
    return categories;
  }

  function updatefilterValueforApiCall() {
    const filterValue = getCheckedValues();
    document.getElementById('filterValue').value = JSON.stringify(filterValue);
  }
</script>

</html>