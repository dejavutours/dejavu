<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title><%= trips.name %> - Trip Details</title>
  <%- include('../partials/headtag'); %>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css" />
  <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet" />
  <style>
    :root {
      --primary-blue: #1a4b8e;
      --light-gray: #f8f9fa;
      --shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
      --transition: 0.3s ease;
    }

    /* Image slider styling */
    .image-slider {
      width: 100%;
      height: 500px;
      border-radius: 12px;
      overflow: hidden;
      position: relative;
    }

    .swiper-slide {
      width: 100%;
      height: 100%;
    }

    .image-slider img {
      width: 100%;
      min-height: 500px;
      object-fit: cover;
    }

    .swiper-button-next,
    .swiper-button-prev {
      color: white;
      background: rgba(0, 0, 0, 0.3);
      width: 40px;
      height: 40px;
      border-radius: 50%;
      transition: background var(--transition);
    }

    .swiper-button-next:hover,
    .swiper-button-prev:hover {
      background: rgba(0, 0, 0, 0.5);
    }

    .swiper-button-next:after,
    .swiper-button-prev:after {
      font-size: 20px;
    }

    .swiper-pagination-bullet {
      background: white;
      opacity: 0.7;
      transition: opacity var(--transition);
    }

    .swiper-pagination-bullet-active {
      opacity: 1;
    }

    .trek-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 20px 0;
    }

    .trek-title {
      margin: 0;
      font-size: 2rem;
    }

    .trek-subtitle {
      color: #6c757d;
      font-size: 0.875rem;
    }

    .btn-book-now {
      background: var(--primary-blue);
      color: white;
      padding: 8px 24px;
      border-radius: 10px;
      text-decoration: none;
      margin: 2px;
      transition: background var(--transition);
    }

    .btn-book-now:hover {
      background: #143c73;
      color: white;
    }

    .city-card {
      width: 150px;
      flex-shrink: 0;
      text-align: center;
      background: #fff;
      padding: 10px;
      border: 1px solid #dee2e6;
      border-radius: 5px;
      cursor: pointer;
      transition: border-color var(--transition), box-shadow var(--transition), transform var(--transition);
    }

    .city-card:hover {
      box-shadow: var(--shadow);
      transform: translateY(-2px);
    }

    .city-card.active {
      border-color: var(--primary-blue);
      box-shadow: var(--shadow);
    }

    .city-card img {
      width: 100%;
      height: 100px;
      object-fit: cover;
      border-radius: 5px;
    }

    #carouselTrack {
      white-space: nowrap;
      scroll-behavior: smooth;
      scrollbar-width: none;
      -ms-overflow-style: none;
    }

    #carouselTrack::-webkit-scrollbar {
      display: none;
    }

    .carousel-control-prev,
    .carousel-control-next {
      position: absolute;
      top: 50%;
      transform: translateY(-50%);
      z-index: 10;
      background: rgba(0, 0, 0, 0.3);
      border-radius: 50%;
      width: 40px;
      height: 40px;
      transition: background var(--transition);
      opacity: 0.8;
    }

    .carousel-control-prev:hover,
    .carousel-control-next:hover {
      background: rgba(0, 0, 0, 0.5);
      opacity: 1;
    }

    .carousel-control-prev {
      left: -10px;
    }

    .carousel-control-next {
      right: -10px;
    }

    @media (max-width: 768px) {
      .trek-header {
        flex-direction: column;
        align-items: flex-start;
        padding: 10px 0;
      }

      .trek-header .d-flex {
        width: 100%;
        justify-content: space-between;
        margin-top: 10px;
      }

      .trek-title {
        font-size: 1.5rem;
      }

      .btn-book-now {
        padding: 6px 16px;
        font-size: 0.9rem;
      }

      .trek-header .fs-5 {
        font-size: 1rem !important;
      }

      .trek-header .fs-6 {
        font-size: 0.8rem !important;
      }
    }

    @media (max-width: 576px) {
      .city-card {
        width: 120px;
      }

      .city-card img {
        height: 80px;
      }

      .image-slider {
        height: 300px;
      }

      .image-slider img {
        min-height: 300px;
      }

      .container {
        padding-left: 10px;
        padding-right: 10px;
      }
    }

    .year-tabs {
      display: flex;
      gap: 15px;
      margin-bottom: 10px;
      flex-wrap: wrap;
    }

    .year-tab {
      background: none;
      border: none;
      padding: 8px 16px;
      cursor: pointer;
      font-weight: 600;
      font-size: 1rem;
      border-bottom: 3px solid transparent;
      transition: border-color var(--transition), color var(--transition);
    }

    .year-tab:hover,
    .year-tab.active {
      border-color: var(--primary-blue);
      color: var(--primary-blue);
    }

    .month-tabs {
      display: flex;
      gap: 10px;
      border-bottom: 2px solid #e0e0e0;
      margin-bottom: 15px;
      flex-wrap: wrap;
    }

    .month-tab {
      background: none;
      border: none;
      padding: 8px 16px;
      cursor: pointer;
      font-weight: 500;
      font-size: 0.875rem;
      border-bottom: 3px solid transparent;
      transition: border-color var(--transition), color var(--transition);
    }

    .month-tab:hover,
    .month-tab.active {
      border-color: var(--primary-blue);
      color: var(--primary-blue);
    }

    .date-selector {
      display: flex;
      gap: 8px;
      overflow-x: auto;
      padding: 8px 0;
    }

    .nice-select ul {
      width: 100%;
    }

    .date-item {
      width: 36px;
      height: 36px;
      display: flex;
      align-items: center;
      justify-content: center;
      border: 1px solid #dee2e6;
      border-radius: 8px;
      cursor: pointer;
      transition: background var(--transition), color var(--transition), border-color var(--transition);
    }

    .date-item:hover {
      background: var(--light-gray);
    }

    .date-item.active {
      background: var(--primary-blue);
      color: white;
      border-color: var(--primary-blue);
    }

    .proceed-btn-book {
      background-color: var(--primary-blue);
      transition: background var(--transition);
    }

    .proceed-btn-book:hover {
      background-color: #143c73;
    }

    .itinerary-section {
      background-color: #fff;
      border-radius: 10px;
      margin-bottom: 15px;
      box-shadow: var(--shadow);
    }

    .itinerary-header {
      padding: 15px 20px;
      background-color: #e7e7e7c7;
      border-top-left-radius: 10px;
      border-top-right-radius: 10px;
      cursor: pointer;
      display: flex;
      justify-content: space-between;
      align-items: center;
      font-weight: bold;
      font-size: clamp(1rem, 2.5vw, 1.5rem);
      /* Responsive font size */
    }

    .itinerary-content {
      padding: 15px 20px;
      display: none;
      animation: fadeIn 0.3s ease-in-out;
      background-color: #eee7e7c7;
    }

    .itinerary-content img {
      max-width: 100%;
      /* Ensures the image scales within its container */
      height: auto;
      /* Maintains aspect ratio */
      display: block;
      /* Prevents inline spacing issues */
      border-radius: 8px;
      /* Slightly rounded corners */
      margin: 10px 0;
      /* Adds spacing above and below */
    }

    .itinerary-content ul li,
    .itinerary-content ol li {
      list-style: inherit;
    }

    .itinerary-section.active .itinerary-content {
      display: block;
    }

    .arrow-icon {
      display: inline-block;
      width: 10px;
      height: 10px;
      border-left: 2px solid #a1a1a1;
      border-bottom: 2px solid #a1a1a1;
      transition: transform var(--transition);
    }

    .arrow-icon.down {
      transform: rotate(315deg);
    }

    .arrow-icon.up {
      transform: rotate(135deg);
    }

    .tab-menu {
      display: flex;
      gap: 15px;
      border-bottom: 2px solid #e0e0e0;
      margin-bottom: 20px;
      flex-wrap: wrap;
    }

    .tab {
      background: none;
      border: none;
      padding: 10px 16px;
      cursor: pointer;
      font-weight: 600;
      font-size: 1rem;
      border-bottom: 3px solid transparent;
      transition: border-color var(--transition), color var(--transition);
    }

    .tab:hover,
    .tab.active {
      border-color: #111;
      color: #111;
    }

    .tab-content {
      display: none;
    }

    .tab-content.active {
      display: block;
    }

    .tab-content.active ol li,
    .tab-content.active ul li {
      list-style: unset;
    }

    #contactModal .modal-content {
      border-radius: 10px;
    }

    #contactModal .modal-header {
      background: var(--primary-blue);
      color: white;
    }

    a {
      text-decoration: none;
    }
  </style>
</head>

<body>
  <%- include('../partials/header'); %>
  <div class="container py-4">
    <div class="trek-header">
      <div>
        <h1 class="trek-title"><%= trips.name %></h1>
        <div class="trek-subtitle"><%- trips.destinations %></div>
      </div>
      <div class="d-flex align-items-center gap-3 bg-light p-3 rounded-4">
        <% if (trips.price && trips.price?.trim?.() !== '' && trips.price !== '0') { %>
        <div class="fs-5">â‚¹<%= trips.price %><span class="fs-6">/person</span></div>
        <% } %>
        <button class="btn-book-now rounded-5" data-bs-toggle="modal" data-bs-target="#contactModal">Book now</button>
      </div>
    </div>

    <div class="image-slider swiper">
      <div class="swiper-wrapper">
        <% if (trips.bannerimages && trips.bannerimages.length > 0) { %>
        <% trips.bannerimages.forEach((img, index) => { %>
        <div class="swiper-slide">
          <img src="<%= img %>" alt="Banner Image <%= index + 1 %>" />
        </div>
        <% }); %>
        <% } else { %>
        <div class="swiper-slide">
          <img src="<%= trips.imageurl %>" alt="Main Image" />
        </div>
        <% } %>
      </div>
      <div class="swiper-pagination"></div>
      <div class="swiper-button-prev"></div>
      <div class="swiper-button-next"></div>
    </div>

    <div class="container my-5">
      <div class="row">
        <div class="col-lg-7">
          <h5 class="fw-bold">About</h5>
          <%- trips.about %>
          <button class="btn btn-light border rounded-pill px-4 py-2">
            <i class="bi bi-download"></i> Download Itinerary
          </button>
        </div>
        <div class="col-lg-5 mt-4 mt-lg-0">
          <div class="row g-3">
            <% if (trips.days && trips.days.trim() !== '') { %>
            <div class="col-6 d-flex align-items-center">
              <div class="icon-circle me-2">
                <i class="bi bi-calendar-event"></i>
              </div>
              <div>
                <small class="text-muted">Duration</small>
                <p class="mb-0 fw-semibold"><%= trips.days %></p>
              </div>
            </div>
            <% } %>
            <% if (trips.tripType && trips.tripType.trim() !== '') { %>
            <div class="col-6 d-flex align-items-center">
              <div class="icon-circle me-2">
                <i class="bi bi-bar-chart"></i>
              </div>
              <div>
                <small class="text-muted">Difficulty</small>
                <p class="mb-0 fw-semibold"><%= trips.tripType %></p>
              </div>
            </div>
            <% } %>
            <% if (trips.altitude && trips.altitude.trim() !== '') { %>
            <div class="col-6 d-flex align-items-center">
              <div class="icon-circle me-2">
                <i class="bi bi-signpost"></i>
              </div>
              <div>
                <small class="text-muted">Altitude</small>
                <p class="mb-0 fw-semibold"><%= trips.altitude %></p>
              </div>
            </div>
            <% } %>
            <% if (trips.bestSession && trips.bestSession.trim() !== '' ) { %>
            <div class="col-6 d-flex align-items-center">
              <div class="icon-circle me-2">
                <i class="bi bi-cloud-sun"></i>
              </div>
              <div>
                <small class="text-muted">Best season</small>
                <p class="mb-0 fw-semibold"><%= trips.bestSession %></p>
              </div>
            </div>
            <% } %>
            <% if (trips.state && trips.state.trim() !== '') { %>
            <div class="col-6 d-flex align-items-center">
              <div class="icon-circle me-2">
                <i class="bi bi-geo-alt"></i>
              </div>
              <div>
                <small class="text-muted">Region</small>
                <p class="mb-0 fw-semibold"><%= trips.state %>, India</p>
              </div>
            </div>
            <% } %>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Departure City Section  -->
  <div class="container-fluid py-2 my-2 bg-light">
    <div class="container">
      <h2 class="fw-bold my-3">Departure City</h2>
      <div class="row">
        <div class="col-lg-8 col-md-6 col-sm-8 col-12">
          <div class="position-relative">
            <div class="d-flex gap-3 overflow-auto py-2" id="carouselTrack">
              <% if (trips.deptcities && trips.deptcities.length > 0) { %>
              <% trips.deptcities.forEach((city, index) => { %>
              <div class="city-card bg-light" onclick="selectCity(this, '<%= city.City %>', '<%= city.State %>', <%= city.price && city.price[0] ? city.price[0].adultPrice : 0 %>)" data-city="<%= city.City %>" data-duration="<%= city.tripDuration %>">
                <img src="<%= city.image %>" alt="<%= city.City %>" />
                <h6 class="mt-2 mb-1"><%= city.City %></h6>
                <small><i class="bi bi-calendar"></i> <%= city.tripDuration %></small><br />
                <small class="fw-semibold text-dark">
                  â‚¹<%= city.price && city.price[0] ? city.price[0].adultPrice : 'N/A' %>/person
                </small>
              </div>
              <% }); %>
              <% } else { %>
              <p class="text-muted">No departure cities available.</p>
              <% } %>
            </div>
            <button id="prevBtn" class="carousel-control-prev d-none" type="button" onclick="slideLeft()">
              <span class="carousel-control-prev-icon" aria-hidden="true"></span>
              <span class="visually-hidden">Previous</span>
            </button>
            <button id="nextBtn" class="carousel-control-next d-none" type="button" onclick="slideRight()">
              <span class="carousel-control-next-icon" aria-hidden="true"></span>
              <span class="visually-hidden">Next</span>
            </button>
          </div>
        </div>

        <div class="col-lg-4 col-md-6 col-12 mt-3 mt-md-0">
          <form id="proceedToBook" action="/bookingTour/<%- trips._id %>" method="GET">
            <div class="card p-3 shadow-sm">
              <h6>Joining from</h6>
              <select class="form-select mb-3" id="selectedCity" name="city" onchange="updateCityFromDropdown()">
                <% if (trips.deptcities && trips.deptcities.length > 0) { %>
                <% trips.deptcities.forEach((city) => { %>
                <option value="<%= city.City %>"><%= city.City %>, <%= city.State %></option>
                <% }); %>
                <% } %>
              </select>
              <h6>Tour Date</h6>
              <select class="form-select mb-3" id="selectedDate" name="date" disabled>
                <!-- Populated dynamically via JavaScript -->
                <option value=""></option>
              </select>
              <button class="btn btn-primary proceed-btn-book w-100" type="button" data-bs-toggle="modal" data-bs-target="#contactModal">Proceed to Book</button>
            </div>
          </form>
        </div>
      </div>

      <div class="mb-4 mt-4">
        <h5 class="mb-3">Available Dates</h5>
        <div class="year-tabs" id="yearTabs"></div>
        <div class="month-tabs" id="monthTabs"></div>
        <div class="date-selector" id="dateSelector"></div>
      </div>
    </div>
  </div>

  <!-- Contact Modal -->
  <div class="modal fade" id="contactModal" tabindex="-1" aria-labelledby="contactModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="contactModalLabel">Contact Details</h5>
          <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <p><strong>Online payment/booking is temporarily disabled.</strong></p>
          <p><strong>Please call/whatsapp us:</strong> +91 851111 7891</p>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
        </div>
      </div>
    </div>
  </div>

  <div class="container mb-5">
    <% if (trips && trips.itinerary && trips.itinerary.length > 0) { %>
    <div class="mt-5">
      <h2>Itinerary</h2>
      <% trips.itinerary.forEach((item, index) => { %>
      <div class="itinerary-section mb-3" id="itinerary-<%= index %>">
        <div class="itinerary-header">
          <%= item.day %>: <%= item.header %>
          <span class="toggle-icon"><span class="arrow-icon down"></span></span>
        </div>
        <div class="itinerary-content">
          <%- item.description %>
        </div>
      </div>
      <% }); %>
    </div>
    <% } %>

    <div class="mt-5 mb-4">
      <h2 class="mb-4">More Information</h2>
      <% 
        // Helper function to check if content is meaningful
        const isContentValid = (content) => {
          if (!content) return false;
          const trimmed = content.trim();
          return trimmed !== '' && trimmed !== '<p><br></p>' && trimmed !== '<p></p>';
        };
      %>
      <div class="tab-menu">
        <% if (isContentValid(trips.package_cost)) { %>
        <button class="tab active" onclick="showTab('package')">Package cost</button>
        <% } %>
        <% if (isContentValid(trips.activities)) { %>
        <button class="tab" onclick="showTab('attractions')">Main attractions</button>
        <% } %>
        <% if (isContentValid(trips.things_to_carry)) { %>
        <button class="tab" onclick="showTab('carry')">Things to carry</button>
        <% } %>
        <% if (isContentValid(trips.bookncancel)) { %>
        <button class="tab" onclick="showTab('bookncancel')">Cancellation Policy</button>
        <% } %>
        <% if (isContentValid(trips.includenexclude)) { %>
        <button class="tab" onclick="showTab('includenexclude')">Inclusion & Exclusion</button>
        <% } %>
        <% if (isContentValid(trips.infonfaq)) { %>
        <button class="tab" onclick="showTab('infonfaq')">Terms & Conditions</button>
        <% } %>
      </div>

      <% if (isContentValid(trips.package_cost)) { %>
      <div id="package" class="tab-content active">
        <%- trips.package_cost %>
      </div>
      <% } %>
      <% if (isContentValid(trips.activities)) { %>
      <div id="attractions" class="tab-content">
        <%- trips.activities %>
      </div>
      <% } %>
      <% if (isContentValid(trips.things_to_carry)) { %>
      <div id="carry" class="tab-content">
        <%- trips.things_to_carry %>
      </div>
      <% } %>
      <% if (isContentValid(trips.bookncancel)) { %>
      <div id="bookncancel" class="tab-content">
        <%- trips.bookncancel %>
      </div>
      <% } %>
      <% if (isContentValid(trips.includenexclude)) { %>
      <div id="includenexclude" class="tab-content">
        <%- trips.includenexclude %>
      </div>
      <% } %>
      <% if (isContentValid(trips.infonfaq)) { %>
      <div id="infonfaq" class="tab-content">
        <%- trips.infonfaq %>
      </div>
      <% } %>
    </div>
  </div>

  <%- include('../partials/footer'); %>
  <%- include('../partials/scripttag'); %>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js"></script>
  <script>
    document.addEventListener("DOMContentLoaded", function() {
      // Swiper initialization
      try {
        const swiper = new Swiper('.image-slider', {
          loop: true,
          autoplay: {
            delay: 3000,
            disableOnInteraction: false,
          },
          navigation: {
            nextEl: '.swiper-button-next',
            prevEl: '.swiper-button-prev',
          },
          pagination: {
            el: '.swiper-pagination',
            clickable: true,
          },
        });
      } catch (e) {
        console.error("Swiper initialization failed:", e);
      }

      // Initial setup
      checkSlideButtons();
      selectFirstCity();
      updateDatesAndTabs();

      // Itinerary toggle functionality
      const headers = document.querySelectorAll(".itinerary-header");
      headers.forEach((header) => {
        header.addEventListener("click", () => {
          const section = header.parentElement;
          section.classList.toggle("active");
          const icon = header.querySelector(".arrow-icon");
          if (section.classList.contains("active")) {
            icon.classList.remove("down");
            icon.classList.add("up");
          } else {
            icon.classList.remove("up");
            icon.classList.add("down");
          }
        });
      });

      // Ensure first tab is active if any tabs exist
      const firstTab = document.querySelector(".tab-menu .tab");
      if (firstTab) {
        firstTab.classList.add("active");
      }
    });

    // Carousel navigation functions
    function slideLeft() {
      const container = document.getElementById("carouselTrack");
      container.scrollBy({
        left: -200,
        behavior: "smooth"
      });
      setTimeout(checkSlideButtons, 300);
    }

    function slideRight() {
      const container = document.getElementById("carouselTrack");
      container.scrollBy({
        left: 200,
        behavior: "smooth"
      });
      setTimeout(checkSlideButtons, 300);
    }

    function checkSlideButtons() {
      const container = document.getElementById("carouselTrack");
      const prevBtn = document.getElementById("prevBtn");
      const nextBtn = document.getElementById("nextBtn");

      const isOverflowing = container.scrollWidth > container.clientWidth;
      prevBtn.classList.toggle("d-none", !isOverflowing || container.scrollLeft === 0);
      nextBtn.classList.toggle("d-none", !isOverflowing || container.scrollLeft + container.clientWidth >= container.scrollWidth - 1);
    }

    window.onresize = checkSlideButtons;

    const deptCities = <%- JSON.stringify(trips.deptcities) %>;
    const trip = <%- JSON.stringify(trips) %>;

    function selectFirstCity() {
      const firstCityCard = document.querySelector(".city-card");
      if (firstCityCard) {
        const city = firstCityCard.getAttribute("data-city");
        const state = firstCityCard.getAttribute("data-state");
        const price = firstCityCard.getAttribute("data-price") || 0;
        selectCity(firstCityCard, city, state, price);
      }
    }

    function selectCity(element, city, state, price) {
      document.querySelectorAll(".city-card").forEach((el) => el.classList.remove("active"));
      element.classList.add("active");

      const selectedCityDropdown = document.getElementById("selectedCity");
      selectedCityDropdown.value = city;

      element.scrollIntoView({
        behavior: "smooth",
        inline: "center",
        block: "nearest"
      });
      updateDatesAndTabs();
      window.scrollTo({
        top: window.scrollY
      });
    }

    function updateCityFromDropdown() {
      const selectedCity = document.getElementById("selectedCity").value;
      const cityCard = document.querySelector(`.city-card[data-city="${selectedCity}"]`);
      if (cityCard) {
        document.querySelectorAll(".city-card").forEach((el) => el.classList.remove("active"));
        cityCard.classList.add("active");
        cityCard.scrollIntoView({
          behavior: "smooth",
          inline: "center",
          block: "nearest"
        });
      }
      updateDatesAndTabs();
      window.scrollTo({
        top: window.scrollY
      });
    }

    function parseTripDuration(duration) {
      const match = duration.match(/(\d+)\s*Day/);
      return match ? parseInt(match[1], 10) : 0;
    }

    function formatDate(date) {
      return date.toLocaleDateString("en-GB", {
        day: "numeric",
        month: "long",
        year: "numeric",
      });
    }

    // Fix 2: Update dates and tabs to reflect all available dates for selected city
    function updateDatesAndTabs() {
      const selectedCity = document.getElementById("selectedCity").value;
      const cityData = deptCities.find((city) => city.City === selectedCity);
      const yearTabs = document.getElementById("yearTabs");
      const monthTabs = document.getElementById("monthTabs");
      const dateSelector = document.getElementById("dateSelector");
      const dateSelect = document.getElementById("selectedDate");

      // Clear existing content
      yearTabs.innerHTML = "";
      monthTabs.innerHTML = "";
      dateSelector.innerHTML = "";
      dateSelect.innerHTML = "";

      if (!cityData || !cityData.dates || cityData.dates.length === 0) {
        monthTabs.innerHTML = "<p class='text-muted'>No dates available for this city.</p>";
        dateSelect.innerHTML = "<option value=''>No dates available</option>";
        return;
      }

      const datesByYear = {};
      cityData.dates.forEach((date) => {
        if (!date.Year || !date.Month || !date.dates) return;
        if (!datesByYear[date.Year]) datesByYear[date.Year] = {};
        if (typeof date.dates === "string") {
          datesByYear[date.Year][date.Month] = date.dates.split(", ").map(Number).sort((a, b) => a - b);
        }
      });

      const years = Object.keys(datesByYear).sort();
      if (years.length === 0) {
        monthTabs.innerHTML = "<p class='text-muted'>No valid years available.</p>";
        dateSelect.innerHTML = "<option value=''>No valid years</option>";
        return;
      }

      const tripDurationDays = parseTripDuration(cityData.tripDuration);

      // Populate tour date dropdown with all available dates
      const dateOptions = [];
      cityData.dates.forEach((date) => {
        if (typeof date.dates === "string") {
          const dates = date.dates.split(", ").map(Number).sort((a, b) => a - b);
          dates.forEach((day) => {
            const startDate = new Date(Date.parse(`${date.Month} ${day}, ${date.Year}`));
            if (isNaN(startDate.getTime())) return; // Skip invalid dates
            const endDate = new Date(startDate);
            endDate.setDate(startDate.getDate() + tripDurationDays);

            const optionValue = `${startDate.toISOString()}|${endDate.toISOString()}`;
            const optionText = `${formatDate(startDate)} - ${formatDate(endDate)}`;
            dateOptions.push({
              startDate,
              value: optionValue,
              text: optionText
            });
          });
        }
      });

      // Sort dates chronologically and populate dropdown
      dateOptions.sort((a, b) => a.startDate - b.startDate);
      dateOptions.forEach(({
        value,
        text
      }, index) => {
        const option = document.createElement("option");
        option.value = value;
        option.text = text;
        dateSelect.appendChild(option);
        if (index === 0) option.selected = true; // Default to first available date
      });

      // Populate year tabs
      years.forEach((year, index) => {
        const tab = document.createElement("button");
        tab.className = `year-tab ${index === 0 ? "active" : ""}`;
        tab.innerText = year;
        tab.onclick = () => showYear(year);
        // yearTabs.appendChild(tab);
      });

      if (years[0]) showYear(years[0]);
    }

    function showYear(year) {
      const selectedCity = document.getElementById("selectedCity").value;
      const cityData = deptCities.find((city) => city.City === selectedCity);
      const monthTabs = document.getElementById("monthTabs");
      const dateSelector = document.getElementById("dateSelector");

      if (!cityData || !cityData.dates) return;

      document.querySelectorAll(".year-tab").forEach((tab) => tab.classList.remove("active"));
      const yearTab = Array.from(document.querySelectorAll(".year-tab")).find((tab) => tab.innerText === year);
      if (yearTab) yearTab.classList.add("active");

      monthTabs.innerHTML = "";
      dateSelector.innerHTML = "";

      const datesByYear = {};
      cityData.dates.forEach((date) => {
        if (!date.Year || !date.Month || !date.dates) return;
        if (!datesByYear[date.Year]) datesByYear[date.Year] = {};
        if (typeof date.dates === "string") {
          datesByYear[date.Year][date.Month] = date.dates.split(", ").map(Number).sort((a, b) => a - b);
        }
      });

      const months = Object.keys(datesByYear[year] || {}).sort((a, b) => {
        const monthOrder = ["January", "February", "March", "April", "May", "June",
          "July", "August", "September", "October", "November", "December"
        ];
        return monthOrder.indexOf(a) - monthOrder.indexOf(b);
      });

      if (months.length === 0) {
        monthTabs.innerHTML = "<p class='text-muted'>No months available for this year.</p>";
        return;
      }

      months.forEach((month, index) => {
        const tab = document.createElement("button");
        tab.className = `month-tab ${index === 0 ? "active" : ""}`;
        tab.innerText = month;
        tab.onclick = () => showMonth(year, month);
        monthTabs.appendChild(tab);
      });

      if (months[0]) showMonth(year, months[0]);
    }

    function showMonth(year, month) {
      const selectedCity = document.getElementById("selectedCity").value;
      const cityData = deptCities.find((city) => city.City === selectedCity);
      const dateSelector = document.getElementById("dateSelector");
      const dateSelect = document.getElementById("selectedDate");

      if (!cityData || !cityData.dates) return;

      document.querySelectorAll(".month-tab").forEach((tab) => tab.classList.remove("active"));
      const monthTab = Array.from(document.querySelectorAll(".month-tab")).find((tab) => tab.innerText === month);
      if (monthTab) monthTab.classList.add("active");

      dateSelector.innerHTML = "";

      const monthData = cityData.dates.find((d) => d.Year === year && d.Month === month);
      if (monthData && typeof monthData.dates === "string") {
        const dates = monthData.dates.split(", ").map(Number).sort((a, b) => a - b);
        const tripDurationDays = parseTripDuration(cityData.tripDuration);

        dates.forEach((date, index) => {
          const div = document.createElement("div");
          div.className = `date-item ${index === 0 ? "active" : ""}`;
          div.innerText = date;
          div.onclick = () => {
            document.querySelectorAll(".date-item").forEach((d) => d.classList.remove("active"));
            div.classList.add("active");

            const startDate = new Date(Date.parse(`${month} ${date}, ${year}`));
            const endDate = new Date(startDate);
            endDate.setDate(startDate.getDate() + tripDurationDays);

            const newValue = `${startDate.toISOString()}|${endDate.toISOString()}`;
            dateSelect.value = newValue; // Set the dropdown value directly
          };
          dateSelector.appendChild(div);
        });

        // Sync the first date with the dropdown
        if (dates.length > 0) {
          const startDate = new Date(Date.parse(`${month} ${dates[0]}, ${year}`));
          const endDate = new Date(startDate);
          endDate.setDate(startDate.getDate() + tripDurationDays);
          const defaultValue = `${startDate.toISOString()}|${endDate.toISOString()}`;
          dateSelect.value = defaultValue;
        }
      }
    }

    function showTab(tabId) {
      const tabs = document.querySelectorAll(".tab");
      const contents = document.querySelectorAll(".tab-content");
      tabs.forEach((tab) => tab.classList.remove("active"));
      contents.forEach((content) => content.classList.remove("active"));
      const activeTab = document.querySelector(`[onclick="showTab('${tabId}')"]`);
      if (activeTab) {
        activeTab.classList.add("active");
        document.getElementById(tabId).classList.add("active");
      }
    }

    function proceedWithBooking() {
      const form = document.getElementById("proceedToBook");
      const url = `${form.action}?city=${encodeURIComponent(form.city.value)}&date=${encodeURIComponent(form.date.value)}`;
      window.location.href = url;
      const modal = bootstrap.Modal.getInstance(document.getElementById("contactModal"));
      modal.hide();
    }
  </script>
</body>

</html>