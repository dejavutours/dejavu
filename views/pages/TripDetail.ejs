<!DOCTYPE html>
<html lang="en">
<head>
  <%- include('../partials/headtag', {isNiceSelect: false}); %>
  <title><%= trips.name %> - Trip Details | Deja-vu Tours</title>
  <!-- Dynamic meta description for SEO -->
  <!-- JSON-LD for SEO -->
  <meta name="description" content="<%= trips.about ? trips.about.replace(/<[^>]+>/g, '').substring(0, 160) : 'Discover ' + trips.name + ' with Deja-vu Tours. Book your trip today!' %>" />
  <meta property="og:title" content="<%= trips.name %> - Deja-vu Tours" />
  <meta property="og:description" content="<%= trips.about ? trips.about.replace(/<[^>]+>/g, '').substring(0, 160) : 'Explore ' + trips.name + ' with Deja-vu Tours. Book your adventure now!' %>" />
  <meta property="og:image" content="<%= trips.bannerimages && trips.bannerimages.length > 0 ? trips.bannerimages[0] : trips.imageurl || 'https://www.dejavutours.in/images/pavagadh-trekking.jpg' %>" />
  <meta property="og:url" content="https://www.dejavutours.in/tripdetail/<%= trips.name %>" />
  <meta property="og:type" content="website" />
  <meta property="og:site_name" content="Deja-vu Tours" />
  <link rel="canonical" href="https://www.dejavutours.in/tripdetail/<%= trips.name %>" />
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css" />
  <script type="application/ld+json">
    {
      "@context": "https://schema.org",
      "@type": "Event",
      "name": "<%= trips.name %>",
      "description": "<%= trips.about ? trips.about.replace(/<[^>]+>/g, '').substring(0, 200) : 'Join our exciting trip to ' + trips.destinations %>",
      "startDate": "<%= trips.deptcities && trips.deptcities[0] && trips.deptcities[0].dates && trips.deptcities[0].dates[0] ? new Date(trips.deptcities[0].dates[0].dates.split(', ')[0] + ' ' + trips.deptcities[0].dates[0].Month + ' ' + trips.deptcities[0].dates[0].Year).toISOString() : '' %>",
      "location": {
        "@type": "Place",
        "name": "<%= trips.destinations %>",
        "address": {
          "@type": "PostalAddress",
          "addressRegion": "<%= trips.state %>",
          "addressCountry": "IN"
        }
      },
      "organizer": {
        "@type": "Organization",
        "name": "Deja-vu Tours Treks and Travel",
        "url": "https://www.dejavutours.in"
      },
      "offers": {
        "@type": "Offer",
        "price": "<%= trips.deptcities && trips.deptcities[0] && trips.deptcities[0].price && trips.deptcities[0].price[0] ? trips.deptcities[0].price[0].adultPrice : trips.price || 'Contact for details' %>",
        "priceCurrency": "INR",
        "availability": "<%= trips.deptcities && trips.deptcities.length > 0 && trips.deptcities[0].City !== 'Unknown' ? 'InStock' : 'OutOfStock' %>",
        "url": "https://www.dejavutours.in/bookingTour/<%= trips._id %>"
      }
    }
  </script>
  <style>
    :root {
  --primary-blue: #1a4b8e;
  --light-gray: #f8f9fa;
  --shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  --transition: 0.3s ease;
  --error-red: #dc3545;
  --premium-gold: #FFD700;
  --dark-gray: #333333;
}

.normal-hight { line-height: normal; }

/* Image slider styling */
.image-slider {
  width: 100%;
  border-radius: 12px;
  overflow: hidden;
  position: relative;
}
.swiper-slide { width: 100%; height: 100%; }
.image-slider img { width: 100%; height: 300px; object-fit: cover; }

.swiper-button-next,
.swiper-button-prev {
  color: white;
  background: rgba(0, 0, 0, 0.3);
  width: 40px;
  height: 40px;
  border-radius: 50%;
  transition: background var(--transition);
}

.swiper-button-next:hover,
.swiper-button-prev:hover {
  background: rgba(0, 0, 0, 0.5);
}

.swiper-button-next:after,
.swiper-button-prev:after { font-size: 20px; }

.swiper-pagination-bullet {
  background: white;
  opacity: 0.7;
  transition: opacity var(--transition);
}

.swiper-pagination-bullet-active { opacity: 1; }

header .subtitle { color: #6c757d; font-size: 0.875rem; }

.abouts:not(.expanded) {
  max-height: 150px;
  overflow: hidden;
  text-overflow: ellipsis;
  -o-text-overflow: ellipsis;
  -ms-text-overflow: ellipsis;
}

.about-mask {
  height: 40px;
  pointer-events: none;
  background-image: linear-gradient(to bottom, rgba(255, 255, 255, 0) 0%, #fff 90%);
  z-index: 1;
}

.about-read-more-btn { text-underline-offset: 2px; }

/* City card styling */
.tour-booking-city-card {
  width: 160px;
  flex-shrink: 0;
  text-align: center;
  background: #fff;
  padding: 12px;
  border: 1px solid #dee2e6;
  border-radius: 8px;
  cursor: pointer;
  transition: border-color var(--transition), box-shadow var(--transition), transform var(--transition);
}

.tour-booking-city-card:hover {
  box-shadow: var(--shadow);
  transform: translateY(-2px);
}

.tour-booking-city-card.active {
  border-color: var(--primary-blue);
  box-shadow: var(--shadow);
}

.tour-booking-city-card img {
  width: 100%;
  height: 100px;
  object-fit: cover;
  border-radius: 6px;
}

.tour-booking-city-card h6 {
  font-size: 0.95rem;
  margin: 8px 0 4px;
}

.tour-booking-city-card small {
  font-size: 0.8rem;
  line-height: 1.3;
}

/* Carousel track */
#carouselTrack {
  white-space: nowrap;
  scroll-behavior: smooth;
  scrollbar-width: none;
  -ms-overflow-style: none;
  padding: 10px 0;
}

#carouselTrack::-webkit-scrollbar { display: none; }

/* Carousel controls */
.carousel-control-prev,
.carousel-control-next {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  z-index: 10;
  background: rgba(0, 0, 0, 0.4);
  border-radius: 50%;
  width: 36px;
  height: 36px;
  transition: background var(--transition);
  opacity: 0.9;
}

.carousel-control-prev:hover,
.carousel-control-next:hover {
  background: rgba(0, 0, 0, 0.6);
  opacity: 1;
}

.carousel-control-prev { left: -15px; }
.carousel-control-next { right: -15px; }

/* Departure city and available dates */
.tour-booking-departure-section { margin-top: 1.5rem; }
.tour-booking-departure-section h5 { font-size: 1.1rem; font-weight: 600; }

.tour-booking-year-tabs,
.tour-booking-month-tabs {
  display: flex;
  gap: 8px;
  flex-wrap: wrap;
  margin-bottom: 12px;
}

.tour-booking-year-tab,
.tour-booking-month-tab {
  background: none;
  border: none;
  padding: 6px 12px;
  cursor: pointer;
  font-weight: 500;
  font-size: 0.9rem;
  border-radius: 6px;
  transition: background var(--transition), color var(--transition);
}

.tour-booking-year-tab:hover,
.tour-booking-year-tab.active,
.tour-booking-month-tab:hover,
.tour-booking-month-tab.active {
  background: var(--primary-blue);
  color: white;
}

.tour-booking-date-selector {
  display: flex;
  flex-wrap: wrap;
  gap: 6px;
  padding: 8px 0;
}

.tour-booking-date-item {
  min-width: 40px;
  padding: 8px;
  font-size: 0.85rem;
  border: 1px solid #dee2e6;
  border-radius: 6px;
  background: #fff;
  cursor: pointer;
  transition: background var(--transition), color var(--transition), border-color var(--transition);
}

.tour-booking-date-item:hover {
  background: var(--light-gray);
  border-color: var(--primary-blue);
}

.tour-booking-date-item.active {
  background: var(--primary-blue);
  color: white;
  border-color: var(--primary-blue);
  box-shadow: var(--shadow);
}

/* Booking summary and payment options */
.tour-booking-summary-card {
  background: #fff;
  border: 1px solid #dee2e6;
  border-radius: 8px;
  padding: 12px;
  max-height: 350px;
  overflow-y: auto;
  scrollbar-width: none;
}

.tour-booking-summary-card::-webkit-scrollbar { display: none; }

.tour-booking-summary-item {
  display: flex;
  justify-content: space-between;
  margin-bottom: 8px;
  font-size: 0.9rem;
}

.tour-booking-summary-item span:first-child { color: #6c757d; }
.tour-booking-summary-item span:last-child { font-weight: 500; }

.tour-booking-payment-options {
  margin-top: 1rem;
  padding: 12px;
  background: var(--light-gray);
  border-radius: 8px;
}

.tour-booking-payment-option {
  display: flex;
  align-items: center;
  gap: 8px;
  margin-bottom: 10px;
  font-size: 0.9rem;
}

.tour-booking-payment-option input[type="radio"] {
  width: 18px;
  height: 18px;
  cursor: pointer;
}

.tour-booking-payment-option label {
  flex: 1;
  cursor: pointer;
  display: flex;
  align-items: center;
  gap: 6px;
}

.tour-booking-payment-option label:hover { color: var(--primary-blue); }

.tour-booking-proceed-btn {
  width: 100%;
  padding: 10px;
  font-size: 0.95rem;
  border-radius: 8px;
  background: var(--primary-blue);
  color: #fff;
  transition: background var(--transition);
}

.tour-booking-proceed-btn:hover { background: #143c73;  color: #fff;}
.tour-booking-proceed-btn:disabled { background: #6c757d; cursor: not-allowed;  color: #fff;}

/* Modal and form styling */
.trip-details-form-select,
.booking-modal-select {
  border: 1px solid #dee2e6;
  border-radius: 8px;
  padding: 10px 14px;
  font-size: 0.95rem;
  color: #333;
  background-color: white;
  box-shadow: var(--shadow);
  transition: border-color var(--transition), box-shadow var(--transition);
}

.trip-details-form-select:focus,
.booking-modal-select:focus {
  border-color: var(--primary-blue);
  box-shadow: 0 0 0 0.2rem rgba(26, 75, 142, 0.25);
  outline: none;
}

.trip-details-form-select:disabled,
.booking-modal-select:disabled {
  background-color: #e9ecef;
  cursor: not-allowed;
}

.trip-details-form-select.is-invalid,
.booking-modal-select.is-invalid {
  border-color: var(--error-red);
}

/* Inquiry modal styling */
.inquiry-modal-content {
  background: linear-gradient(135deg, #ffffff 0%, #f8f9fa 100%);
}

.inquiry-modal-body p { color: var(--dark-gray); }
.inquiry-modal-footer { border-top: 1px solid #dee2e6; }

.inquiry-modal-btn {
  transition: background var(--transition), transform var(--transition);
}

.inquiry-modal-btn-whatsapp {
  --bs-btn-bg: #25D366;
  --bs-btn-hover-bg: #20b358;
  --bs-btn-hover-color: #fff;
  --bs-btn-color: #fff;
}

.inquiry-modal-btn-customize {
  --bs-btn-bg: var(--premium-gold);
  --bs-btn-hover-bg: #e6c200;
  --bs-btn-hover-color: var(--dark-gray);
  --bs-btn-color: var(--dark-gray);
}

.inquiry-modal-btn-ok {
  --bs-btn-bg: var(--primary-blue);
  --bs-btn-hover-bg: #143c73;
  --bs-btn-hover-color: #fff;
  --bs-btn-color: #fff;
}

.inquiry-modal-btn-ok:hover,
.inquiry-modal-btn-customize:hover,
.inquiry-modal-btn-whatsapp:hover {
  transform: translateY(-2px);
}

/* Quick call modal styling */
.quick-call-modal-content {
  border-radius: 16px;
  overflow: hidden;
  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
  border: none;
  max-width: 500px;
  margin: 0 auto;
}

.quick-call-modal-header {
  background: var(--primary-blue);
  background-image: url('/images/exit-modal-banner.avif');
  background-size: 100% 100%;
  background-position: center;
  position: relative;
  border-bottom: none;
  padding: 70px 20px;
  min-height: 140px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.btn{--bs-btn-line-height: 1.55;}
.quick-call-modal-header .btn-close-white {
  position: absolute;
  top: 12px;
  right: 12px;
  z-index: 1;
  filter: brightness(0) invert(1);
}

.quick-call-modal-header .modal-title {
  font-size: 1.25rem;
  font-weight: 700;
  margin-bottom: 8px;
  line-height: 1.3;
}

.quick-call-modal-header p {
  font-size: 0.9rem;
  margin-bottom: 0;
  line-height: 1.4;
}

.quick-call-modal-body {
  padding: 20px 24px;
  background: #fff;
  border-bottom-left-radius: 16px;
  border-bottom-right-radius: 16px;
}

.quick-call-modal-body .form-label {
  font-size: 0.85rem;
  color: var(--dark-gray);
  text-align: left;
  margin-bottom: 6px;
  font-weight: 500;
}

.quick-call-modal-body .form-control,
.quick-call-modal-body .form-select {
  border-radius: 8px;
  border: 1px solid #d1d5db;
  padding: 8px 12px;
  font-size: 0.9rem;
  box-shadow: none;
  transition: border-color var(--transition), box-shadow var(--transition);
}

.quick-call-modal-body .form-select {
  max-width: 90px;
  padding-right: 30px;
  background-size: 10px;
}

.quick-call-modal-body .form-control:focus,
.quick-call-modal-body .form-select:focus {
  border-color: var(--primary-blue);
  box-shadow: 0 0 0 2px rgba(26, 75, 142, 0.2);
  outline: none;
}

.quick-call-modal-body .form-control.is-invalid,
.quick-call-modal-body .form-select.is-invalid {
  border-color: var(--error-red);
}

.quick-call-modal-body .error-message {
  color: var(--error-red);
  font-size: 0.75rem;
  margin-top: 4px;
  display: none;
}

.quick-call-modal-body .notes {
  margin-top: 16px;
}

.quick-call-modal-body .notes .note-icon {
  color: var(--primary-blue);
  margin-right: 8px;
  font-size: 1rem;
}

.quick-call-modal-body .notes span {
  font-size: 0.8rem;
  color: #6b7280;
}

.quick-call-modal-footer {
  padding: 16px 24px;
  border-top: none;
  display: flex;
  justify-content: center;
  background: #fff;
  border-bottom-left-radius: 16px;
  border-bottom-right-radius: 16px;
}

.quick-call-modal-btn {
  background: var(--premium-gold);
  color: var(--dark-gray);
  padding: 10px 24px;
  border-radius: 8px;
  font-size: 0.9rem;
  font-weight: 500;
  transition: background var(--transition), transform var(--transition);
  display: flex;
  align-items: center;
  width: 100%;
  justify-content: center;
}

.quick-call-modal-btn:hover {
  background: #e6c200;
  transform: translateY(-2px);
}

.quick-call-modal-btn:disabled {
  background: #d1d5db;
  color: #6b7280;
  cursor: not-allowed;
}

.quick-call-modal-btn i { font-size: 1rem; }

.custom-card { background-color: #fff; border-radius: 0.75rem; }
.custom-card + .custom-card { margin-top: 1.5rem; }

.transport-option {
  border: 1px solid #dee2e6;
  display: inline-flex;
  border-radius: 6px;
  padding: 6px 12px;
  justify-content: center;
  color: #6c757d;
  cursor: pointer;
  font-size: 0.85rem;
  transition: all var(--transition);
}

.transport-option.active {
  background-color: var(--primary-blue);
  border-color: var(--primary-blue);
  color: #fff;
}

.stickySec {
  z-index: 1;
  left: 0;
  transition: bottom 0.3s ease, position 0.3s ease;
}

.stickySec .card {
  border-radius: 1rem;
  --bs-card-cap-padding-y: 0.75rem;
}

.price strong { font-size: 1.5rem; }
.summaryPara > :not(span) { color: #525252; }

.tab-menu { border-bottom: 2px solid #e0e0e0; }
.tab {
  background: none;
  border: none;
  padding-block: 10px;
  font-weight: 500;
  border-bottom: 3px solid transparent;
  transition: border-color var(--transition), color var(--transition);
}

.tab:hover, .tab.active { border-color: #111; color: #111; }

.tab-content { display: none; }
.tab-content.active { display: block; }
.tab-content li { list-style: unset; }

#contactModal .modal-content { border-radius: 10px; }
#contactModal .modal-header { background: var(--primary-blue); color: white };
a { text-decoration: none; }
.modal-header .modal-title {color: white !important};

.booking-modal-section {
  background: var(--light-gray);
  padding: 12px;
  border-radius: 8px;
  box-shadow: var(--shadow);
}

.trust-signals {
  flex-wrap: wrap;
  gap: 10px;
  font-size: 0.8rem;
  margin-top: 10px;
}

.trust-signals i { font-size: 0.9rem; margin-right: 4px; }

.cutoff-modal-content {
  background: linear-gradient(135deg, #ffffff 0%, #f8f9fa 100%);
  border-radius: 12px;
  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
}

.cutoff-modal-header {
  background: var(--primary-blue);
  color: white;
  border-bottom: none;
  padding: 20px;
}

.cutoff-modal-body {
  padding: 20px;
  text-align: center;
}

.cutoff-modal-footer {
  border-top: none;
  justify-content: center;
  padding: 15px;
}

.cutoff-modal-btn {
  transition: background var(--transition), transform var(--transition);
}

.cutoff-modal-btn:hover { transform: translateY(-2px); }

/* Mobile Booking Styles */
.mobile-booking-fab {
  position: fixed;
  bottom: 20px;
  right: 20px;
  box-shadow: 0 4px 12px rgba(26, 75, 142, 0.3);
  z-index: 1000;
  transition: all var(--transition);
}

.mobile-booking-fab:hover {
  transform: translateY(-2px);
  box-shadow: 0 6px 16px rgba(26, 75, 142, 0.4);
}

  /* Floating book now section for mobile */
  .tour-booking-floating-sec {
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    z-index: 1000;
    opacity: 0;
    visibility: hidden;
    transition: transform var(--transition),  all var(--transition);
    transform: translateY(100%);
  }

  .tour-booking-floating-sec.active {
    opacity: 1;
    visibility: visible;
    transform: translateY(0);
  }

  .tour-booking-floating-backdrop {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.3);
    z-index: 999;
  }
  .tour-booking-floating-backdrop:not(.active) { display: none; }

  .tour-booking-floating-panel {
    background: #fff;
    border-radius: 16px 16px 0 0;
    max-height: 60vh;
    box-shadow: 0 -4px 8px rgba(0, 0, 0, 0.1);
  }

.mobile-booking-summary {
  padding: 15px 20px;
  background: #f8f9fa;
  border-bottom: 1px solid #e9ecef;
}

.mobile-booking-section {
  padding: 20px;
  border-bottom: 1px solid #e9ecef;
}

.mobile-booking-section:last-of-type {
  border-bottom: none;
}

.mobile-city-carousel {
  position: relative;
  overflow: hidden;
}

.mobile-city-track {
  display: flex;
  gap: 12px;
  overflow-x: auto;
  scroll-behavior: smooth;
  padding: 5px 0;
  scrollbar-width: none;
  -ms-overflow-style: none;
}

.mobile-city-track::-webkit-scrollbar {
  display: none;
}

.mobile-city-card {
  min-width: 120px;
  background: white;
  border: 2px solid #e9ecef;
  border-radius: 12px;
  padding: 12px;
  cursor: pointer;
  transition: all var(--transition);
  text-align: center;
  flex-shrink: 0;
}

.mobile-city-card:hover {
  border-color: var(--primary-blue);
  transform: translateY(-2px);
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

.mobile-city-card.active {
  border-color: var(--primary-blue);
  background: #f8f9ff;
  box-shadow: 0 4px 8px rgba(26, 75, 142, 0.2);
}

.mobile-city-card img {
  width: 100%;
  height: 60px;
  object-fit: cover;
  border-radius: 8px;
  margin-bottom: 8px;
}

.mobile-city-info h6 {
  font-size: 0.85rem;
  margin: 0 0 4px;
  font-weight: 600;
}

.mobile-city-info small {
  font-size: 0.75rem;
  color: #6c757d;
  display: block;
  margin-bottom: 4px;
}

.mobile-city-price {
  font-size: 0.8rem;
  font-weight: 600;
  color: var(--primary-blue);
}

.mobile-carousel-btn {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  background: white;
  border: 1px solid #dee2e6;
  border-radius: 50%;
  width: 32px;
  height: 32px;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  z-index: 5;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  transition: all var(--transition);
}

.mobile-carousel-btn:hover {
  background: var(--primary-blue);
  color: white;
  border-color: var(--primary-blue);
}

.mobile-carousel-prev {
  left: -16px;
}

.mobile-carousel-next {
  right: -16px;
}

.mobile-transport-options {
  display: flex;
  flex-wrap: wrap;
  gap: 8px;
}

.mobile-transport-option {
  background: white;
  border: 2px solid #e9ecef;
  border-radius: 8px;
  padding: 8px 12px;
  cursor: pointer;
  transition: all var(--transition);
  font-size: 0.85rem;
  font-weight: 500;
}

.mobile-transport-option:hover {
  border-color: var(--primary-blue);
  color: var(--primary-blue);
}

.mobile-transport-option.active {
  background: var(--primary-blue);
  color: white;
  border-color: var(--primary-blue);
}

.mobile-date-tabs {
  display: flex;
  gap: 6px;
  margin-bottom: 12px;
  overflow-x: auto;
  scrollbar-width: none;
  -ms-overflow-style: none;
}

.mobile-date-tabs::-webkit-scrollbar {
  display: none;
}

.mobile-date-tab {
  background: white;
  border: 1px solid #dee2e6;
  border-radius: 6px;
  padding: 6px 12px;
  cursor: pointer;
  font-size: 0.8rem;
  font-weight: 500;
  white-space: nowrap;
  transition: all var(--transition);
}

.mobile-date-tab:hover {
  border-color: var(--primary-blue);
  color: var(--primary-blue);
}

.mobile-date-tab.active {
  background: var(--primary-blue);
  color: white;
  border-color: var(--primary-blue);
}

.mobile-date-grid {
  display: grid;
  grid-template-columns: repeat(7, 1fr);
  gap: 6px;
}

.mobile-date-item {
  aspect-ratio: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  background: white;
  border: 1px solid #dee2e6;
  border-radius: 6px;
  cursor: pointer;
  font-size: 0.8rem;
  font-weight: 500;
  transition: all var(--transition);
}

.mobile-date-item:hover {
  border-color: var(--primary-blue);
  color: var(--primary-blue);
}

.mobile-date-item.active {
  background: var(--primary-blue);
  color: white;
  border-color: var(--primary-blue);
}

.mobile-payment-options {
  display: flex;
  flex-direction: column;
  gap: 8px;
}

.mobile-payment-option {
  background: white;
  border: 2px solid #e9ecef;
  border-radius: 8px;
  padding: 12px;
  cursor: pointer;
  transition: all var(--transition);
}

.mobile-payment-option:hover {
  border-color: var(--primary-blue);
}

.mobile-payment-option.active {
  border-color: var(--primary-blue);
  background: #f8f9ff;
}

.mobile-payment-option input[type="radio"] {
  display: none;
}

.mobile-payment-option label {
  display: flex;
  justify-content: space-between;
  align-items: center;
  cursor: pointer;
  margin: 0;
  width: 100%;
}

.payment-label {
  font-weight: 500;
  font-size: 0.9rem;
}

.payment-price {
  font-weight: 600;
  font-size: 0.85rem;
}

.mobile-booking-actions {
  background: #f8f9fa;
  border-top: 1px solid #e9ecef;
}

.mobile-booking-actions .btn {
  --bs-btn-border-radius: 0.5rem;
}

.mobile-booking-proceed {
  flex: 1;
  font-weight: 600;
}

/* Hide desktop booking section on mobile */
@media (max-width: 991.98px) {
  .stickySec {
    display: none !important;
  }
}

/* Show desktop booking section on large screens */
@media (min-width: 992px) {  
  .tour-booking-floating-sec {
    display: none;
  }
}

/* Media Queries */
@media screen and (min-width: 992px) {
  body { background-color: #f3f3f6; }
  .image-slider img { height: 500px; }
  .custom-card + .custom-card { margin-top: 1rem; }
  .stickySec { position: sticky; top: 100px; bottom: unset; }
  .stickySec .card, .custom-card, .actionCard { box-shadow: var(--bs-box-shadow-sm); border-radius: 0.75rem; }
  .price strong { font-size: calc(1.5rem + 0.3vw); }
  .btnSec { width: 100%; text-align: end; }
}

@media (max-width: 768px) {
  .trek-title, h3 { font-size: 1.5rem; }
  .accordion-button { font-size: 1rem; }
  .tour-booking-city-card { width: 140px; }
  .tour-booking-city-card img { height: 90px; }
  .tour-booking-year-tab, .tour-booking-month-tab { font-size: 0.85rem; padding: 5px 10px; }
  .tour-booking-date-item { min-width: 36px; padding: 6px; font-size: 0.8rem; }
  .tour-booking-summary-card { max-height: 300px; padding: 10px; }
  .tour-booking-payment-options { padding: 10px; }
  .tour-booking-payment-option { font-size: 0.85rem; }
}

@media (max-width: 576px) {
  .image-slider img { height: 200px; }
  .tour-booking-city-card { width: 120px; }
  .tour-booking-city-card img { height: 80px; }
  .tour-booking-city-card h6 { font-size: 0.85rem; }
  .tour-booking-city-card small { font-size: 0.75rem; }
  .tour-booking-year-tab, .tour-booking-month-tab { font-size: 0.8rem; padding: 4px 8px; }
  .tour-booking-date-item { min-width: 32px; padding: 5px; font-size: 0.75rem; }
  .tour-booking-summary-card { max-height: 250px; font-size: 0.8rem; }
  .tour-booking-payment-options { padding: 8px; }
  .tour-booking-payment-option { font-size: 0.8rem; }
  .quick-call-modal-content { max-width: 100%; margin: 10px; }
  .quick-call-modal-header { min-height: 120px; padding: 20px 16px; }
  .quick-call-modal-header .modal-title { font-size: 1.1rem; }
  .quick-call-modal-header p { font-size: 0.85rem; }
  .quick-call-modal-header .btn-close-white { top: 10px; right: 10px; }
  .quick-call-modal-body { padding: 16px 20px; }
  .quick-call-modal-body .form-label { font-size: 0.8rem; }
  .quick-call-modal-body .form-control, .quick-call-modal-body .form-select { font-size: 0.85rem; padding: 6px 10px; }
  .quick-call-modal-body .form-select { max-width: 80px; }
  .quick-call-modal-body .error-message { font-size: 0.7rem; }
  .quick-call-modal-body .notes .note-icon { font-size: 0.9rem; margin-right: 6px; }
  .quick-call-modal-body .notes span { font-size: 0.75rem; }
  .quick-call-modal-footer { padding: 12px 20px; }
  .quick-call-modal-btn { font-size: 0.85rem; padding: 8px 20px; }
}

@media (max-width: 400px) {
  .quick-call-modal-header { min-height: 110px; padding: 16px 12px; }
  .quick-call-modal-header .modal-title { font-size: 1rem; }
  .quick-call-modal-header p { font-size: 0.8rem; }
  .quick-call-modal-body { padding: 12px 16px; }
  .quick-call-modal-body .form-label { font-size: 0.75rem; }
  .quick-call-modal-body .form-control, .quick-call-modal-body .form-select { font-size: 0.8rem; padding: 6px 8px; }
  .quick-call-modal-body .form-select { max-width: 70px; }
  .quick-call-modal-body .error-message { font-size: 0.65rem; }
  .quick-call-modal-body .notes .note-icon { font-size: 0.85rem; margin-right: 5px; }
  .quick-call-modal-body .notes span { font-size: 0.7rem; }
  .quick-call-modal-footer { padding: 10px 16px; }
  .quick-call-modal-btn { font-size: 0.8rem; padding: 8px 16px; } 
}

/* Recommended Trips Section Styles */
.recommended-trips-section {
  background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
  position: relative;
  overflow: hidden;
}

.recommended-trips-section::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="grain" width="100" height="100" patternUnits="userSpaceOnUse"><circle cx="25" cy="25" r="1" fill="%23ffffff" opacity="0.1"/><circle cx="75" cy="75" r="1" fill="%23ffffff" opacity="0.1"/><circle cx="50" cy="10" r="0.5" fill="%23ffffff" opacity="0.1"/><circle cx="10" cy="60" r="0.5" fill="%23ffffff" opacity="0.1"/><circle cx="90" cy="40" r="0.5" fill="%23ffffff" opacity="0.1"/></pattern></defs><rect width="100" height="100" fill="url(%23grain)"/></svg>');
  pointer-events: none;
}

.recommended-trips-header {
  position: relative;
  z-index: 2;
}

.recommended-trips-title {
  font-size: 2.5rem;
  font-weight: 700;
  color: var(--primary-blue);
  margin-bottom: 0.5rem;
  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.recommended-trips-subtitle {
  font-size: 1.1rem;
  font-weight: 400;
  color: #6c757d;
}

.recommended-trips-slider {
  position: relative;
  margin: 2rem 0;
}

.recommended-trips-track {
  display: flex;
  gap: 1.5rem;
  overflow-x: auto;
  scroll-behavior: smooth;
  padding: 1rem 0;
  scrollbar-width: none;
  -ms-overflow-style: none;
}

.recommended-trips-track::-webkit-scrollbar {
  display: none;
}

.recommended-trip-card {
  min-width: 280px;
  max-width: 280px;
  background: white;
  border-radius: 12px;
  overflow: hidden;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.08);
  transition: all 0.3s ease;
  position: relative;
  border: 1px solid #e9ecef;
  cursor: pointer;
}

.recommended-trip-card:hover {
  transform: translateY(-4px);
  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.12);
  border-color: var(--primary-blue);
}

.trip-card-image {
  position: relative;
  height: 160px;
  overflow: hidden;
}

.trip-card-image img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  transition: transform 0.3s ease;
}

.recommended-trip-card:hover .trip-card-image img {
  transform: scale(1.03);
}

.trip-card-group-label {
  position: absolute;
  top: 12px;
  left: 12px;
  background: rgba(26, 75, 142, 0.9);
  color: white;
  padding: 4px 8px;
  border-radius: 6px;
  font-size: 0.75rem;
  font-weight: 600;
  display: flex;
  align-items: center;
  gap: 4px;
  backdrop-filter: blur(10px);
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
}

.trip-card-group-label i {
  font-size: 0.7rem;
}

.trip-card-price-badge {
  position: absolute;
  bottom: 12px;
  right: 12px;
  background: rgba(255, 255, 255, 0.95);
  backdrop-filter: blur(10px);
  padding: 6px 10px;
  border-radius: 8px;
  font-weight: 700;
  color: var(--primary-blue);
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
  display: flex;
  align-items: center;
  gap: 2px;
}

.price-currency {
  font-size: 0.8rem;
  font-weight: 600;
}

.price-amount {
  font-size: 1rem;
  font-weight: 800;
}

.trip-card-content {
  padding: 1rem;
}

.trip-card-title {
  font-size: 1rem;
  font-weight: 600;
  color: #2c3e50;
  margin-bottom: 0.75rem;
  line-height: 1.4;
  height: 2.8rem;
  overflow: hidden;
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
  line-clamp: 2;
  word-wrap: break-word;
  word-break: break-word;
  hyphens: auto;
}

.trip-card-meta {
  display: flex;
  justify-content: space-between;
  align-items: center;
  font-size: 0.8rem;
  color: #6c757d;
  gap: 0.5rem;
}

.trip-card-duration,
.trip-card-state {
  display: flex;
  align-items: center;
  gap: 0.25rem;
  flex: 1;
  min-width: 0;
}

.trip-card-duration i,
.trip-card-state i {
  color: var(--primary-blue);
  font-size: 0.75rem;
  flex-shrink: 0;
}

.trip-card-duration span,
.trip-card-state span {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.recommended-trips-nav {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  background: white;
  border: 2px solid var(--primary-blue);
  border-radius: 50%;
  width: 50px;
  height: 50px;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  z-index: 10;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
  transition: all 0.3s ease;
  color: var(--primary-blue);
  font-size: 1.2rem;
}

.recommended-trips-nav:hover {
  background: var(--primary-blue);
  color: white;
  transform: translateY(-50%) scale(1.1);
}

.recommended-trips-prev {
  left: -10px;
}

.recommended-trips-next {
  right: -10px;
}

.recommended-view-more {
  --bs-btn-padding-y: 1rem;
  --bs-btn-padding-x: 2rem;
  font-weight: 600;
  transition: all 0.3s ease;
}

.recommended-view-more:hover {
  transform: translateY(-3px);
  box-shadow: 0 8px 25px rgba(26, 75, 142, 0.3);
}

/* Let's Plan Your Next Trip Section */
.plan-next-trip-section {
  margin-top: 3rem;
}

.plan-next-trip-card {
  background: linear-gradient(135deg, var(--primary-blue) 0%, #143c73 100%);
  border-radius: 20px;
  padding: 2.5rem;
  position: relative;
  overflow: hidden;
  box-shadow: 0 10px 30px rgba(26, 75, 142, 0.3);
}

.plan-next-trip-card::before {
  content: '';
  position: absolute;
  top: -50%;
  right: -20%;
  width: 200px;
  height: 200px;
  background: rgba(255, 255, 255, 0.1);
  border-radius: 50%;
  animation: float 6s ease-in-out infinite;
}

.plan-next-trip-card::after {
  content: '';
  position: absolute;
  bottom: -30%;
  left: -10%;
  width: 150px;
  height: 150px;
  background: rgba(255, 255, 255, 0.05);
  border-radius: 50%;
  animation: float 8s ease-in-out infinite reverse;
}

@keyframes float {
  0%, 100% { transform: translateY(0px) rotate(0deg); }
  50% { transform: translateY(-20px) rotate(180deg); }
}

.plan-next-trip-content {
  display: flex;
  align-items: center;
  gap: 2rem;
  position: relative;
  z-index: 2;
}

.plan-next-trip-icon {
  flex-shrink: 0;
  width: 80px;
  height: 80px;
  background: rgba(255, 255, 255, 0.2);
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  backdrop-filter: blur(10px);
  border: 2px solid rgba(255, 255, 255, 0.3);
}

.plan-next-trip-icon i {
  font-size: 2rem;
  color: white;
  animation: pulse 2s ease-in-out infinite;
}

@keyframes pulse {
  0%, 100% { transform: scale(1); }
  50% { transform: scale(1.1); }
}

.plan-next-trip-text {
  flex: 1;
  color: white;
}

.plan-next-trip-title {
  font-size: 2rem;
  font-weight: 700;
  margin-bottom: 0.5rem;
  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
}

.plan-next-trip-subtitle {
  font-size: 1.1rem;
  opacity: 0.9;
  margin-bottom: 0;
  line-height: 1.5;
}

.plan-next-trip-actions {
  display: flex;
  gap: 1rem;
  flex-shrink: 0;
}

.plan-next-trip-btn {
  padding: 0.75rem 1.5rem;
  border-radius: 50px;
  font-weight: 600;
  text-decoration: none;
  transition: all 0.3s ease;
  position: relative;
  overflow: hidden;
  border: 2px solid transparent;
}

.plan-next-trip-btn::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
  transition: left 0.5s;
}

.plan-next-trip-btn:hover::before {
  left: 100%;
}

.plan-next-trip-btn.btn-primary {
  background: white;
  color: var(--primary-blue);
  border-color: white;
}

.plan-next-trip-btn.btn-primary:hover {
  background: #f8f9fa;
  transform: translateY(-2px);
  box-shadow: 0 8px 25px rgba(255, 255, 255, 0.3);
}

.plan-next-trip-btn.btn-outline-success {
  background: transparent;
  color: white;
  border-color: rgba(255, 255, 255, 0.5);
}

.plan-next-trip-btn.btn-outline-success:hover {
  background: rgba(255, 255, 255, 0.1);
  border-color: white;
  transform: translateY(-2px);
  box-shadow: 0 8px 25px rgba(255, 255, 255, 0.2);
}

/* Responsive Design for Recommended Trips */
@media (max-width: 768px) {
  .recommended-trips-title {
    font-size: 2rem;
  }
  
  .recommended-trip-card {
    min-width: 260px;
    max-width: 260px;
  }
  
  .trip-card-image {
    height: 140px;
  }
  
  .trip-card-content {
    padding: 0.875rem;
  }
  
  .trip-card-title {
    font-size: 0.95rem;
    height: 2.6rem;
  }
  
  .trip-card-meta {
    font-size: 0.75rem;
  }
  
  .recommended-trips-nav {
    width: 40px;
    height: 40px;
    font-size: 1rem;
  }
  
  /* Plan Next Trip Mobile */
  .plan-next-trip-content {
    flex-direction: column;
    text-align: center;
    gap: 1.5rem;
  }
  
  .plan-next-trip-title {
    font-size: 1.5rem;
  }
  
  .plan-next-trip-subtitle {
    font-size: 1rem;
  }
  
  .plan-next-trip-actions {
    flex-direction: column;
    width: 100%;
  }
  
  .plan-next-trip-btn {
    width: 100%;
    justify-content: center;
  }
}

@media (max-width: 576px) {
  .recommended-trips-title {
    font-size: 1.75rem;
  }
  
  .recommended-trip-card {
    min-width: 240px;
    max-width: 240px;
  }
  
  .trip-card-image {
    height: 120px;
  }
  
  .trip-card-content {
    padding: 0.75rem;
  }
  
  .trip-card-title {
    font-size: 0.9rem;
    height: 2.4rem;
  }
  
  .trip-card-meta {
    font-size: 0.7rem;
    flex-direction: column;
    gap: 0.25rem;
    align-items: flex-start;
  }
  
  .recommended-trips-nav {
    display: none;
  }
  
  .recommended-trips-track {
    padding: 0.5rem 0;
  }
  
  /* Plan Next Trip Small Mobile */
  .plan-next-trip-card {
    padding: 1.5rem;
  }
  
  .plan-next-trip-icon {
    width: 60px;
    height: 60px;
  }
  
  .plan-next-trip-icon i {
    font-size: 1.5rem;
  }
  
  .plan-next-trip-title {
    font-size: 1.25rem;
  }
  
  .plan-next-trip-subtitle {
    font-size: 0.9rem;
  }
}
  </style>
</head>
<body>
  <%- include('../partials/header', {isSearch: false}); %>
  <div class="container-xl pt-4">
    <section class="image-slider swiper">
      <div class="swiper-wrapper">
        <% if (trips.bannerimages && trips.bannerimages.length > 0) { %>
        <% trips.bannerimages.forEach((img, index) => { %>
        <div class="swiper-slide">
          <img src="<%= img %>" alt="Banner Image <%= index + 1 %>" loading="lazy" onerror="this.onerror=null; this.src='/images/placholderbanner.jpg';" />
        </div>
        <% }); %>
        <% } else { %>
        <div class="swiper-slide">
          <img src="<%= trips.imageurl %>" alt="Main Image" loading="lazy" onerror="this.onerror=null; this.src='/images/placholderbanner.jpg';">
        </div>
        <% } %>
      </div>
      <div class="swiper-pagination"></div>
      <div class="swiper-button-prev"></div>
      <div class="swiper-button-next"></div>
    </section>
  </div>
  <div class="container-md container-lg pt-4">
    <section class="row g-3 mt-0">
      <div class="col-lg-7 col-xl-8 detailSec">
        <div class="custom-card p-lg-3">
          <h1 class="trek-title"><%= trips.name %></h1>
          <article class="subtitle"><%- trips.destinations %></article>
          <div class="d-flex flex-wrap d-lg-none gap-2 align-items-center pt-2">
            <a href="/dreamtrip" class="btn btn-app-primary rounded-pill" target="_blank">Inquire Now</a>
            <button class="btn btn-app-stroked-primary rounded-pill" data-bs-toggle="modal" data-bs-target="#quickCallModal">Request Call Back</button>
          </div>
        </div>
        <article class="custom-card p-lg-3">
          <h3>About</h3>
          <div class="about-wrapper position-relative">
            <div class="abouts"><%- trips.about %></div>
          </div>
        </article>
        <article class="custom-card p-lg-3">
          <% if (trips.documentUrl) { %>
          <button class="btn btn-light border rounded-pill px-4 py-2" onclick="downloadItinerary()">
            <i class="bi bi-download"></i> Download Itinerary
          </button>
          <% } else { %>
          <p class="text-muted pt-1">Itinerary PDF not available.</p>
          <% } %>
          <div class="row g-3 normal-hight">
            <% if (trips.days && trips.days.trim() !== '') { %>
            <div class="col-6 col-sm-4 d-flex gap-2 align-items-center">
              <span class="icon-circle">
                <i class="bi bi-calendar-event"></i>
              </span>
              <p class="mb-0">
                <small class="text-muted">Duration</small>
                <span class="fw-semibold d-block"><%= trips.days %></span>
              </p>
            </div>
            <% } %>
            <% if (trips.tripType && trips.tripType.trim() !== '') { %>
            <div class="col-6 col-sm-4 d-flex gap-2 align-items-center">
              <span class="icon-circle">
                <i class="bi bi-bar-chart"></i>
              </span>
              <p class="mb-0">
                <small class="text-muted">Difficulty</small>
                <span class="fw-semibold d-block"><%= trips.tripType %></span>
              </p>
            </div>
            <% } %>
            <% if (trips.altitude && trips.altitude.trim() !== '') { %>
            <div class="col-6 col-sm-4 d-flex gap-2 align-items-center">
              <span class="icon-circle">
                <i class="bi bi-signpost"></i>
              </span>
              <p class="mb-0">
                <small class="text-muted">Altitude</small>
                <span class="fw-semibold d-block"><%= trips.altitude %></span>
              </p>
            </div>
            <% } %>
            <% if (trips.bestSession && trips.bestSession.length > 0) { %>
            <div class="col-6 col-sm-4 d-flex gap-2 align-items-center">
              <span class="icon-circle">
                <i class="bi bi-cloud-sun"></i>
              </span>
              <p class="mb-0">
                <small class="text-muted">Best season</small>
                <span class="fw-semibold d-block"><%= trips.bestSession.join(', ') %></span>
              </p>
            </div>
            <% } %>
            <% if (trips.state && trips.state.trim() !== '') { %>
            <div class="col-6 col-sm-4 d-flex gap-2 align-items-center">
              <span class="icon-circle">
                <i class="bi bi-geo-alt"></i>
              </span>
              <p class="mb-0">
                <small class="text-muted">Region</small>
                <span class="fw-semibold d-block"><%= trips.state %>, India</span>
              </p>
            </div>
            <% } %>
          </div>
        </article>
        <article class="custom-card p-lg-3">
          <h3>Departure City</h3>
          <div class="position-relative">
            <div class="d-flex gap-3 overflow-auto py-2" id="carouselTrack">
              <% if (trips.deptcities && trips.deptcities.length > 0 && trips.deptcities[0].City !== 'Unknown') { %>
                <% trips.deptcities.forEach((city, index) => { %>
                <div class="tour-booking-city-card bg-light <%= index === 0 ? 'active' : '' %>" 
                     data-city="<%= city.City %>" 
                     data-state="<%= city.State %>" 
                     data-price="<%= city.price && city.price[0] ? city.price[0].adultPrice : 0 %>" 
                     data-duration="<%= city.tripDuration %>" 
                     data-cutoff="<%= city.bookingCutoffDays || '0' %>"
                     data-partial="<%= city.partialPayment || '0' %>">
                  <img src="<%= city.image %>" alt="<%= city.City %>" loading="lazy" onerror="this.onerror=null; this.src='/images/placeholder.jpg';" />
                  <h6 class="mt-2 mb-1"><%= city.City %></h6>
                  <small><i class="bi bi-calendar-event"></i> <%= city.tripDuration %></small><br />
                  <small class="fw-semibold text-dark">
                    ₹<%= city.price && city.price[0] ? city.price[0].adultPrice : 'N/A' %>/person
                  </small>
                </div>
                <% }); %>
              <% } else { %>
                <p class="text-muted">No departure cities available.</p>
              <% } %>
            </div>
            <button id="prevBtn" class="carousel-control-prev d-none" type="button" onclick="slideLeft()">
              <span class="carousel-control-prev-icon" aria-hidden="true"></span>
              <span class="visually-hidden">Previous</span>
            </button>
            <button id="nextBtn" class="carousel-control-next d-none" type="button" onclick="slideRight()">
              <span class="carousel-control-next-icon" aria-hidden="true"></span>
              <span class="visually-hidden">Next</span>
            </button>
          </div>
          <% if (trips.deptcities && trips.deptcities.length > 0 && trips.deptcities[0].City !== 'Unknown') { %>
          <h5 class="pt-3">Travelling Options</h5>
          <div class="transport-options d-flex flex-wrap gap-2" id="transportOptions" role="radiogroup" aria-label="Transport Types"></div>
          <div class="mt-4">
            <h5>Available Dates</h5>
            <div class="tour-booking-year-tabs" id="yearTabs"></div>
            <div class="tour-booking-month-tabs" id="monthTabs"></div>
            <div class="tour-booking-date-selector" id="dateSelector"></div>
          </div>
          <% } %>
        </article>
        <% if (trips && trips.itinerary && trips.itinerary.length > 0) { %>
          <article class="custom-card p-lg-3">
            <h3>Itinerary</h3>
            <div class="accordion" id="accordionPanelsStayOpenExample">
              <% trips.itinerary.forEach((item, index) => { %>
                <% if (!item.day || !item.header || !item.description) return; %>
                <div class="accordion-item">
                  <h3 class="accordion-header">
                    <button class="accordion-button <%= index === 0 ? '' : 'collapsed' %>" type="button" data-bs-toggle="collapse" data-bs-target="#itinerary-<%= index %>" aria-expanded="<%= index === 0 ? 'true' : 'false' %>" aria-controls="itinerary-<%= index %>"><%= item.day %>: <%= item.header %></button>
                  </h3>
                  <div id="itinerary-<%= index %>" class="accordion-collapse collapse<%= index === 0 ? ' show' : '' %>">
                    <div class="accordion-body"><%- item.description %></div>
                  </div>
                </div>
              <% }); %>
            </div>
          </article>
        <% } %>
        <article class="pt-4 mt-3 mt-lg-0">
          <h3>More Information</h3>
          <div class="tab-menu more-info-tabs d-flex overflow-auto gap-3 mb-3 scroll-hide h-scroll">
            <% if (trips.package_cost) { %>
            <button class="tab text-nowrap active" onclick="showTab('package')"><i class="bi bi-wallet2"></i> Package Cost</button>
            <% } %>
            <% if (trips.activities) { %>
            <button class="tab text-nowrap" onclick="showTab('attractions')"><i class="bi bi-star-fill"></i> Main Attractions</button>
            <% } %>
            <% if (trips.things_to_carry) { %>
            <button class="tab text-nowrap" onclick="showTab('carry')"><i class="bi bi-backpack"></i> Things to Carry</button>
            <% } %>
            <% if (trips.bookncancel) { %>
            <button class="tab text-nowrap" onclick="showTab('bookncancel')"><i class="bi bi-info-circle"></i> Cancellation Policy</button>
            <% } %>
            <% if (trips.includenexclude) { %>
            <button class="tab text-nowrap" onclick="showTab('includenexclude')"><i class="bi bi-check-circle"></i> Inclusion & Exclusion</button>
            <% } %>
            <% if (trips.infonfaq) { %>
            <button class="tab text-nowrap" onclick="showTab('infonfaq')"><i class="bi bi-question-circle"></i> Info & FAQs</button>
            <% } %>
          </div>
          <% if (trips.package_cost) { %>
          <div id="package" class="tab-content active"><%- trips.package_cost %></div>
          <% } %>
          <% if (trips.activities) { %>
          <div id="attractions" class="tab-content"><%- trips.activities %></div>
          <% } %>
          <% if (trips.things_to_carry) { %>
          <div id="carry" class="tab-content"><%- trips.things_to_carry %></div>
          <% } %>
          <% if (trips.bookncancel) { %>
          <div id="bookncancel" class="tab-content"><%- trips.bookncancel %></div>
          <% } %>
          <% if (trips.includenexclude) { %>
          <div id="includenexclude" class="tab-content"><%- trips.includenexclude %></div>
          <% } %>
          <% if (trips.infonfaq) { %>
          <div id="infonfaq" class="tab-content"><%- trips.infonfaq %></div>
          <% } %>
        </article>
      </div>
      <aside class="col-lg-5 col-xl-4 align-self-start stickySec">
        <form class="card border-0 overflow-hidden" id="proceedToBook" action="/bookingTour/<%- trips._id %>" method="GET">
          <p class="card-header mb-0 bg-primary bg-opacity-10 fw-bold fs-5 border-primary-subtle">Book Now</p>
          <div class="card-body d-flex flex-column gap-2">
            <div class="tour-booking-summary-card">
              <h6 class="fw-bold mb-3"><b>Booking Summary</b></h6>
              <div class="booking-summary-item">
                <span class="text-primary-emphasis">Departure City:</span>
                <span class="booking-summary-city">Not selected</span>
              </div>
              <div class="booking-summary-item">
                <span class="text-primary-emphasis">Tour Date:</span>
                <span class="booking-summary-date">Not selected</span>
              </div>
              <div class="booking-summary-item">
                <span class="text-primary-emphasis">Trip Duration:</span>
                <span class="booking-summary-duration">Not selected</span>
              </div>
              <div class="booking-summary-item">
                <span class="text-primary-emphasis">Price:</span>
                <span class="booking-summary-price">Not selected</span>
              </div>
              <div class="booking-summary-item">
                <span class="text-primary-emphasis">Transport Type:</span>
                <span class="booking-summary-transport">Not selected</span>
              </div>
              <% if(trips.seats){ %>
              <div class="booking-summary-item">
                <span>Seats Available</span>
                <span class="booking-summary-seats text-success"><%= trips.seats %> left!</span>
              </div>
              <% } %>
            </div>
            <label for="selectedCity" class="form-label visually-hidden">Joining from</label>
            <select class="form-select mb-3 visually-hidden" id="selectedCity" name="city" onchange="updateCityFromDropdown()">
              <% if (trips.deptcities && trips.deptcities.length > 0 && trips.deptcities[0].City !== 'Unknown') { %>
              <% trips.deptcities.forEach((city) => { %>
              <option value="<%= city.City %>" 
                      data-state="<%= city.State %>" 
                      data-price="<%= city.price && city.price[0] ? city.price[0].adultPrice : 'N/A' %>" 
                      data-duration="<%= city.tripDuration %>" 
                      data-cutoff="<%= city.bookingCutoffDays || '0' %>"
                      data-partial="<%= city.partialPayment || '0' %>">
                <%= city.City %>, <%= city.State %>
              </option>
              <% }); %>
              <% } else { %>
              <option value="">No cities available</option>
              <% } %>
            </select>
            <p class="error-message visually-hidden" id="cityError">Please select a city.</p>
            <label for="selectedDate" class="form-label visually-hidden">Tour Date</label>
            <select class="form-select mb-3 visually-hidden" id="selectedDate" name="date" disabled>
              <option value="">Select a date</option>
            </select>
            <p class="error-message visually-hidden" id="dateError">Please select a date.</p>
            <label for="selectedTransport" class="form-label visually-hidden">Transport Type</label>
            <select class="form-select mb-3 visually-hidden" id="selectedTransport" name="transportType">
              <option value="">Select a transport type</option>
            </select>
            <label for="paymentOption" class="form-label visually-hidden">Payment Option</label>
            <select class="form-select mb-3 visually-hidden" id="paymentOption" name="paymentOption">
              <option value="full">Pay Full Amount</option>
              <% if (trips.deptcities && trips.deptcities.length > 0 && trips.deptcities[0].partialPayment && parseFloat(trips.deptcities[0].partialPayment) > 0) { %>
              <option value="partial">Pay Partial Amount</option>
              <% } %>
              <option value="bnpl">Book Now, Pay Later</option>
            </select>
            <div class="tour-booking-payment-options">
              <h6 class="fw-bold mb-3">Payment Options</h6>
              <div class="tour-booking-payment-option">
                <input type="radio" id="payFull" name="paymentOptionRadio" value="full" checked>
                <label for="payFull">Pay Full Amount <span class="booking-summary-price-full">Not selected</span></label>
              </div>
              <% if (trips.deptcities && trips.deptcities.length > 0 && trips.deptcities[0].partialPayment && parseFloat(trips.deptcities[0].partialPayment) > 0) { %>
              <div class="tour-booking-payment-option">
                <input type="radio" id="payPartial" name="paymentOptionRadio" value="partial">
                <label for="payPartial">Pay Partial <span class="booking-summary-price-partial">₹<%= trips.deptcities[0].partialPayment %></span>, Balance Later</label>
              </div>
              <% } %>
              <div class="tour-booking-payment-option">
                <input type="radio" id="payLater" name="paymentOptionRadio" value="bnpl">
                <label for="payLater">Book Now, Pay Later <span class="text-success">(No payment now)</span></label>
              </div>
              <div class="trust-signals">
                <span><i class="bi bi-shield-lock-fill"></i> Secure Payments</span>
                <span><i class="bi bi-arrow-repeat"></i> Flexible Cancellation</span>
                <span><i class="bi bi-check-circle-fill"></i> Trusted by Thousands</span>
              </div>
            </div>
            <div class="btnSec ms-auto mb-auto">
              <button class="btn tour-booking-proceed-btn w-100" type="button" onclick="proceedWithBooking()" disabled>Proceed to Book</button>
            </div>
          </div>
        </form>
        <div class="actionCard card border-0 p-3 flex-row flex-wrap gap-2 align-items-start mt-3">
          <h5 class="w-100">Still Got Queries?</h5>
          <!-- <a href="https://wa.me/+918511117891" class="btn btn-outline-secondary rounded-pill" target="_blank">WhatsApp Us</a> -->
          <a class="btn btn-outline-success rounded-pill btn-sm flex-grow-1"
          href="https://wa.me/+918511117891?text=Hello%20I%20am%20interested%20in%20the%20following%20trip%20<%= encodeURIComponent(trips.name) %>%20tour.%20could%20you%20please%20share%20more%20details." 
          target="_blank" aria-label="Contact via WhatsApp for <%= trips.name %>">
            <i class="bi bi-whatsapp me-1"></i> WhatsApp
          </a>
          <button class="btn btn-app-stroked-primary rounded-pill btn-sm flex-grow-1" data-bs-toggle="modal" data-bs-target="#quickCallModal"><i class="bi bi-telephone-forward me-1"></i> Call Back</button>
          <a class="btn btn-app-primary rounded-pill btn-sm flex-grow-1" href="/dreamtrip" target="_blank" title="Plan your dream trip"><i class="bi bi-calendar-check me-1"></i> Plan trip</a>
        </div>
      </aside>
    </section>
  </div>
  <!-- Mobile Floating Booking Section -->
  <div class="tour-booking-floating-sec d-lg-none" id="mobileBookingSection">
    <div class="tour-booking-floating-backdrop" id="mobileBookingBackdrop"></div>
    <div class="tour-booking-floating-panel d-flex flex-column" id="mobileBookingPanel">
      <div class="mobile-booking-header d-flex align-items-center justify-content-between p-3 border-bottom">
        <h5 class="mb-0">Book Your Trip</h5>
        <button type="button" class="btn-close" onclick="toggleMobileBooking()"></button>
      </div>
      <div class="flex-grow-1 overflow-auto">
        <!-- Mobile Booking Summary -->
        <div class="mobile-booking-summary">
          <div class="booking-summary-item">
            <span class="text-muted">Departure City:</span>
            <span class="booking-summary-city fw-semibold">Not selected</span>
          </div>
          <div class="booking-summary-item">
            <span class="text-muted">Tour Date:</span>
            <span class="booking-summary-date fw-semibold">Not selected</span>
          </div>
          <div class="booking-summary-item">
            <span class="text-muted">Duration:</span>
            <span class="booking-summary-duration fw-semibold">Not selected</span>
          </div>
          <div class="booking-summary-item">
            <span class="text-muted">Price:</span>
            <span class="booking-summary-price fw-semibold text-primary">Not selected</span>
          </div>
          <div class="booking-summary-item">
            <span class="text-muted">Transport:</span>
            <span class="booking-summary-transport fw-semibold">Not selected</span>
          </div>
          <% if(trips.seats){ %>
          <div class="booking-summary-item">
            <span class="text-muted">Seats Available:</span>
            <span class="booking-summary-seats text-success fw-semibold"><%= trips.seats %> left!</span>
          </div>
          <% } %>
        </div>
  
        <!-- Mobile City Selection -->
        <div class="mobile-booking-section">
          <h6 class="fw-bold mb-2">Select Departure City</h6>
          <div class="mobile-city-carousel">
            <div class="mobile-city-track" id="mobileCityTrack">
              <% if (trips.deptcities && trips.deptcities.length > 0 && trips.deptcities[0].City !== 'Unknown') { %>
                <% trips.deptcities.forEach((city, index) => { %>
                <div class="mobile-city-card <%= index === 0 ? 'active' : '' %>" 
                     data-city="<%= city.City %>" 
                     data-state="<%= city.State %>" 
                     data-price="<%= city.price && city.price[0] ? city.price[0].adultPrice : 0 %>" 
                     data-duration="<%= city.tripDuration %>" 
                     data-cutoff="<%= city.bookingCutoffDays || '0' %>"
                     data-partial="<%= city.partialPayment || '0' %>"
                     onclick="selectMobileCity(this)">
                  <img src="<%= city.image %>" alt="<%= city.City %>" loading="lazy" onerror="this.onerror=null; this.src='/images/placeholder.jpg';" />
                  <div class="mobile-city-info">
                    <h6><%= city.City %></h6>
                    <small><%= city.tripDuration %></small>
                    <div class="mobile-city-price">₹<%= city.price && city.price[0] ? city.price[0].adultPrice : 'N/A' %></div>
                  </div>
                </div>
                <% }); %>
              <% } else { %>
                <div class="text-center text-muted p-3">No departure cities available</div>
              <% } %>
            </div>
            <button class="mobile-carousel-btn mobile-carousel-prev" onclick="slideMobileLeft()">
              <i class="bi bi-chevron-left"></i>
            </button>
            <button class="mobile-carousel-btn mobile-carousel-next" onclick="slideMobileRight()">
              <i class="bi bi-chevron-right"></i>
            </button>
          </div>
        </div>
  
        <!-- Mobile Transport Selection -->
        <div class="mobile-booking-section" id="mobileTransportSection" style="display: none;">
          <h6 class="fw-bold mb-2">Transport Type</h6>
          <div class="mobile-transport-options" id="mobileTransportOptions"></div>
        </div>
  
        <!-- Mobile Date Selection -->
        <div class="mobile-booking-section" id="mobileDateSection" style="display: none;">
          <h6 class="fw-bold mb-2">Select Date</h6>
          <div class="mobile-date-tabs" id="mobileYearTabs"></div>
          <div class="mobile-date-tabs" id="mobileMonthTabs"></div>
          <div class="mobile-date-grid" id="mobileDateGrid"></div>
        </div>
  
        <!-- Mobile Payment Options -->
        <div class="mobile-booking-section" id="mobilePaymentSection" style="display: none;">
          <h6 class="fw-bold mb-2">Payment Options</h6>
          <div class="mobile-payment-options">
            <div class="mobile-payment-option">
              <input type="radio" id="mobilePayFull" name="mobilePaymentOption" value="full" checked>
              <label for="mobilePayFull">
                <span class="payment-label">Pay Full Amount</span>
                <span class="payment-price booking-summary-price-full">Not selected</span>
              </label>
            </div>
            <% if (trips.deptcities && trips.deptcities.length > 0 && trips.deptcities[0].partialPayment && parseFloat(trips.deptcities[0].partialPayment) > 0) { %>
            <div class="mobile-payment-option">
              <input type="radio" id="mobilePayPartial" name="mobilePaymentOption" value="partial">
              <label for="mobilePayPartial">
                <span class="payment-label">Pay Partial</span>
                <span class="payment-price booking-summary-price-partial">₹<%= trips.deptcities[0].partialPayment %></span>
              </label>
            </div>
            <% } %>
            <div class="mobile-payment-option">
              <input type="radio" id="mobilePayLater" name="mobilePaymentOption" value="bnpl">
              <label for="mobilePayLater">
                <span class="payment-label">Book Now, Pay Later</span>
                <span class="payment-price text-success">(No payment now)</span>
              </label>
            </div>
          </div>
        </div>
      </div>

      <!-- Mobile Action Buttons -->
      <div class="mobile-booking-actions d-flex align-items-center gap-2 p-3">
        <button class="btn btn-app-stroked-primary" aria-label="Call Back" data-bs-toggle="modal" data-bs-target="#quickCallModal">
          <i class="bi bi-telephone-fill"></i>
        </button>
        <a class="btn btn-outline-success" aria-label="WhatsApp" 
           href="https://wa.me/+918511117891?text=Hello%20I%20am%20interested%20in%20the%20following%20trip%20<%= encodeURIComponent(trips.name) %>%20tour.%20could%20you%20please%20share%20more%20details." 
           target="_blank" 
           aria-label="Contact via WhatsApp for <%= trips.name %>">
          <i class="bi bi-whatsapp"></i>
        </a>
        <button class="btn btn-app-primary mobile-booking-proceed" onclick="proceedMobileBooking()" disabled>
          <i class="bi bi-arrow-right me-1"></i> Book Now
        </button>
      </div>
    </div>
  </div>

  <!-- Mobile Floating Button -->
  <button class="btn btn-lg btn-app-primary rounded-pill mobile-booking-fab d-lg-none" id="mobileBookingFab" onclick="toggleMobileBooking()">
    <i class="bi bi-bookmark-check-fill me-2"></i>
    Book Now
  </button>
  <div class="modal fade" id="contactModal" tabindex="-1" aria-labelledby="contactModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
      <div class="modal-content cutoff-modal-content">
        <div class="modal-header cutoff-modal-header">
          <h5 class="modal-title" id="contactModalLabel">Booking Unavailable</h5>
          <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body cutoff-modal-body">
          <p id="contactModalMessage">Online booking is temporarily unavailable or the selected date is too soon. Please contact our team to proceed.</p>
          <p><strong>Call/WhatsApp:</strong> <a href="https://wa.me/+918511117891" target="_blank">+91 851111 7891</a></p>
          <div class="trust-signals mt-3">
            <span><i class="bi bi-shield-lock-fill"></i> Secure Booking Process</span>
            <span><i class="bi bi-person-fill"></i> Expert Support</span>
          </div>
        </div>
        <div class="modal-footer cutoff-modal-footer">
          <a href="https://wa.me/+918511117891" class="btn cutoff-modal-btn btn-success" target="_blank">Contact via WhatsApp</a>
          <button type="button" class="btn cutoff-modal-btn btn-secondary" data-bs-dismiss="modal">Close</button>
        </div>
      </div>
    </div>
  </div>
  <div class="modal fade" id="inquiryModal" tabindex="-1" aria-labelledby="inquiryModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
      <div class="modal-content inquiry-modal-content">
        <div class="modal-header inquiry-modal-header">
          <h5 class="modal-title" id="inquiryModalLabel">Inquire About This Trip</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body inquiry-modal-body">
          <p class="fw-medium">Group Batch is not available or the selected date is too soon.<br>Contact our team or customize this trip.</p>
          <div class="trust-signals mt-3">
            <span><i class="bi bi-shield-lock-fill"></i> Secure Booking Process</span>
            <span><i class="bi bi-person-fill"></i> Expert Support</span>
          </div>
        </div>
        <div class="modal-footer inquiry-modal-footer justify-content-center">
          <a href="https://wa.me/+918511117891" class="btn inquiry-modal-btn inquiry-modal-btn-whatsapp" target="_blank">WhatsApp Us</a>
          <a href="/dreamtrip" class="btn inquiry-modal-btn inquiry-modal-btn-customize" target="_blank">Customize Trip</a>
          <button type="button" class="btn inquiry-modal-btn inquiry-modal-btn-ok" data-bs-dismiss="modal">Okay</button>
        </div>
      </div>
    </div>
  </div>
  <div class="modal fade" id="bookingModal" tabindex="-1" aria-labelledby="bookingModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-fullscreen-sm-down modal-dialog-scrollable modal-dialog-centered">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="bookingModalLabel">Book Your Trip</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body booking-modal-body">
          <form id="modalBookingForm">
            <div class="mb-4 booking-modal-section">
              <h6 class="fw-bold mb-2">Select Departure City</h6>
              <select class="trip-details-form-select booking-modal-select" id="modalSelectedCity" name="city" onchange="updateModalCityFromDropdown()">
                <% if (trips.deptcities && trips.deptcities.length > 0 && trips.deptcities[0].City !== 'Unknown') { %>
                <% trips.deptcities.forEach((city) => { %>
                <option value="<%= city.City %>" 
                        data-duration="<%= city.tripDuration %>" 
                        data-price="<%= city.price && city.price[0] ? city.price[0].adultPrice : 'N/A' %>" 
                        data-state="<%= city.State %>"
                        data-cutoff="<%= city.bookingCutoffDays || '0' %>"
                        data-partial="<%= city.partialPayment || '0' %>">
                  <%= city.City %>, <%= city.State %>
                </option>
                <% }); %>
                <% } else { %>
                <option value="">No cities available</option>
                <% } %>
              </select>
              <div class="error-message" id="modalCityError">Please select a city.</div>
              <div class="booking-modal-city-summary card mt-3 p-3 shadow-sm" style="display: none;">
                <div class="d-flex justify-content-between align-items-center">
                  <div>
                    <h6 class="mb-1 booking-modal-city-name">City</h6>
                    <small class="text-muted booking-modal-city-state">State</small>
                  </div>
                  <div class="text-end">
                    <p class="mb-1 fw-semibold booking-modal-city-price">₹0/adult</p>
                    <small class="text-muted booking-modal-city-duration">0 Days</small>
                  </div>
                </div>
              </div>
            </div>
            <% if (trips.deptcities && trips.deptcities.length > 0 && trips.deptcities[0].City !== 'Unknown') { %>
            <div class="mb-4 booking-modal-section">
              <h6 class="fw-bold mb-2">Select Transport Type</h6>
              <div class="transport-options d-flex flex-wrap gap-2" id="modalTransportOptions" role="radiogroup" aria-label="Transport Types"></div>
            </div>
            <div class="mb-4 booking-modal-section">
              <h6 class="fw-bold mb-2">Select Tour Date</h6>
              <div class="tour-booking-year-tabs booking-modal-year-tabs" id="modalYearTabs"></div>
              <div class="tour-booking-month-tabs booking-modal-month-tabs" id="modalMonthTabs"></div>
              <div class="tour-booking-date-selector booking-modal-date-selector" id="modalDateSelector"></div>
              <select class="trip-details-form-select booking-modal-select" id="modalSelectedDate" name="date" style="display: none;">
                <option value="">Select a date</option>
              </select>
              <div class="error-message" id="modalDateError">Please select a date.</div>
            </div>
            <% } %>
            <div class="booking-modal-summary card p-3 shadow-sm">
              <h6 class="fw-bold mb-3">Booking Summary</h6>
              <div class="d-flex justify-content-between mb-2">
                <span>Departure City: </span>
                <span class="fw-semibold booking-summary-city">Not selected</span>
              </div>
              <div class="d-flex justify-content-between mb-2">
                <span>Trip Duration: </span>
                <span class="fw-semibold booking-summary-duration">Not selected</span>
              </div>
              <div class="d-flex justify-content-between mb-2">
                <span>Adult Price :</span>
                <span class="fw-semibold booking-modal-summary-price">Not selected</span>
              </div>
              <div class="d-flex justify-content-between mb-2">
                <span>Transport Type :</span>
                <span class="fw-semibold booking-summary-transport">Not selected</span>
              </div>
             
              <div class="d-flex justify-content-between">
                <span>Seats Available</span>
                <span class="fw-semibold booking-summary-seats text-success"><%= trips.seats %> left!</span>
              </div>
           
            </div>
            <div class="tour-booking-payment-options mt-3">
              <h6 class="fw-bold mb-3">Payment Options</h6>
              <div class="tour-booking-payment-option">
                <input type="radio" id="modalPayFull" name="modalPaymentOptionRadio" value="full" checked>
                <label for="modalPayFull">Pay Full Amount <span class="booking-summary-price-full">Not selected</span></label>
              </div>
              <% if (trips.deptcities && trips.deptcities.length > 0 && trips.deptcities[0].partialPayment && parseFloat(trips.deptcities[0].partialPayment) > 0) { %>
              <div class="tour-booking-payment-option">
                <input type="radio" id="modalPayPartial" name="modalPaymentOptionRadio" value="partial">
                <label for="modalPayPartial">Pay Partial <span class="booking-summary-price-partial">₹<%= trips.deptcities[0].partialPayment %></span>, Balance Later</label>
              </div>
              <% } %>
              <div class="tour-booking-payment-option">
                <input type="radio" id="modalPayLater" name="modalPaymentOptionRadio" value="bnpl">
                <label for="modalPayLater">Book Now, Pay Later <span class="text-success">(No payment now)</span></label>
              </div>
              <div class="trust-signals">
                <span><i class="bi bi-shield-lock-fill"></i> Secure Payments</span>
                <span><i class="bi bi-arrow-repeat"></i> Flexible Cancellation</span>
                <span><i class="bi bi-check-circle-fill"></i> Trusted by Thousands</span>
              </div>
            </div>
          </form>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary booking-modal-btn-cancel" data-bs-dismiss="modal">Cancel</button>
          <button type="button" class="btn tour-booking-proceed-btn booking-modal-btn-proceed" onclick="submitModalBooking()" disabled>Proceed to Book</button>
        </div>
      </div>
    </div>
  </div>
  <div class="modal fade" id="quickCallModal" tabindex="-1" aria-labelledby="quickCallModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
      <div class="modal-content quick-call-modal-content">
        <div class="modal-header quick-call-modal-header position-relative">
          <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
          <div class="modal-body-content">
            <h5 class="modal-title text-white" id="quickCallModalLabel">Scrolling is fun, but travelling is better.</h5>
            <p class="text-white">Leave your number, and let's get you packing!</p>
          </div>
        </div>
        <div class="modal-body quick-call-modal-body">
          <form id="quickCallForm">
            <div class="mb-3">
              <label for="guestName" class="form-label">Guest Name *</label>
              <input type="text" class="form-control quick-call-input" id="guestName" name="guestName" placeholder="Enter guest name" required>
              <div class="error-message" id="guestNameError">Please enter guest name</div>
            </div>
            <div class="mb-3">
              <label for="mobileNo" class="form-label">Mobile No *</label>
              <div class="input-group">
                <select class="form-select quick-call-select" id="countryCode" name="countryCode">
                  <option value="+91" data-flag="🇮🇳">🇮🇳 +91</option>
                  <option value="+1" data-flag="🇺🇸">🇺🇸 +1</option>
                  <option value="+44" data-flag="🇬🇧">🇬🇧 +44</option>
                </select>
                <input type="tel" class="form-control quick-call-input" id="mobileNo" name="mobileNo" placeholder="Enter mobile number" required>
              </div>
              <div class="error-message" id="mobileNoError">Please enter a valid mobile number</div>
            </div>
            <div class="notes d-flex flex-column gap-2">
              <div class="d-flex align-items-center">
                <i class="bi bi-shield-lock-fill note-icon"></i>
                <span>We assure the privacy of your contact data.</span>
              </div>
              <div class="d-flex align-items-center">
                <i class="bi bi-telephone-x-fill note-icon"></i>
                <span>No annoying spam calls.</span>
              </div>
            </div>
          </form>
        </div>
        <div class="modal-footer quick-call-modal-footer">
          <button type="submit" form="quickCallForm" class="btn quick-call-modal-btn" id="submitQuickCall" disabled>
            <i class="bi bi-telephone-fill me-2"></i> Request Call Back
          </button>
        </div>
      </div>
    </div>
  </div>
  <div class="modal fade" id="quickCallSuccessModal" tabindex="-1" aria-labelledby="quickCallSuccessModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="quickCallSuccessModalLabel">Request Submitted</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <p>Your call back request has been submitted successfully. We'll get in touch with you soon!</p>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-primary" data-bs-dismiss="modal">Okay</button>
        </div>
      </div>
    </div>
  </div>
  <!-- Recommended Trips Section -->
  <% if (recommendedTrips && recommendedTrips.length > 0) { %>
  <section class="recommended-trips-section py-5 bg-light">
    <div class="container-xl">
      <div class="recommended-trips-header text-center mb-4">
        <h2 class="recommended-trips-title">Recommended Trips</h2>
        <p class="recommended-trips-subtitle text-muted">Discover more amazing adventures</p>
      </div>
      
      <div class="recommended-trips-slider">
        <div class="recommended-trips-track" id="recommendedTripsTrack">
          <% recommendedTrips.forEach((trip, index) => { %>
          <div class="recommended-trip-card" onclick="window.location.href='/tripdetail/<%= encodeURIComponent(trip.name) %>'">
            <div class="trip-card-image">
              <img src="<%= trip.imageurl || '/images/placholderbanner.jpg' %>" 
                   alt="<%= trip.name %>" 
                   loading="lazy"
                   onerror="this.onerror=null; this.src='/images/placholderbanner.jpg';" />
              <div class="trip-card-group-label">
                <i class="bi bi-people-fill"></i>
                Group Trip
              </div>
              <div class="trip-card-price-badge">
                <span class="price-currency">₹</span>
                <span class="price-amount"><%= trip.price || 'Contact' %></span>
              </div>
            </div>
            <div class="trip-card-content">
              <h3 class="trip-card-title" title="<%= trip.name %>">
                <%= trip.name %>
              </h3>
              <div class="trip-card-meta">
                <span class="trip-card-duration">
                  <i class="bi bi-calendar-event"></i>
                  <%= trip.days || 'Multi-day' %>
                </span>
                <span class="trip-card-state">
                  <i class="bi bi-geo-alt"></i>
                  <%= trip.state || 'India' %>
                </span>
              </div>
            </div>
          </div>
          <% }); %>
        </div>
        
        <!-- Navigation Buttons -->
        <button class="recommended-trips-nav recommended-trips-prev" onclick="slideRecommendedLeft()">
          <i class="bi bi-chevron-left"></i>
        </button>
        <button class="recommended-trips-nav recommended-trips-next" onclick="slideRecommendedRight()">
          <i class="bi bi-chevron-right"></i>
        </button>
      </div>
      
      <!-- View More Button -->
      <div class="text-center mt-4">
        <a href="/triplist" class="btn btn-app-stroked-primary btn-lg rounded-pill recommended-view-more">
          <i class="bi bi-grid-3x3-gap-fill me-2"></i>
          View All Trips
        </a>
      </div>
      
      <!-- Let's Plan Your Next Trip Section -->
      <div class="plan-next-trip-section mt-5">
        <div class="plan-next-trip-card">
          <div class="plan-next-trip-content">
            <div class="plan-next-trip-icon">
              <i class="bi bi-compass"></i>
            </div>
            <div class="plan-next-trip-text">
              <h3 class="plan-next-trip-title text-light">Let's Plan Your Next Adventure</h3>
              <p class="plan-next-trip-subtitle">Ready to explore more? Our travel experts are here to help you discover your perfect getaway.</p>
            </div>
            <div class="plan-next-trip-actions">
              <a href="/dreamtrip" class="btn btn-primary plan-next-trip-btn" target="_blank">
                <i class="bi bi-magic me-2"></i>
                Plan Custom Trip
              </a>
              <a href="https://wa.me/+918511117891?text=Hello%20I%20want%20to%20plan%20my%20next%20trip.%20Can%20you%20help%20me%20with%20recommendations?" 
                 class="btn btn-outline-success plan-next-trip-btn" target="_blank">
                <i class="bi bi-whatsapp me-2"></i>
                Chat with Expert
              </a>
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>
  <% } else { %>
  <!-- Fallback when no recommended trips -->
  <section class="recommended-trips-section py-5 bg-light">
    <div class="container-xl">
      <div class="row">
        <div class="col-12">
          <div class="recommended-trips-header text-center mb-4">
            <h2 class="recommended-trips-title">Explore More Adventures</h2>
            <p class="recommended-trips-subtitle text-muted">Discover our amazing collection of trips</p>
          </div>
          
          <div class="text-center">
            <a href="/triplist" class="btn btn-primary btn-lg recommended-view-more">
              <i class="bi bi-grid-3x3-gap-fill me-2"></i>
              Browse All Trips
            </a>
          </div>
        </div>
      </div>
    </div>
  </section>
  <% } %>

  <%- include('../partials/footer'); %>
  <%- include('../partials/scripttag', {isNiceSelect: false}); %>
  <script src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js"></script>
  <script>
          // Check content validity
  function isContentValid(content) {
    return content && content.trim() !== "" && content !== "<p></p>" && content !== "<p><br></p>";
  }
    // Initialize global variables
    const isLoggedIn = sessionStorage.length || !!<%- JSON.stringify(trips.loggedGmailUser) %>;
    const csrfToken = "<%= csrfToken %>";
    const deptCities = <%- JSON.stringify(trips.deptcities) %>;
    const trip = <%- JSON.stringify(trips) %>;
    const recommendedTrips = <%- JSON.stringify(recommendedTrips || []) %>;
    let isUpdating = false;
    let transportTypes = [];

    // Helper function to open inquiry modal
    function openInquiryModal() {
      const modalElement = document.getElementById("inquiryModal");
      const modal = bootstrap.Modal.getOrCreateInstance(modalElement);
      modal.show();
    }

    // Helper function to show contact modal with custom message
    function showContactModal(message = "Online booking is temporarily unavailable or the selected date is too soon. Please contact our team to proceed.") {
      const modalElement = document.getElementById("contactModal");
      const modalMessage = document.getElementById("contactModalMessage");
      if (modalMessage) modalMessage.textContent = message;
      const modal = bootstrap.Modal.getOrCreateInstance(modalElement);
      modal.show();
    }

    // Download itinerary with login check
    async function downloadItinerary() {
      try {
        if (!isLoggedIn) {
          $('#signinModal').modal('show');
          return;
        }
        const documentUrl = '<%= trips.documentUrl %>';
        if (documentUrl && documentUrl.trim() !== '') {
          let url = documentUrl.replace(/^\/+/, '/');
          url = encodeURI(url);
          const link = document.createElement('a');
          link.href = url;
          link.download = '<%= trips.name %>_Itinerary.pdf';
          document.body.appendChild(link);
          link.click();
          document.body.removeChild(link);
        } else {
          showContactModal("Itinerary PDF is not available for this trip.");
        }
      } catch (error) {
        console.error("Error downloading itinerary:", error);
        showContactModal("Failed to verify login status. Please try again.");
      }
    }

    // DOM Content Loaded Event Listener
    document.addEventListener("DOMContentLoaded", function() {
      
      // Prevent scroll restoration
      if ("scrollRestoration" in history) {
        history.scrollRestoration = "manual";
      }
      window.scrollTo(0, 0);

      // Initialize Swiper
      try {
        const swiper = new Swiper('.image-slider', {
          loop: true,
          autoplay: { delay: 3000, disableOnInteraction: false },
          navigation: { nextEl: '.swiper-button-next', prevEl: '.swiper-button-prev' },
          pagination: { el: '.swiper-pagination', clickable: true },
        });
      } catch (e) {
        console.error("Swiper initialization failed:", e);
      }

      // Check carousel slide buttons
      checkSlideButtons();

      // Select first city if available
      selectFirstCity();

      // Handle About section read more/less
      const aboutSec = document.querySelector('.abouts');
      if (aboutSec) {
        function addReadMoreIfNeeded() {
          const prevMask = aboutSec.querySelector('.about-mask');
          if (prevMask) prevMask.remove();
          const prevBtn = aboutSec.parentElement.querySelector('.about-read-more-btn');
          if (prevBtn) prevBtn.remove();
          aboutSec.style.maxHeight = '';
          aboutSec.style.overflow = '';
          aboutSec.classList.remove('expanded');
          if (aboutSec.scrollHeight > 150) {
            aboutSec.style.maxHeight = '150px';
            aboutSec.style.overflow = 'hidden';
            const mask = document.createElement('div');
            mask.className = 'about-mask position-absolute bottom-0 end-0 w-100';
            aboutSec.appendChild(mask);
            const existingBtn = aboutSec.parentElement.parentElement.querySelector('.about-read-more-btn');
            if (existingBtn) existingBtn.remove();
            const btn = document.createElement('button');
            btn.type = 'button';
            btn.className = 'about-read-more-btn btn btn-link p-0 mt-2';
            btn.textContent = 'Read more';
            btn.onclick = function () {
              const expanded = aboutSec.classList.toggle('expanded');
              aboutSec.style.maxHeight = expanded ? 'none' : '150px';
              aboutSec.style.overflow = expanded ? 'visible' : 'hidden';
              btn.textContent = expanded ? 'Read less' : 'Read more';
              mask.classList.toggle('d-none', expanded);
            };
            aboutSec.parentElement.parentElement.appendChild(btn);
          }
        }
        addReadMoreIfNeeded();
        window.addEventListener('resize', addReadMoreIfNeeded);
      }

      // City card click handlers
      document.querySelectorAll(".tour-booking-city-card").forEach((card) => {
        card.addEventListener("click", () => {
          card.dataset.userInitiated = "true";
          const city = card.getAttribute("data-city");
          const state = card.getAttribute("data-state");
          const price = card.getAttribute("data-price");
          selectCity(card, city, state, price);
        });
      });

      // Set first tab active
      const firstTab = document.querySelector(".tab-menu .tab");
      if (firstTab) firstTab.classList.add("active");

      // Remove NiceSelect for form elements
      ["selectedCity", "selectedDate", "selectedTransport", "paymentOption"].forEach(id => {
        const select = document.getElementById(id);
        if (select) {
          select.style.display = "block";
          const niceSelect = select.nextElementSibling;
          if (niceSelect && niceSelect.classList.contains("nice-select")) {
            niceSelect.remove();
          }
        }
      });

      // Initial form validation
      validateMainForm();

      // Sync payment options
      syncPaymentOptions();

      // Initialize mobile booking functionality
      initializeMobileBookingFeatures();
    });

    // Carousel navigation
    function slideLeft() {
      const container = document.getElementById("carouselTrack");
      container.scrollBy({ left: -200, behavior: "smooth" });
      setTimeout(checkSlideButtons, 300);
    }

    function slideRight() {
      const container = document.getElementById("carouselTrack");
      container.scrollBy({ left: 200, behavior: "smooth" });
      setTimeout(checkSlideButtons, 300);
    }

    function checkSlideButtons() {
      const container = document.getElementById("carouselTrack");
      const prevBtn = document.getElementById("prevBtn");
      const nextBtn = document.getElementById("nextBtn");
      const isOverflowing = container.scrollWidth > container.clientWidth;
      prevBtn.classList.toggle("d-none", !isOverflowing || container.scrollLeft === 0);
      nextBtn.classList.toggle("d-none", !isOverflowing || container.scrollLeft + container.clientWidth >= container.scrollWidth - 1);
    }

    window.onresize = checkSlideButtons;

    // Filter future dates based on current date and booking cutoff
    function filterFutureDates(dates, cutoffDays = 0) {
      const now = new Date();
      now.setHours(0, 0, 0, 0);
      const cutoffDate = new Date(now);
      cutoffDate.setDate(now.getDate() + parseInt(cutoffDays, 10));
      return dates.filter((date) => {
        if (!date.Year || !date.Month || !date.dates) return false;
        const monthDates = typeof date.dates === "string" ? date.dates.split(", ").map(Number) : [];
        const filteredDates = monthDates.filter((day) => {
          const tripDate = new Date(Date.UTC(parseInt(date.Year), new Date(`${date.Month} 1`).getMonth(), day));
          return tripDate > cutoffDate;
        });
        return filteredDates.length > 0;
      }).map((date) => ({
        ...date,
        dates: typeof date.dates === "string" ? date.dates.split(", ").map(Number).filter((day) => {
          const tripDate = new Date(Date.UTC(parseInt(date.Year), new Date(`${date.Month} 1`).getMonth(), day));
          return tripDate > cutoffDate;
        }).sort((a, b) => a - b).join(", ") : ""
      })).filter((date) => date.dates !== "");
    }

    // Format date for display
    function formatDate(date) {
      return date.toLocaleDateString("en-GB", {
        day: "numeric",
        month: "long",
        year: "numeric"
      });
    }

    // Parse trip duration for calculations
    function parseDuration(duration) {
      if (!duration) {
        console.warn("Trip duration is empty, defaulting to 1 day");
        return 1;
      }
      const match = duration.match(/(\d+)\s*(D|Day|Days|d)/i);
      return match ? parseInt(match[1], 10) : 1;
    }

    // Generate date ranges with duration
    function generateDateRanges(dates, tripDuration, cutoffDays) {
      const dateOptions = [];
      const filteredDates = filterFutureDates(dates, cutoffDays);
      filteredDates.forEach((date) => {
        if (!date.Year || !date.Month || !date.dates) {
          console.warn(`Invalid date object: ${JSON.stringify(date)}`);
          return;
        }
        const monthDates = typeof date.dates === "string" ? date.dates.split(", ").map(Number).filter(n => !isNaN(n)) : [];
        monthDates.forEach((day) => {
          const startDate = new Date(Date.UTC(parseInt(date.Year), new Date(`${date.Month} 1`).getMonth(), day));
          if (isNaN(startDate.getTime())) return;
          const days = parseDuration(tripDuration);
          const endDate = new Date(startDate);
          endDate.setUTCDate(startDate.getUTCDate() + (days - 1));
          const value = startDate.toISOString();
          const text = `${formatDate(startDate)} - ${formatDate(endDate)}`;
          dateOptions.push({ startDate, endDate, value, text });
        });
      });
      return dateOptions.sort((a, b) => a.startDate - b.startDate);
    }

    // Select first city if available
    function selectFirstCity() {
      const firstCityCard = document.querySelector(".tour-booking-city-card");
      if (firstCityCard && firstCityCard.dataset.city !== "Unknown") {
        firstCityCard.dataset.userInitiated = "false";
        const city = firstCityCard.getAttribute("data-city");
        const state = firstCityCard.getAttribute("data-state");
        const price = firstCityCard.getAttribute("data-price") || 0;
        selectCity(firstCityCard, city, state, price);
      } else {
        showContactModal("No departure cities available for this trip.");
        document.querySelectorAll(".tour-booking-proceed-btn").forEach(btn => btn.disabled = true);
      }
    }

    // Handle city selection
    function selectCity(element, city, state, price) {
      document.querySelectorAll(".tour-booking-city-card").forEach((el) => el.classList.remove("active"));
      element.classList.add("active");
      const selectedCityDropdown = document.getElementById("selectedCity");
      const modalCityDropdown = document.getElementById("modalSelectedCity");
      if (selectedCityDropdown) selectedCityDropdown.value = city;
      if (modalCityDropdown) modalCityDropdown.value = city;
      if (element.dataset.userInitiated === "true") {
        element.scrollIntoView({ behavior: "smooth", inline: "nearest", block: "start" });
      }
      updateDatesAndTabs();
      updateBookingSummary();
      validateMainForm();
    }

    // Update booking summary
    function updateBookingSummary(fromModal = false) {
      const selectedCity = fromModal ? document.getElementById("modalSelectedCity") : document.getElementById("selectedCity");
      const cityValue = selectedCity ? selectedCity.value : "";
      const cityData = deptCities.find(c => c.City === cityValue);
      const summaryCity = document.querySelectorAll(".booking-summary-city");
      const summaryDuration = document.querySelectorAll(".booking-summary-duration");
      const summaryPrice = document.querySelectorAll(".booking-summary-price, .booking-modal-summary-price");
      const summaryTransport = document.querySelectorAll(".booking-summary-transport");
      const priceFull = document.querySelectorAll(".booking-summary-price-full");
      const pricePartial = document.querySelectorAll(".booking-summary-price-partial");
      if (cityData && cityData.City !== "Unknown") {
        summaryCity.forEach(e => e.textContent = `${cityData.City}, ${cityData.State}`);
        summaryDuration.forEach(e => e.textContent = cityData.tripDuration || "N/A");
        const adultPrice = cityData.price && cityData.price[0] ? cityData.price[0].adultPrice : trip.price || "N/A";
        summaryPrice.forEach(e => e.textContent = `₹${adultPrice}/person`);
        priceFull.forEach(e => e.textContent = `₹${adultPrice}`);
        const partialAmount = parseFloat(cityData.partialPayment || "0");
        if (partialAmount > 0) {
          pricePartial.forEach(e => e.textContent = `₹${partialAmount}`);
        }
        const transportType = cityData.price && cityData.price[0] && cityData.price[0].transferType ? cityData.price[0].transferType : "Not available";
        summaryTransport.forEach(e => e.textContent = transportType);
      } else {
        summaryCity.forEach(e => e.textContent = "Not selected");
        summaryDuration.forEach(e => e.textContent = "Not selected");
        summaryPrice.forEach(e => e.textContent = "Not selected");
        summaryTransport.forEach(e => e.textContent = "Not selected");
        priceFull.forEach(e => e.textContent = "Not selected");
        pricePartial.forEach(e => e.textContent = "Not selected");
      }
    }

    // Update city from dropdown
    function updateCityFromDropdown() {
      const selectedCity = document.getElementById("selectedCity").value;
      const modalCityDropdown = document.getElementById("modalSelectedCity");
      if (modalCityDropdown) modalCityDropdown.value = selectedCity;
      const cityCard = document.querySelector(`.tour-booking-city-card[data-city="${selectedCity}"]`);
      if (cityCard) {
        cityCard.dataset.userInitiated = "true";
        document.querySelectorAll(".tour-booking-city-card").forEach((el) => el.classList.remove("active"));
        cityCard.classList.add("active");
        cityCard.scrollIntoView({ behavior: "smooth", inline: "nearest", block: "start" });
      }
      updateDatesAndTabs();
      updateBookingSummary();
      validateMainForm();
    }

    // Update modal city from dropdown
    function updateModalCityFromDropdown() {
      const selectedCity = document.getElementById("modalSelectedCity").value;
      const mainCityDropdown = document.getElementById("selectedCity");
      if (mainCityDropdown) mainCityDropdown.value = selectedCity;
      const cityCard = document.querySelector(`.tour-booking-city-card[data-city="${selectedCity}"]`);
      if (cityCard) {
        cityCard.dataset.userInitiated = "true";
        document.querySelectorAll(".tour-booking-city-card").forEach((el) => el.classList.remove("active"));
        cityCard.classList.add("active");
        cityCard.scrollIntoView({ behavior: "smooth", inline: "nearest", block: "start" });
      }
      updateModalCitySummary();
      updateDatesAndTabs(true);
      updateBookingSummary(true);
      validateModalForm();
    }

    // Validate main form
    function validateMainForm() {
      const citySelect = document.getElementById("selectedCity");
      const dateSelect = document.getElementById("selectedDate");
      const transportSelect = document.getElementById("selectedTransport");
      const proceedBtns = document.querySelectorAll(".tour-booking-proceed-btn");
      const cityError = document.getElementById("cityError");
      const dateError = document.getElementById("dateError");
      let isValid = true;
      if (!citySelect.value || citySelect.value === "Unknown") {
        citySelect.classList.add("is-invalid");
        cityError.style.display = "block";
        isValid = false;
      } else {
        citySelect.classList.remove("is-invalid");
        cityError.style.display = "none";
      }
      if (!dateSelect.value || dateSelect.value === "Select a date") {
        dateSelect.classList.add("is-invalid");
        dateError.style.display = "block";
        isValid = false;
      } else {
        dateSelect.classList.remove("is-invalid");
        dateError.style.display = "none";
      }
      proceedBtns.forEach(el => el.disabled = !isValid);
    }

    // Validate modal form
    function validateModalForm() {
      const citySelect = document.getElementById("modalSelectedCity");
      const dateSelect = document.getElementById("modalSelectedDate");
      const proceedBtn = document.querySelector(".booking-modal-btn-proceed");
      const cityError = document.getElementById("modalCityError");
      const dateError = document.getElementById("modalDateError");
      let isValid = true;
      if (!citySelect.value || citySelect.value === "Unknown") {
        citySelect.classList.add("is-invalid");
        cityError.style.display = "block";
        isValid = false;
      } else {
        citySelect.classList.remove("is-invalid");
        cityError.style.display = "none";
      }
      if (!dateSelect.value) {
        dateSelect.classList.add("is-invalid");
        dateError.style.display = "block";
        isValid = false;
      } else {
        dateSelect.classList.remove("is-invalid");
        dateError.style.display = "none";
      }
      proceedBtn.disabled = !isValid;
    }

    // Build transport options
    function buildTransport(fromModal = false) {
      const transportOptionsEl = fromModal ? document.getElementById('modalTransportOptions') : document.getElementById('transportOptions');
      const transportSelect = fromModal ? document.getElementById("modalSelectedTransport") : document.getElementById("selectedTransport");
      const selectedCity = fromModal ? document.getElementById("modalSelectedCity").value : document.getElementById("selectedCity").value;
      const cityData = deptCities.find((city) => city.City === selectedCity);
      transportTypes = cityData?.price || [];
      while (transportOptionsEl.firstChild) {
        transportOptionsEl.removeChild(transportOptionsEl.firstChild);
      }
      if (transportSelect) {
        transportSelect.innerHTML = '<option value="">Select a transport type</option>';
      }
      if (!transportTypes.length) {
        transportOptionsEl.innerHTML = '<p class="text-center text-secondary">No transport available</p>';
        document.querySelectorAll(".booking-summary-transport").forEach(e => e.textContent = "Not available");
        return;
      }
      transportTypes.forEach((item, index) => {
        if (item.transferType && item.transferType.trim() !== '') {
          const button = document.createElement('div');
          button.classList.add('transport-option');
          if (index === 0) button.classList.add('active');
          button.setAttribute('role', 'radio');
          button.setAttribute('tabindex', '0');
          button.setAttribute('aria-checked', index === 0 ? 'true' : 'false');
          button.setAttribute('data-id', item._id);
          button.setAttribute('data-price', item.adultPrice || 0);
          button.innerText = item.transferType.charAt(0).toUpperCase() + item.transferType.slice(1);
          button.addEventListener('click', () => handleTransportSelection(index, fromModal));
          transportOptionsEl.appendChild(button);
          if (transportSelect) {
            const option = document.createElement('option');
            option.value = item.transferType;
            option.text = item.transferType.charAt(0).toUpperCase() + item.transferType.slice(1);
            transportSelect.appendChild(option);
            if (index === 0) transportSelect.value = item.transferType;
          }
        }
      });
      if (transportTypes.length > 0) {
        handleTransportSelection(0, fromModal);
      }
    }

    // Handle transport selection
    function handleTransportSelection(index, fromModal = false) {
      const transportOptionsEl = fromModal ? document.getElementById('modalTransportOptions') : document.getElementById('transportOptions');
      const transportSelect = fromModal ? document.getElementById("modalSelectedTransport") : document.getElementById("selectedTransport");
      const options = transportOptionsEl.querySelectorAll('.transport-option');
      options.forEach((el, idx) => {
        el.classList.toggle('active', idx === index);
        el.setAttribute('aria-checked', idx === index ? 'true' : 'false');
      });
      const selected = transportTypes[index] || {};
      const transportType = selected.transferType || "Not available";
      document.querySelectorAll(".booking-summary-transport").forEach(e => e.textContent = transportType);
      if (transportSelect) transportSelect.value = transportType;
      updatePrice(index, fromModal);
    }

    // Update price based on transport selection
    function updatePrice(index, fromModal = false) {
      const selected = transportTypes[index] || {};
      const price = selected.adultPrice || trip.price || "N/A";
      const summaryPrice = document.querySelectorAll(fromModal ? ".booking-modal-summary-price" : ".booking-summary-price");
      const priceFull = document.querySelectorAll(fromModal ? ".booking-summary-price-full" : ".booking-summary-price-full");
      const pricePartial = document.querySelectorAll(fromModal ? ".booking-summary-price-partial" : ".booking-summary-price-partial");
      summaryPrice.forEach(e => e.textContent = `₹${price}/person`);
      priceFull.forEach(e => e.textContent = `₹${price}`);
      const selectedCity = fromModal ? document.getElementById("modalSelectedCity").value : document.getElementById("selectedCity").value;
      const cityData = deptCities.find((city) => city.City === selectedCity);
      const partialAmount = parseFloat(cityData?.partialPayment || "0");
      if (partialAmount > 0) {
        pricePartial.forEach(e => e.textContent = `₹${partialAmount}`);
      }
    }

    // Update dates and tabs
    function updateDatesAndTabs(fromModal = false) {
      const selectedCityInput = fromModal ? document.getElementById("modalSelectedCity") : document.getElementById("selectedCity");
      const selectedCity = selectedCityInput ? selectedCityInput.value : "";
      const cityData = deptCities.find((city) => city.City === selectedCity);
      const yearTabs = fromModal ? document.getElementById("modalYearTabs") : document.getElementById("yearTabs");
      const monthTabs = fromModal ? document.getElementById("modalMonthTabs") : document.getElementById("monthTabs");
      const dateSelector = fromModal ? document.getElementById("modalDateSelector") : document.getElementById("dateSelector");
      const dateSelect = fromModal ? document.getElementById("modalSelectedDate") : document.getElementById("selectedDate");
      const mainDateSelect = document.getElementById("selectedDate");
      const modalDateSelect = document.getElementById("modalSelectedDate");
      const proceedBtns = fromModal ? document.querySelectorAll(".booking-modal-btn-proceed") : document.querySelectorAll(".tour-booking-proceed-btn");
      const summaryDate = document.querySelectorAll(".booking-summary-date");
      dateSelector.style.display = "flex";
      dateSelect.disabled = true;
      proceedBtns.forEach(el => el.disabled = true);
      yearTabs.innerHTML = "";
      monthTabs.innerHTML = "";
      dateSelector.innerHTML = "";
      dateSelect.innerHTML = "<option value=''>Select a date</option>";
      summaryDate.forEach(e => e.textContent = "Not selected");
      buildTransport(fromModal);
      if (!cityData || !cityData.dates || cityData.dates.length === 0 || cityData.City === "Unknown") {
        monthTabs.innerHTML = "<p class='text-muted mb-0'>No dates available for this city.</p>";
        dateSelect.disabled = false;
        if (fromModal) openInquiryModal();
        else validateMainForm();
        return;
      }
      const cutoffDays = parseInt(cityData.bookingCutoffDays || "0", 10);
      const dateOptions = generateDateRanges(cityData.dates, cityData.tripDuration, cutoffDays);
      if (dateOptions.length === 0) {
        monthTabs.innerHTML = "<p class='text-muted'>No future dates available.</p>";
        dateSelect.disabled = false;
        showContactModal("No future dates available for this city. Please contact our team.");
        return;
      }
      const datesByYear = {};
      dateOptions.forEach((option) => {
        const year = option.startDate.getUTCFullYear().toString();
        const month = option.startDate.toLocaleString("en-US", { month: "long", timeZone: "UTC" });
        if (!datesByYear[year]) datesByYear[year] = {};
        if (!datesByYear[year][month]) datesByYear[year][month] = [];
        datesByYear[year][month].push(option);
      });
      const years = Object.keys(datesByYear).sort();
      if (years.length === 0) {
        monthTabs.innerHTML = "<p class='text-muted'>No valid years available.</p>";
        dateSelect.disabled = false;
        showContactModal("No valid dates available. Please contact our team.");
        return;
      }
      dateOptions.forEach(({ value, text }, index) => {
        const option = document.createElement("option");
        option.value = value;
        option.text = text;
        dateSelect.appendChild(option);
        if (fromModal && mainDateSelect) {
          mainDateSelect.innerHTML = dateSelect.innerHTML;
          mainDateSelect.value = value;
        } else if (!fromModal && modalDateSelect) {
          modalDateSelect.innerHTML = dateSelect.innerHTML;
          modalDateSelect.value = value;
        }
        if (index === 0) {
          option.selected = true;
          summaryDate.forEach(e => e.textContent = text);
        }
      });
      dateSelect.disabled = false;
      years.forEach((year, index) => {
        const tab = document.createElement("button");
        tab.className = `${fromModal ? 'booking-modal-year-tab' : 'tour-booking-year-tab'} ${index === 0 ? "active" : ""}`;
        tab.innerText = year;
        tab.onclick = (e) => {
          e.preventDefault();
          e.stopPropagation();
          showYear(year, fromModal);
        };
        yearTabs.appendChild(tab);
      });
      const initialStartISO = dateSelect.value;
      const initialStartDate = new Date(initialStartISO);
      if (!isNaN(initialStartDate.getTime())) {
        const initialYear = initialStartDate.getUTCFullYear().toString();
        showYear(initialYear, fromModal);
        const initialMonth = initialStartDate.toLocaleString("en-US", { month: "long", timeZone: "UTC" });
        showMonth(initialYear, initialMonth, fromModal);
      } else {
        showYear(years[0], fromModal);
      }
      if (fromModal) validateModalForm();
      else validateMainForm();
    }

    // Show year tabs
    function showYear(year, fromModal = false) {
      const selectedCity = fromModal ? document.getElementById("modalSelectedCity").value : document.getElementById("selectedCity").value;
      const cityData = deptCities.find((city) => city.City === selectedCity);
      const monthTabs = fromModal ? document.getElementById("modalMonthTabs") : document.getElementById("monthTabs");
      const dateSelector = fromModal ? document.getElementById("modalDateSelector") : document.getElementById("dateSelector");
      if (!cityData || !cityData.dates) {
        monthTabs.innerHTML = "<p class='text-muted mb-0'>No dates available for this city.</p>";
        dateSelector.innerHTML = "";
        dateSelector.style.display = "flex";
        if (fromModal) openInquiryModal();
        return;
      }
      document.querySelectorAll(fromModal ? ".booking-modal-year-tab" : ".tour-booking-year-tab").forEach((tab) => tab.classList.remove("active"));
      const yearTab = Array.from(document.querySelectorAll(fromModal ? ".booking-modal-year-tab" : ".tour-booking-year-tab")).find((tab) => tab.innerText === year);
      if (yearTab) yearTab.classList.add("active");
      monthTabs.innerHTML = "";
      const cutoffDays = parseInt(cityData.bookingCutoffDays || "0", 10);
      const filteredDates = filterFutureDates(cityData.dates, cutoffDays);
      const datesByYear = {};
      filteredDates.forEach((date) => {
        if (!date.Year || !date.Month || !date.dates) return;
        if (!datesByYear[date.Year]) datesByYear[date.Year] = {};
        if (typeof date.dates === "string") {
          datesByYear[date.Year][date.Month] = date.dates.split(", ").map(Number).sort((a, b) => a - b);
        }
      });
      const months = Object.keys(datesByYear[year] || {}).sort((a, b) => {
        const monthOrder = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
        return monthOrder.indexOf(a) - monthOrder.indexOf(b);
      });
      if (months.length === 0) {
        monthTabs.innerHTML = "<p class='text-muted'>No months available for this year.</p>";
        dateSelector.innerHTML = "";
        dateSelector.style.display = "flex";
        if (fromModal) openInquiryModal();
        return;
      }
      months.forEach((month, index) => {
        const tab = document.createElement("button");
        tab.className = `${fromModal ? 'booking-modal-month-tab' : 'tour-booking-month-tab'} ${index === 0 ? "active" : ""}`;
        tab.innerText = month;
        tab.onclick = (e) => {
          e.preventDefault();
          e.stopPropagation();
          showMonth(year, month, fromModal);
        };
        monthTabs.appendChild(tab);
      });
      const dateSelect = fromModal ? document.getElementById("modalSelectedDate") : document.getElementById("selectedDate");
      const selectedDate = dateSelect.value ? new Date(dateSelect.value) : null;
      const selectedMonth = selectedDate && selectedDate.getFullYear().toString() === year ?
        selectedDate.toLocaleString("en-US", { month: "long", timeZone: "UTC" }) : months[0];
      showMonth(year, selectedMonth, fromModal);
    }

    // Show month tabs (continued)
    function showMonth(year, month, fromModal = false) {
  if (isUpdating) return;
  isUpdating = true;
  const selectedCity = fromModal ? document.getElementById("modalSelectedCity").value : document.getElementById("selectedCity").value;
  const cityData = deptCities.find((city) => city.City === selectedCity);
  const dateSelector = fromModal ? document.getElementById("modalDateSelector") : document.getElementById("dateSelector");
  const dateSelect = fromModal ? document.getElementById("modalSelectedDate") : document.getElementById("selectedDate");
  const summaryDate = document.querySelectorAll(".booking-summary-date");
  if (!cityData || !cityData.dates) {
    dateSelector.innerHTML = "<p class='text-muted'>No dates available for this month.</p>";
    dateSelector.style.display = "flex";
    if (fromModal) openInquiryModal();
    isUpdating = false;
    return;
  }
  document.querySelectorAll(fromModal ? ".booking-modal-month-tab" : ".tour-booking-month-tab").forEach((tab) => tab.classList.remove("active"));
  const monthTab = Array.from(document.querySelectorAll(fromModal ? ".booking-modal-month-tab" : ".tour-booking-month-tab")).find((tab) => tab.innerText === month);
  if (monthTab) monthTab.classList.add("active");
  dateSelector.style.display = "flex";
  dateSelector.innerHTML = "";
  const cutoffDays = parseInt(cityData.bookingCutoffDays || "0", 10);
  const dateOptions = generateDateRanges(cityData.dates, cityData.tripDuration, cutoffDays);
  const monthOptions = dateOptions.filter((option) => {
    return option.startDate.getUTCFullYear().toString() === year && 
           option.startDate.toLocaleString("en-US", { month: "long", timeZone: "UTC" }) === month;
  });
  if (monthOptions.length === 0) {
    dateSelector.innerHTML = "<p class='text-muted'>No dates available for this month.</p>";
    if (fromModal) openInquiryModal();
    isUpdating = false;
    return;
  }
  monthOptions.forEach((option, index) => {
    const button = document.createElement("button");
    button.className = `${fromModal ? 'booking-modal-date-btn' : 'tour-booking-date-item'} ${index === 0 ? "active" : ""}`;
    // Show only day in departure section, full date in summary
    button.innerText = option.startDate.getUTCDate();
    button.setAttribute("data-value", option.value);
    button.onclick = (e) => {
      e.preventDefault();
      e.stopPropagation();
      document.querySelectorAll(fromModal ? ".booking-modal-date-btn" : ".tour-booking-date-item").forEach((btn) => btn.classList.remove("active"));
      button.classList.add("active");
      dateSelect.value = option.value;
      summaryDate.forEach((e) => (e.textContent = option.text)); // Full date in summary
      if (fromModal && document.getElementById("selectedDate")) {
        document.getElementById("selectedDate").value = option.value;
      } else if (!fromModal && document.getElementById("modalSelectedDate")) {
        document.getElementById("modalSelectedDate").value = option.value;
      }
      if (fromModal) validateModalForm();
      else validateMainForm();
    };
    dateSelector.appendChild(button);
  });
  if (!dateSelect.value && monthOptions.length > 0) {
    dateSelect.value = monthOptions[0].value;
    summaryDate.forEach((e) => (e.textContent = monthOptions[0].text));
    document.querySelectorAll(fromModal ? ".booking-modal-date-btn" : ".tour-booking-date-item").forEach((btn, idx) => {
      btn.classList.toggle("active", idx === 0);
    });
    if (fromModal && document.getElementById("selectedDate")) {
      document.getElementById("selectedDate").value = monthOptions[0].value;
    } else if (!fromModal && document.getElementById("modalSelectedDate")) {
      document.getElementById("modalSelectedDate").value = monthOptions[0].value;
    }
  }
  isUpdating = false;
  if (fromModal) validateModalForm();
  else validateMainForm();
}

  // Update modal city summary
  function updateModalCitySummary() {
    const selectedCity = document.getElementById("modalSelectedCity").value;
    const cityData = deptCities.find((city) => city.City === selectedCity);
    const citySummary = document.querySelector(".booking-modal-city-summary");
    const cityName = document.querySelector(".booking-modal-city-name");
    const cityState = document.querySelector(".booking-modal-city-state");
    const cityPrice = document.querySelector(".booking-modal-city-price");
    const cityDuration = document.querySelector(".booking-modal-city-duration");
    if (cityData && cityData.City !== "Unknown") {
      citySummary.style.display = "block";
      cityName.textContent = cityData.City;
      cityState.textContent = cityData.State;
      const adultPrice = cityData.price && cityData.price[0] ? cityData.price[0].adultPrice : trip.price || "N/A";
      cityPrice.textContent = `₹${adultPrice}/adult`;
      cityDuration.textContent = cityData.tripDuration || "N/A";
    } else {
      citySummary.style.display = "none";
      cityName.textContent = "City";
      cityState.textContent = "State";
      cityPrice.textContent = "₹0/adult";
      cityDuration.textContent = "0 Days";
    }
  }

  // Sync payment options between main form and modal
  function syncPaymentOptions() {
    const paymentOptionRadios = document.querySelectorAll('input[name="paymentOptionRadio"]');
    const modalPaymentOptionRadios = document.querySelectorAll('input[name="modalPaymentOptionRadio"]');
    const paymentOptionSelect = document.getElementById("paymentOption");
    paymentOptionRadios.forEach((radio) => {
      radio.addEventListener("change", () => {
        modalPaymentOptionRadios.forEach((modalRadio) => {
          if (modalRadio.value === radio.value) {
            modalRadio.checked = true;
          }
        });
        if (paymentOptionSelect) paymentOptionSelect.value = radio.value;
      });
    });
    modalPaymentOptionRadios.forEach((modalRadio) => {
      modalRadio.addEventListener("change", () => {
        paymentOptionRadios.forEach((radio) => {
          if (radio.value === modalRadio.value) {
            radio.checked = true;
          }
        });
        if (paymentOptionSelect) paymentOptionSelect.value = modalRadio.value;
      });
    });
  }

  // Open booking modal
  function openBookingModal() {
    const modalElement = document.getElementById("bookingModal");
    const modal = bootstrap.Modal.getOrCreateInstance(modalElement);
    updateModalCitySummary();
    updateDatesAndTabs(true);
    modal.show();
  }

  function toggleFloatingPanel() {
  const floatingSec = document.querySelector(".tour-booking-floating-sec");
  const backdrop = document.querySelector(".tour-booking-floating-backdrop");
  floatingSec.classList.toggle("active");
  backdrop.classList.toggle("active");
}

  // Submit modal booking
  async function submitModalBooking() {
    if (!isLoggedIn) {
      $('#signinModal').modal('show');
      return;
    }
    const citySelect = document.getElementById("modalSelectedCity");
    const dateSelect = document.getElementById("modalSelectedDate");
    const transportSelect = document.getElementById("modalSelectedTransport");
    const paymentOption = document.querySelector('input[name="modalPaymentOptionRadio"]:checked').value;
    if (!citySelect.value || citySelect.value === "Unknown") {
      document.getElementById("modalCityError").style.display = "block";
      return;
    }
    if (!dateSelect.value) {
      document.getElementById("modalDateError").style.display = "block";
      return;
    }
    const selectedCity = deptCities.find((city) => city.City === citySelect.value);
    const cutoffDays = parseInt(selectedCity.bookingCutoffDays || "0", 10);
    const selectedDate = new Date(dateSelect.value);
    const now = new Date();
    now.setHours(0, 0, 0, 0);
    const cutoffDate = new Date(now);
    cutoffDate.setDate(now.getDate() + cutoffDays);
    if (selectedDate <= cutoffDate) {
      showContactModal(`The selected date is within the ${cutoffDays}-day booking cutoff period. Please contact our team to proceed.`);
      return;
    }
    const form = document.getElementById("proceedToBook");
    const mainCitySelect = document.getElementById("selectedCity");
    const mainDateSelect = document.getElementById("selectedDate");
    const mainTransportSelect = document.getElementById("selectedTransport");
    const mainPaymentOption = document.getElementById("paymentOption");
    mainCitySelect.value = citySelect.value;
    mainDateSelect.value = dateSelect.value;
    if (transportSelect) mainTransportSelect.value = transportSelect.value;
    mainPaymentOption.value = paymentOption;
    document.querySelector(`input[name="paymentOptionRadio"][value="${paymentOption}"]`).checked = true;
    form.submit();
  }

  // Proceed with booking
  async function proceedWithBooking() {
    if (!isLoggedIn) {
      $('#signinModal').modal('show');
      return;
    }
    const citySelect = document.getElementById("selectedCity");
    const dateSelect = document.getElementById("selectedDate");
    const transportSelect = document.getElementById("selectedTransport");
    if (!citySelect.value || citySelect.value === "Unknown") {
      document.getElementById("cityError").style.display = "block";
      return;
    }
    if (!dateSelect.value) {
      document.getElementById("dateError").style.display = "block";
      return;
    }
    const selectedCity = deptCities.find((city) => city.City === citySelect.value);
    const cutoffDays = parseInt(selectedCity.bookingCutoffDays || "0", 10);
    const selectedDate = new Date(dateSelect.value);
    const now = new Date();
    now.setHours(0, 0, 0, 0);
    const cutoffDate = new Date(now);
    cutoffDate.setDate(now.getDate() + cutoffDays);
    if (selectedDate <= cutoffDate) {
      showContactModal(`The selected date is within the ${cutoffDays}-day booking cutoff period. Please contact our team to proceed.`);
      return;
    }
    document.getElementById("proceedToBook").submit();
  }

  // Handle quick call form submission
  document.getElementById("quickCallForm")?.addEventListener("submit", async (e) => {
    e.preventDefault();
    const submitBtn = document.getElementById("submitQuickCall");
    const guestName = document.getElementById("guestName").value.trim();
    const mobileNo = document.getElementById("mobileNo").value.trim();
    const countryCode = document.getElementById("countryCode").value;
    const nameError = document.getElementById("guestNameError");
    const mobileError = document.getElementById("mobileNoError");
    let isValid = true;
    if (!guestName) {
      nameError.style.display = "block";
      isValid = false;
    } else {
      nameError.style.display = "none";
    }
    if (!/^\d{10}$/.test(mobileNo)) {
      mobileError.style.display = "block";
      isValid = false;
    } else {
      mobileError.style.display = "none";
    }
    submitBtn.disabled = !isValid;
    if (!isValid) return;
    submitBtn.disabled = true;
    try {
      const response = await fetch("/quick-call/request", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
          "CSRF-Token": csrfToken,
        },
        body: JSON.stringify({
          guestName,
          mobileNo: `${countryCode}${mobileNo}`,
          tripId: trip._id,
        }),
      });
      if (response.ok) {
        bootstrap.Modal.getInstance(document.getElementById("quickCallModal")).hide();
        bootstrap.Modal.getOrCreateInstance(document.getElementById("quickCallSuccessModal")).show();
      } else {
        showContactModal("Failed to submit request. Please try again or contact support.");
      }
    } catch (error) {
      console.error("Error submitting quick call:", error);
      showContactModal("An error occurred. Please try again or contact support.");
    } finally {
      submitBtn.disabled = false;
    }
  });

  // Validate quick call form inputs
  document.getElementById("guestName")?.addEventListener("input", () => {
    const guestName = document.getElementById("guestName").value.trim();
    const mobileNo = document.getElementById("mobileNo").value.trim();
    const submitBtn = document.getElementById("submitQuickCall");
    const nameError = document.getElementById("guestNameError");
    if (!guestName) {
      nameError.style.display = "block";
      submitBtn.disabled = true;
    } else {
      nameError.style.display = "none";
      submitBtn.disabled = !guestName || !/^\d{10}$/.test(mobileNo);
    }
  });

  document.getElementById("mobileNo")?.addEventListener("input", () => {
    const guestName = document.getElementById("guestName").value.trim();
    const mobileNo = document.getElementById("mobileNo").value.trim();
    const submitBtn = document.getElementById("submitQuickCall");
    const mobileError = document.getElementById("mobileNoError");
    if (!/^\d{10}$/.test(mobileNo)) {
      mobileError.style.display = "block";
      submitBtn.disabled = true;
    } else {
      mobileError.style.display = "none";
      submitBtn.disabled = !guestName || !/^\d{10}$/.test(mobileNo);
    }
  });

  // Show tab for More Information section
  function showTab(tabId) {
    document.querySelectorAll(".tab-menu .tab").forEach((tab) => tab.classList.remove("active"));
    document.querySelectorAll(".tab-content").forEach((content) => content.classList.remove("active"));
    const selectedTab = document.querySelector(`.tab[onclick="showTab('${tabId}')"]`);
    if (selectedTab) selectedTab.classList.add("active");
    const selectedContent = document.getElementById(tabId);
    if (selectedContent) selectedContent.classList.add("active");
  }

  // Initialize mobile booking features
  function initializeMobileBookingFeatures() {
    // Setup mobile carousel scroll listener
    const track = document.getElementById('mobileCityTrack');
    if (track) {
      track.addEventListener('scroll', checkMobileCarouselButtons);
    }
    
    // Setup mobile payment option listeners
    const mobilePaymentOptions = document.querySelectorAll('input[name="mobilePaymentOption"]');
    mobilePaymentOptions.forEach(option => {
      option.addEventListener('change', function() {
        // Update corresponding desktop payment option
        const desktopOption = document.querySelector(`input[name="paymentOptionRadio"][value="${this.value}"]`);
        if (desktopOption) {
          desktopOption.checked = true;
        }
        
        // Update main form payment option
        const mainPaymentSelect = document.getElementById('paymentOption');
        if (mainPaymentSelect) {
          mainPaymentSelect.value = this.value;
        }
      });
    });
    
    // Setup mobile payment option visual feedback
    const mobilePaymentContainers = document.querySelectorAll('.mobile-payment-option');
    mobilePaymentContainers.forEach(container => {
      const radio = container.querySelector('input[type="radio"]');
      const label = container.querySelector('label');
      
      if (radio && label) {
        label.addEventListener('click', function() {
          // Remove active class from all payment options
          mobilePaymentContainers.forEach(c => c.classList.remove('active'));
          // Add active class to clicked option
          container.classList.add('active');
        });
        
        // Set initial active state
        if (radio.checked) {
          container.classList.add('active');
        }
      }
    });
  }

  // Mobile Booking Functions
  function toggleMobileBooking() {
    const mobileSection = document.getElementById('mobileBookingSection');
    const fab = document.getElementById('mobileBookingFab');
    
    if (mobileSection.classList.contains('active')) {
      mobileSection.classList.remove('active');
      fab.style.display = 'flex';
    } else {
      mobileSection.classList.add('active');
      fab.style.display = 'none';
      // Initialize mobile booking if not already done
      if (!mobileSection.dataset.initialized) {
        initializeMobileBooking();
        mobileSection.dataset.initialized = 'true';
      }
    }
  }

  function initializeMobileBooking() {
    // Select first city by default
    const firstCityCard = document.querySelector('.mobile-city-card');
    if (firstCityCard) {
      selectMobileCity(firstCityCard);
    }
    
    // Setup carousel navigation
    checkMobileCarouselButtons();
  }

  function selectMobileCity(element) {
    // Remove active class from all city cards
    document.querySelectorAll('.mobile-city-card').forEach(card => card.classList.remove('active'));
    
    // Add active class to selected card
    element.classList.add('active');
    
    // Get city data
    const city = element.getAttribute('data-city');
    const state = element.getAttribute('data-state');
    const price = element.getAttribute('data-price');
    const duration = element.getAttribute('data-duration');
    const cutoff = element.getAttribute('data-cutoff');
    const partial = element.getAttribute('data-partial');
    
    // Update mobile summary
    updateMobileBookingSummary(city, state, price, duration);
    
    // Update main form selections
    const mainCitySelect = document.getElementById('selectedCity');
    if (mainCitySelect) mainCitySelect.value = city;
    
    // Update desktop city cards
    const desktopCityCard = document.querySelector(`.tour-booking-city-card[data-city="${city}"]`);
    if (desktopCityCard) {
      document.querySelectorAll('.tour-booking-city-card').forEach(card => card.classList.remove('active'));
      desktopCityCard.classList.add('active');
    }
    
    // Show transport section and load transport options
    showMobileSection('mobileTransportSection');
    buildMobileTransport(city);
    
    // Show date section and load dates
    showMobileSection('mobileDateSection');
    updateMobileDates(city);
    
    // Show payment section
    showMobileSection('mobilePaymentSection');
    updateMobilePaymentOptions(city, price);
    
    // Validate mobile form
    validateMobileForm();
    
    // Also validate main form to keep them in sync
    validateMainForm();
  }

  function updateMobileBookingSummary(city, state, price, duration) {
    const summaryElements = {
      city: document.querySelectorAll('.mobile-booking-summary .booking-summary-city'),
      date: document.querySelectorAll('.mobile-booking-summary .booking-summary-date'),
      duration: document.querySelectorAll('.mobile-booking-summary .booking-summary-duration'),
      price: document.querySelectorAll('.mobile-booking-summary .booking-summary-price'),
      transport: document.querySelectorAll('.mobile-booking-summary .booking-summary-transport')
    };
    
    if (city && city !== 'Unknown') {
      summaryElements.city.forEach(el => el.textContent = `${city}, ${state}`);
      summaryElements.duration.forEach(el => el.textContent = duration || 'N/A');
      summaryElements.price.forEach(el => el.textContent = `₹${price}/person`);
    } else {
      summaryElements.city.forEach(el => el.textContent = 'Not selected');
      summaryElements.duration.forEach(el => el.textContent = 'Not selected');
      summaryElements.price.forEach(el => el.textContent = 'Not selected');
    }
  }

  function showMobileSection(sectionId) {
    const section = document.getElementById(sectionId);
    if (section) {
      section.style.display = 'block';
    }
  }

  function buildMobileTransport(selectedCity) {
    const transportOptions = document.getElementById('mobileTransportOptions');
    const cityData = deptCities.find(city => city.City === selectedCity);
    
    if (!transportOptions || !cityData || !cityData.price) {
      return;
    }
    
    transportOptions.innerHTML = '';
    
    cityData.price.forEach((item, index) => {
      if (item.transferType && item.transferType.trim() !== '') {
        const option = document.createElement('div');
        option.className = `mobile-transport-option ${index === 0 ? 'active' : ''}`;
        option.textContent = item.transferType.charAt(0).toUpperCase() + item.transferType.slice(1);
        option.onclick = () => selectMobileTransport(index, item);
        transportOptions.appendChild(option);
      }
    });
    
    if (cityData.price.length > 0) {
      selectMobileTransport(0, cityData.price[0]);
    }
  }

  function selectMobileTransport(index, transportData) {
    // Remove active class from all transport options
    document.querySelectorAll('.mobile-transport-option').forEach(option => option.classList.remove('active'));
    
    // Add active class to selected option
    const selectedOption = document.querySelectorAll('.mobile-transport-option')[index];
    if (selectedOption) {
      selectedOption.classList.add('active');
    }
    
    // Update summary
    const transportElements = document.querySelectorAll('.mobile-booking-summary .booking-summary-transport');
    transportElements.forEach(el => el.textContent = transportData.transferType || 'Not available');
    
    // Update price
    const priceElements = document.querySelectorAll('.mobile-booking-summary .booking-summary-price');
    priceElements.forEach(el => el.textContent = `₹${transportData.adultPrice}/person`);
    
    // Update payment options
    const fullPriceElements = document.querySelectorAll('.mobile-booking-summary .booking-summary-price-full');
    fullPriceElements.forEach(el => el.textContent = `₹${transportData.adultPrice}`);
    
    // Update main form transport selection
    const mainTransportSelect = document.getElementById('selectedTransport');
    if (mainTransportSelect) mainTransportSelect.value = transportData.transferType;
    
    validateMobileForm();
    validateMainForm();
  }

  function updateMobileDates(selectedCity) {
    const cityData = deptCities.find(city => city.City === selectedCity);
    if (!cityData || !cityData.dates || cityData.dates.length === 0) {
      return;
    }
    
    const yearTabs = document.getElementById('mobileYearTabs');
    const monthTabs = document.getElementById('mobileMonthTabs');
    const dateGrid = document.getElementById('mobileDateGrid');
    
    if (!yearTabs || !monthTabs || !dateGrid) return;
    
    // Clear existing content
    yearTabs.innerHTML = '';
    monthTabs.innerHTML = '';
    dateGrid.innerHTML = '';
    
    const cutoffDays = parseInt(cityData.bookingCutoffDays || '0', 10);
    const dateOptions = generateDateRanges(cityData.dates, cityData.tripDuration, cutoffDays);
    
    if (dateOptions.length === 0) {
      dateGrid.innerHTML = '<div class="text-center text-muted p-3">No dates available</div>';
      return;
    }
    
    // Group dates by year and month
    const datesByYear = {};
    dateOptions.forEach(option => {
      const year = option.startDate.getUTCFullYear().toString();
      const month = option.startDate.toLocaleString('en-US', { month: 'long', timeZone: 'UTC' });
      
      if (!datesByYear[year]) datesByYear[year] = {};
      if (!datesByYear[year][month]) datesByYear[year][month] = [];
      datesByYear[year][month].push(option);
    });
    
    // Create year tabs
    const years = Object.keys(datesByYear).sort();
    years.forEach((year, index) => {
      const tab = document.createElement('button');
      tab.className = `mobile-date-tab ${index === 0 ? 'active' : ''}`;
      tab.textContent = year;
      tab.onclick = () => showMobileYear(year);
      yearTabs.appendChild(tab);
    });
    
    // Show first year
    if (years.length > 0) {
      showMobileYear(years[0]);
    }
  }

  function showMobileYear(year) {
    const selectedCity = document.querySelector('.mobile-city-card.active')?.getAttribute('data-city');
    const cityData = deptCities.find(city => city.City === selectedCity);
    
    if (!cityData || !cityData.dates) return;
    
    const monthTabs = document.getElementById('mobileMonthTabs');
    const dateGrid = document.getElementById('mobileDateGrid');
    
    if (!monthTabs || !dateGrid) return;
    
    // Update active year tab
    document.querySelectorAll('.mobile-date-tab').forEach(tab => tab.classList.remove('active'));
    const yearTab = Array.from(document.querySelectorAll('.mobile-date-tab')).find(tab => tab.textContent === year);
    if (yearTab) yearTab.classList.add('active');
    
    // Clear month tabs and date grid
    monthTabs.innerHTML = '';
    dateGrid.innerHTML = '';
    
    const cutoffDays = parseInt(cityData.bookingCutoffDays || '0', 10);
    const dateOptions = generateDateRanges(cityData.dates, cityData.tripDuration, cutoffDays);
    
    // Filter dates for selected year
    const yearDates = dateOptions.filter(option => 
      option.startDate.getUTCFullYear().toString() === year
    );
    
    // Group by month
    const datesByMonth = {};
    yearDates.forEach(option => {
      const month = option.startDate.toLocaleString('en-US', { month: 'long', timeZone: 'UTC' });
      if (!datesByMonth[month]) datesByMonth[month] = [];
      datesByMonth[month].push(option);
    });
    
    // Create month tabs
    const months = Object.keys(datesByMonth).sort((a, b) => {
      const monthOrder = ['January', 'February', 'March', 'April', 'May', 'June', 
                         'July', 'August', 'September', 'October', 'November', 'December'];
      return monthOrder.indexOf(a) - monthOrder.indexOf(b);
    });
    
    months.forEach((month, index) => {
      const tab = document.createElement('button');
      tab.className = `mobile-date-tab ${index === 0 ? 'active' : ''}`;
      tab.textContent = month;
      tab.onclick = () => showMobileMonth(year, month);
      monthTabs.appendChild(tab);
    });
    
    // Show first month
    if (months.length > 0) {
      showMobileMonth(year, months[0]);
    }
  }

  function showMobileMonth(year, month) {
    const selectedCity = document.querySelector('.mobile-city-card.active')?.getAttribute('data-city');
    const cityData = deptCities.find(city => city.City === selectedCity);
    
    if (!cityData || !cityData.dates) return;
    
    const dateGrid = document.getElementById('mobileDateGrid');
    if (!dateGrid) return;
    
    // Update active month tab
    document.querySelectorAll('.mobile-date-tab').forEach(tab => tab.classList.remove('active'));
    const monthTab = Array.from(document.querySelectorAll('.mobile-date-tab')).find(tab => tab.textContent === month);
    if (monthTab) monthTab.classList.add('active');
    
    // Clear date grid
    dateGrid.innerHTML = '';
    
    const cutoffDays = parseInt(cityData.bookingCutoffDays || '0', 10);
    const dateOptions = generateDateRanges(cityData.dates, cityData.tripDuration, cutoffDays);
    
    // Filter dates for selected year and month
    const monthDates = dateOptions.filter(option => 
      option.startDate.getUTCFullYear().toString() === year &&
      option.startDate.toLocaleString('en-US', { month: 'long', timeZone: 'UTC' }) === month
    );
    
    if (monthDates.length === 0) {
      dateGrid.innerHTML = '<div class="text-center text-muted p-3">No dates available for this month</div>';
      return;
    }
    
    // Create date items
    monthDates.forEach((option, index) => {
      const dateItem = document.createElement('div');
      dateItem.className = `mobile-date-item ${index === 0 ? 'active' : ''}`;
      dateItem.textContent = option.startDate.getUTCDate();
      dateItem.setAttribute('data-value', option.value);
      dateItem.onclick = () => selectMobileDate(option, dateItem);
      dateGrid.appendChild(dateItem);
    });
    
    // Select first date by default
    if (monthDates.length > 0) {
      selectMobileDate(monthDates[0], dateGrid.querySelector('.mobile-date-item'));
    }
  }

  function selectMobileDate(option, element) {
    // Remove active class from all date items
    document.querySelectorAll('.mobile-date-item').forEach(item => item.classList.remove('active'));
    
    // Add active class to selected item
    element.classList.add('active');
    
    // Update summary
    const dateElements = document.querySelectorAll('.mobile-booking-summary .booking-summary-date');
    dateElements.forEach(el => el.textContent = option.text);
    
    // Update main form
    const mainDateSelect = document.getElementById('selectedDate');
    if (mainDateSelect) mainDateSelect.value = option.value;
    
    validateMobileForm();
    validateMainForm();
  }

  function updateMobilePaymentOptions(city, price) {
    const cityData = deptCities.find(c => c.City === city);
    if (!cityData) return;
    
    // Update full payment price
    const fullPriceElements = document.querySelectorAll('.mobile-booking-summary .booking-summary-price-full');
    fullPriceElements.forEach(el => el.textContent = `₹${price}`);
    
    // Update partial payment price
    const partialAmount = parseFloat(cityData.partialPayment || '0');
    const partialPriceElements = document.querySelectorAll('.mobile-booking-summary .booking-summary-price-partial');
    if (partialAmount > 0) {
      partialPriceElements.forEach(el => el.textContent = `₹${partialAmount}`);
    }
  }

  function validateMobileForm() {
    const citySelected = document.querySelector('.mobile-city-card.active') !== null;
    const dateSelected = document.querySelector('.mobile-date-item.active') !== null;
    const transportSelected = document.querySelector('.mobile-transport-option.active') !== null;
    const proceedBtn = document.querySelector('.mobile-booking-proceed');
    
    // Additional validation checks to match desktop validation
    const selectedCity = document.querySelector('.mobile-city-card.active')?.getAttribute('data-city');
    const selectedDate = document.querySelector('.mobile-date-item.active')?.getAttribute('data-value');
    
    let isValid = citySelected && dateSelected && transportSelected;
    
    // Check if city is valid (not Unknown)
    if (selectedCity === 'Unknown' || !selectedCity) {
      isValid = false;
    }
    
    // Check if date is valid
    if (!selectedDate || selectedDate === 'Select a date') {
      isValid = false;
    }
    
    // Check cutoff date validation
    if (isValid && selectedCity && selectedDate) {
      const cityData = deptCities.find(city => city.City === selectedCity);
      if (cityData) {
        const cutoffDays = parseInt(cityData.bookingCutoffDays || '0', 10);
        const selectedDateObj = new Date(selectedDate);
        const now = new Date();
        now.setHours(0, 0, 0, 0);
        const cutoffDate = new Date(now);
        cutoffDate.setDate(now.getDate() + cutoffDays);
        
        if (selectedDateObj <= cutoffDate) {
          isValid = false;
        }
      }
    }
    
    if (proceedBtn) {
      proceedBtn.disabled = !isValid;
    }
  }

  function proceedMobileBooking() {
    if (!isLoggedIn) {
      $('#signinModal').modal('show');
      return;
    }
    
    const selectedCity = document.querySelector('.mobile-city-card.active')?.getAttribute('data-city');
    const selectedDate = document.querySelector('.mobile-date-item.active')?.getAttribute('data-value');
    const selectedTransport = document.querySelector('.mobile-transport-option.active')?.textContent;
    const selectedPayment = document.querySelector('input[name="mobilePaymentOption"]:checked')?.value;
    
    if (!selectedCity || !selectedDate || !selectedTransport) {
      return;
    }
    
    // Check cutoff date
    const cityData = deptCities.find(city => city.City === selectedCity);
    const cutoffDays = parseInt(cityData?.bookingCutoffDays || '0', 10);
    const selectedDateObj = new Date(selectedDate);
    const now = new Date();
    now.setHours(0, 0, 0, 0);
    const cutoffDate = new Date(now);
    cutoffDate.setDate(now.getDate() + cutoffDays);
    
    if (selectedDateObj <= cutoffDate) {
      showContactModal(`The selected date is within the ${cutoffDays}-day booking cutoff period. Please contact our team to proceed.`);
      return;
    }
    
    // Update main form and submit
    const form = document.getElementById('proceedToBook');
    const mainCitySelect = document.getElementById('selectedCity');
    const mainDateSelect = document.getElementById('selectedDate');
    const mainTransportSelect = document.getElementById('selectedTransport');
    const mainPaymentSelect = document.getElementById('paymentOption');
    
    if (mainCitySelect) mainCitySelect.value = selectedCity;
    if (mainDateSelect) mainDateSelect.value = selectedDate;
    if (mainTransportSelect) mainTransportSelect.value = selectedTransport;
    if (mainPaymentSelect) mainPaymentSelect.value = selectedPayment;
    
    // Update payment radio buttons
    const paymentRadio = document.querySelector(`input[name="paymentOptionRadio"][value="${selectedPayment}"]`);
    if (paymentRadio) paymentRadio.checked = true;
    
    form.submit();
  }


  // Mobile carousel functions
  function slideMobileLeft() {
    const track = document.getElementById('mobileCityTrack');
    if (track) {
      track.scrollBy({ left: -120, behavior: 'smooth' });
    }
  }

  function slideMobileRight() {
    const track = document.getElementById('mobileCityTrack');
    if (track) {
      track.scrollBy({ left: 120, behavior: 'smooth' });
    }
  }

  function checkMobileCarouselButtons() {
    const track = document.getElementById('mobileCityTrack');
    const prevBtn = document.querySelector('.mobile-carousel-prev');
    const nextBtn = document.querySelector('.mobile-carousel-next');
    
    if (!track || !prevBtn || !nextBtn) return;
    
    const isOverflowing = track.scrollWidth > track.clientWidth;
    const canScrollLeft = track.scrollLeft > 0;
    const canScrollRight = track.scrollLeft < track.scrollWidth - track.clientWidth - 1;
    
    prevBtn.style.display = isOverflowing && canScrollLeft ? 'flex' : 'none';
    nextBtn.style.display = isOverflowing && canScrollRight ? 'flex' : 'none';
  }

  // Update mobile carousel buttons on scroll
  document.addEventListener('DOMContentLoaded', function() {
    const track = document.getElementById('mobileCityTrack');
    if (track) {
      track.addEventListener('scroll', checkMobileCarouselButtons);
    }
    
    // Initialize recommended trips slider
    initializeRecommendedTripsSlider();
  });

  // Recommended Trips Slider Functions
  function initializeRecommendedTripsSlider() {
    const track = document.getElementById('recommendedTripsTrack');
    if (!track) return;
    
    checkRecommendedTripsButtons();
    track.addEventListener('scroll', checkRecommendedTripsButtons);
  }

  function slideRecommendedLeft() {
    const track = document.getElementById('recommendedTripsTrack');
    if (track) {
      track.scrollBy({ left: -340, behavior: 'smooth' });
    }
  }

  function slideRecommendedRight() {
    const track = document.getElementById('recommendedTripsTrack');
    if (track) {
      track.scrollBy({ left: 340, behavior: 'smooth' });
    }
  }

  function checkRecommendedTripsButtons() {
    const track = document.getElementById('recommendedTripsTrack');
    const prevBtn = document.querySelector('.recommended-trips-prev');
    const nextBtn = document.querySelector('.recommended-trips-next');
    
    if (!track || !prevBtn || !nextBtn) return;
    
    const isOverflowing = track.scrollWidth > track.clientWidth;
    const canScrollLeft = track.scrollLeft > 0;
    const canScrollRight = track.scrollLeft < track.scrollWidth - track.clientWidth - 1;
    
    prevBtn.style.display = isOverflowing && canScrollLeft ? 'flex' : 'none';
    nextBtn.style.display = isOverflowing && canScrollRight ? 'flex' : 'none';
  }

</script>
</body>
</html>