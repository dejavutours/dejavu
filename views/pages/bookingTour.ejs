<!DOCTYPE html>
<html lang="en">

<head>
  <%- include('../partials/headtag'); %>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css">
    <link href="assets/plugins/global/plugins.bundle.css" rel="stylesheet" type="text/css"/>
    <link rel="stylesheet" href="/path-to/nice-select.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css">
    
    <!-- jQuery (must be before nice-select) -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="assets/plugins/global/plugins.bundle.js"></script>
    
    <!-- Nice Select CSS -->
    <link rel="stylesheet"
    href="https://cdnjs.cloudflare.com/ajax/libs/jquery-nice-select/1.1.0/css/nice-select.min.css" />
    
    <!-- Nice Select JS -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-nice-select/1.1.0/js/jquery.nice-select.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <style>
      .back-btn {
        display: flex;
        align-items: center;
        margin-bottom: 1rem;
      }

      .back-btn a {
        text-decoration: none;
        color: #002d66;
        font-weight: bold;
        display: flex;
        align-items: center;
      }

      .back-btn svg {
        margin-right: 0.5rem;
      }

      .b_container {
        display: flex;
        flex-wrap: wrap;
        gap: 2rem;
        justify-content: center;
      }

      .form-section,
      .summary-section {
        background-color: #fff;
        padding: 1.5rem;
        border-radius: 12px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        flex: 1 1 320px;
        max-width: 600px;
      }

      .cm-margin {
        margin-bottom: 1rem;
      }

      .cm-label {
        display: block;
        margin-top: 1rem;
        margin-bottom: 0.3rem;
        font-weight: 600;
      }

      .cm-field {
        width: 100%;
        border: 1px solid #ccc;
        border-radius: 6px;
        margin-bottom: 0.4rem;
      }

      .cm-input-number {
        border: 1px solid transparent;
        background-color: #f1f1f1;
        padding: 4px;
        font-size: 16px;
        width: 20%;
        border-radius: 11%;
      }

      .cm-row {
        display: flex;
        gap: 1rem;
      }

      .cm-row>div {
        flex: 1;
      }

      .count-group {
        display: flex;
        align-items: center;
        gap: 2rem;
        margin-bottom: 1rem;
        width: 100%;
      }

      .count-group div {
        display: flex;
        align-items: center;
        gap: 0.5rem;
      }

      .count-group button {
        background-color: #002d66;
        color: white;
        font-weight: bold;
        padding: 0.3rem 0.8rem;
        border: none;
        border-radius: 6px;
        cursor: pointer;
        font-size: 1rem;
        cursor: pointer;
      }

      .summary-section {
        background-color: #fff;
      }

      .summary-section p {
        margin: 0.5rem 0;
      }
      .header-section {
        display: flex;
        flex-direction: row;
        justify-content: space-between;
      }
      
      .border-top-2 {
        border-top: 1px solid grey;
      }

      .payment-options button {
        margin-right: 0.5rem;
        padding: 0.6rem 1.2rem;
        border: 1px solid #ccc;
        border-radius: 6px;
        background-color: #f0f0f0;
        cursor: pointer;
      }

      .payment-btn {
        background-color: #002d66;
        color: white;
        padding: 0.8rem;
        border: none;
        border-radius: 6px;
        width: 100%;
        margin-top: 1rem;
        cursor: pointer;
        font-weight: bold;
      }
      .addperson-btn {
        background-color: #002d66;
        color: white;
        padding: 0.8rem;
        border: none;
        border-radius: 6px;
        margin-top: 1rem;
        cursor: pointer;
        font-weight: bold;
      }
      .remove-btn{
        background-color: #002d66;
        color: white;
        padding: 0.3rem 0.5rem;
        border: none;
        border-radius: 6px;
        cursor: pointer;
        font-weight: bold;
      }

      @media (max-width: 768px) {
        .cm-row {
          flex-direction: column;
        }
      }
      .padding-top-1 {
        padding-top: 1%;
      }
      .cm-margin-top {
        margin-top: 5px !important;
      }
      .red{
        color: red;
      }
      .blocked {
        cursor: not-allowed !important;
        opacity: 0.6;
      }
    </style>

</head>

<body>
  <%- include('../partials/header'); %>
  <div class="container">
  <div class="back-btn">
      <a href="#"> &larr;
        <svg width="20" height="20" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round"
          stroke-linejoin="round" class="feather feather-arrow-left">
          &larr; <line x1="19" y1="12" x2="5" y2="12" />
          <polyline="12 19 5 12 12 5" />&larr;
        </svg>
        Back
      </a>
    </div>

    <h2 class="cm-margin">Booking initiated</h2>
    <p>Please enter your details below and proceed to payment. Leave the rest to us.</p>

    <form action="/bookingTour" method="POST" id="bookingForm">
      <input type="hidden" name="_csrf" value="<%= csrfToken %>"/>
      <!-- price only for calculate hidden -->
      <input type="hidden" name="Adultprice" id="Adultprice"/>
      <input type="hidden" name="childprice" id="childprice"/>
      <div class="b_container">
        <div class="form-section">
          <div class="cm-row">
            <label class="cm-label">Transport Type</label>
            <select class="cm-field" name="transportType" id="transportType" onchange="populateForm()">
              <option value="" disabled selected>Select Transport Type</option>
              <% tourDetails.transportList.forEach(loc=> { %>
                <option value="<%= loc.transferType %>">
                  <%= loc.transferType %>
                </option>
                <% }); %>
            </select>
          </div>
         <div class="cm-row">
          <div>
            <label class="cm-label">Joining from</label>
            <select class="cm-field" name="joiningFrom" id="joiningFrom" onchange="populateDates()" disabled>
              <% tourDetails.deptcities.forEach(loc=> { %>
                <option value="<%= loc.City %>" <%= tourDetails.selectedInfo.city == loc.City ? 'selected' : '' %> >
                  <%= loc.City %>
                </option>
                <% }); %>
            </select>
          </div>
          <div>
            <label class="cm-label ">Tour date <span class="red">*</span></label>
            <select class="cm-field enable-disable" name="travelDate" id="travelDate" onchange="onchangetoureDate()">
              <!-- populate based on Joining From Selection -->
            </select>
          </div>
         </div>
          <div class="count-group cm-row">
            <div>
              <label class="cm-label cm-margin-top">Adults (10+): </label>
              <button class="enable-disable" type="button" onclick="increDecreValue('adults','decrement')">-</button>
              <input id="adults" name="adults" class="cm-input-number enable-disable" type="number" value="1" />
              <!-- <span id="adults">2</span> -->
              <button class="enable-disable" type="button" onclick="increDecreValue('adults','increment')">+</button>
            </div>
            <div>
              <label class="cm-label cm-margin-top">Children (5-10):</label>
              <button class="enable-disable" type="button" onclick="increDecreValue('children','decrement')">-</button>
              <input id="children" name="children" class="cm-input-number" type="number" value="1" />
              <!-- <span id="children">2</span> -->
              <button class="enable-disable" type="button" onclick="increDecreValue('children','increment')">+</button>
            </div>
          </div>
          <h3>Personâ€™s details</h3>
          <div id="personDetailsContainer">
            <!-- Do not remove below class('person-details') as some dependance  -->
            <div class="person-details" id="person1">
              <h4>Person 1</h4>
              <div class="cm-row">
                <div>
                  <label class="cm-label">First name <span class="red">*</span></label>
                  <input id="firstName" name="personDetails[0][firstName]" class="cm-field enable-disable" type="text" required
                    placeholder="Your name here" />
                </div>
                <div>
                  <label class="cm-label">Surname <span class="red">*</span></label>
                  <input id="Surname" name="personDetails[0][Surname]" class="cm-field enable-disable" type="text" required
                    placeholder="Your surname here" />
                </div>
              </div>
              <div class="cm-row">
                <div>
                  <label class="cm-label">Birth date <span class="red">*</span></label>
                  <input id="dateofbirth" name="personDetails[0][dateofbirth]" class="cm-field enable-disable" required type="date" />
                </div>
                <div>
                  <label class="cm-label">Gender<span class="red">*</span></label>
                  <select id="Gender" name="personDetails[0][Gender]" class="cm-field enable-disable" required>
                    <option>Male</option>
                    <option>Female</option>
                    <option>Other</option>
                  </select>
                </div>
              </div>
              <div class="cm-row">
                <div>
                  <label class="cm-label">Mobile number <span class="red">*</span></label>
                  <input id="mobileno" name="personDetails[0][mobileno]" class="cm-field enable-disable" type="tel"
                    placeholder="+91 Enter your mobile number" />
                </div>
                <div>
                  <label class="cm-label">Alternative number</label>
                  <input id="alternateNumber" name="personDetails[0][alternateNumber]" class="cm-field enable-disable" type="tel"
                    placeholder="+91 Enter alt mobile number" />
                </div>
              </div>
            </div>
          </div>

          <button id="AddPerson" type="button" class="addperson-btn enable-disable" onclick="addPerson()">+ Add all person's detail</button>
          <label class="cm-label" style="margin-top: 1rem;">Additional services (optional)</label>
        </div>

        <div class="summary-section">
          <h3>Booking summary</h3>
          <p><strong>
              <%= tourDetails.name %>
            </strong></p>
          <p>
            <%= tourDetails.days %>
          </p>
          <p>Pickup from: <span id="pickupFrom"></span></p>
          <p>Travel date: <span id="travelDateDisplay"></span> </p>
          <p><strong>Total costs:</strong>â‚¹<span id="totalCost"></span></p>
          <p>
            <!-- <a href="#">View breakdown</a> -->
            <!-- <a href="#" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#costBreakdownModal">View Cost Breakdown</a> -->
            <a href="#" class="btn btn-primary" id="openCostModalBtn">
              View Cost Breakdown
            </a>
        </p>

          <!-- <div class="payment-options">
            <button>Pay full payment</button>
            <button>Pay part payment</button>
          </div> -->

          <label class="cm-label">Amount to pay now</label>
          <input id="payingAmount" name="payingAmount" class="cm-field" type="text" readonly />
          <!-- <p>Minimum should be 30% of total amount</p> -->

          <button id="submit" class="payment-btn enable-disable">Pay â‚¹<span id="payingAmountDisplay"></span> now</button>
        </div>
      </div>
    </form>
  </div>
  <!-- popup -->
  <div class="modal fade" id="costBreakdownModal" tabindex="-1" aria-labelledby="costBreakdownModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-scrollable">
      <div class="modal-content shadow-lg rounded-4">
        <div class="modal-header">
          <h5 class="modal-title" id="costBreakdownModalLabel">Cost Breakdown</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
  
        <div class="modal-body">
          <h6 class="fw-bold"><%= tourDetails.name %></h6>
          <p class="mb-2 text-muted"><%= tourDetails.days %></p>
  
          <div class="row mb-3">
            <div class="col-md-6"><strong>Pickup from:</strong> <span id="pickupFrom"></span></div>
            <div class="col-md-6"><strong>Travel date:</strong> <span id="travelDateDisplay"></span></div>
          </div>
  
          <h6 class="fw-bold mb-3">Total cost</h6>
  
          <table class="table">
            <thead>
              <tr>
                <th>Item</th>
                <th>Price</th>
                <th>Final Amount</th>
              </tr>
            </thead>
            <tbody id="costTableBody">
            </tbody>
          </table>
  
          <div class="d-flex justify-content-between border-top pt-2">
            <strong>Subtotal</strong>
            <span id="MSubtotal">â‚¹0000</span>
          </div>
          <div class="d-flex justify-content-between">
            <strong>GST(5%)</strong>
            <span id="MGst">â‚¹0000</span>
          </div>
          <div class="d-flex justify-content-between border-top pt-2 fs-5">
            <strong>Total</strong>
            <strong id="MTotal">â‚¹0000</strong>
          </div>
  
          <div class="alert alert-warning mt-4 mb-0">
            3AC train ticket and flight ticket charges will be applied after the actual ticket booking.
          </div>
        </div>
      </div>
    </div>
  </div>
    <%- include('../partials/footer'); %>
      <%- include('../partials/scripttag'); %>


      <!-- Transport Selection Set Form and Price -->
       <script>
        function populateForm () {
          // enable all field on selection
          const allFields = document.querySelectorAll('.enable-disable');
          allFields.forEach(field => field.disabled = false);
          allFields.forEach(field => field.classList.remove('blocked'));
          
          // set Price based on Transport Type and City Selected\
          const  transportType = document.getElementById('transportType');
          const transportList = <%-JSON.stringify(tourDetails.transportList) %>;
          const priceBaseOnTransportType = transportList.find((t)=>t.transferType === transportType.value);
          const Adultprice = document.getElementById('Adultprice');
          const childprice = document.getElementById('childprice');
          Adultprice.value = priceBaseOnTransportType.adultPrice;
          childprice.value = priceBaseOnTransportType.childPrice;
          populateDates();
        };
       </script>
        <!-- bind  travel Date based on Joining from Selection  -->
        <script>
          const deptcities = <%-JSON.stringify(tourDetails.deptcities) %>;
          function populateDates() {
            const selectedCity = document.getElementById('joiningFrom').value.trim();
            const travelDateSelect = document.getElementById('travelDate');
            const pickupFrom = document.getElementById('pickupFrom');
            const travelDateDisplay = document.getElementById('travelDateDisplay');
            const cityObj = deptcities.find(loc => loc.City.trim() === selectedCity);
            while (travelDateSelect.options.length > 1) { travelDateSelect.remove(0); }// remove from index 1 onward
            travelDateSelect.innerHTML = ''; // Optionally, reset default value
            pickupFrom.innerHTML = selectedCity; // set pickup from value
            if (cityObj && cityObj.dates && cityObj.dateList.length > 0) {
              cityObj.dateList.forEach(element => {
                const option = document.createElement('option');
                option.value = element;
                option.textContent = element;
                travelDateSelect.appendChild(option);
              });
              if (cityObj && cityObj.price && cityObj.price.length > 0) {
                recalculateCost();
                // const AdultpriceValue = document.getElementById('Adultprice').value.trim();
                // const childpriceValue = document.getElementById('childprice').value.trim();
                // const NoofAdutts = document.getElementById('adults').value.trim();
                // const NoofChild = document.getElementById('children').value.trim();
                // const totalCost = document.getElementById('totalCost');
                // const payingAmountDisplay = document.getElementById('payingAmountDisplay');
                // const payingAmount = document.getElementById('payingAmount');
                // totalCost.innerHTML = payingAmountDisplay.innerHTML = payingAmount.value = parseInt(NoofAdutts) * parseInt(AdultpriceValue) + parseInt(NoofChild) * parseInt(childpriceValue);
              }
            } else {
              const option = document.createElement('option');
              option.textContent = 'No travel dates available';
              travelDateSelect.appendChild(option);
            }
            travelDateDisplay.innerHTML = travelDateSelect.value;
            if ($.fn.niceSelect) {
              $('#travelDate').niceSelect('destroy');
              $('#travelDate').niceSelect();
            }
          }
        </script>
        <!-- update on changes of toure date -->
        <script>
          function onchangetoureDate(){
            const travelDateSelect = document.getElementById('travelDate');
            const travelDateDisplay = document.getElementById('travelDateDisplay');
            travelDateDisplay.innerHTML = travelDateSelect.value;
          }
        </script>
        <!-- Cost Calculate -->
        <script>
          function recalculateCost() {
            const AdultpriceValue = document.getElementById('Adultprice').value.trim();
            const childpriceValue = document.getElementById('childprice').value.trim();
            const NoofAdutts = document.getElementById('adults').value.trim();
            const NoofChild = document.getElementById('children').value.trim();
            const totalCost = document.getElementById('totalCost');
            const payingAmountDisplay = document.getElementById('payingAmountDisplay');
            const payingAmount = document.getElementById('payingAmount');
            if(isNaN(parseInt(AdultpriceValue)) && isNaN(parseInt(childpriceValue))){
              totalCost.innerHTML = payingAmountDisplay.innerHTML = '-';
              
            } else {
              totalCost.innerHTML = payingAmountDisplay.innerHTML = payingAmount.value = parseInt(NoofAdutts) * parseInt(AdultpriceValue) + parseInt(NoofChild) * parseInt(childpriceValue);
            }
          }
        </script>
        <!-- Increase and Decrease Functions  -->
        <script>
          function increDecreValue(type, operation) {
            const el = document.getElementById(type);
            const personCount = document.getElementById("personDetailsContainer").children.length;
            const NoofAdutts = document.getElementById('adults').value.trim();
            const NoofChild = document.getElementById('children').value.trim();

            if (operation === 'increment') {
              el.value = parseInt(el.value) + 1;
              const addPerson = document.getElementById('AddPerson');
              addPerson.style.display = 'block';
            } else {
              if(parseInt(personCount) < (parseInt(NoofAdutts) + parseInt(NoofChild)) || ((type == 'adults' && parseInt(el.value) == 1) || parseInt(el.value) == 0)){
              el.value = ((type == 'adults' && parseInt(el.value) == 1) || parseInt(el.value) == 0) ? el.value : parseInt(el.value) - 1;
              } else {
                toastr.error("Person details already added. Remove a person first to reduce the count.");
              }
            }
            recalculateCost();
          }
        </script>
        <!-- Add person Field  -->
        <script>
          function addPerson() {
            const personContainer = document.getElementById("personDetailsContainer");
            const personCount = personContainer.children.length + 1;
            const NoofAdutts = document.getElementById('adults').value.trim();
            const NoofChild = document.getElementById('children').value.trim();
            if (parseInt(personContainer.children.length) < (parseInt(NoofAdutts) + parseInt(NoofChild))) {
              let personDiv = document.createElement("div");
              personDiv.classList.add("person-details");
              personDiv.classList.add("border-top-2");
              personDiv.id = `person${personCount}`;
              personDiv.innerHTML = `
            <div class="cm-row padding-top-1 header-section">
              <h4>Person ${personCount} </h4>
             <button id="removePerson${personCount}" type="button" class="remove-btn" onclick="removePerson(${personCount})">x</button>
            </div>
             <div class="cm-row">
              <div>
                <label class="cm-label">First name*</label>
                <input id="firstName" name="personDetails[${personCount - 1}][firstName]" class="cm-field" type="text" required placeholder="Your name here" />
              </div>
              <div>
                <label class="cm-label">Surname*</label>
                <input id="Surname" name="personDetails[${personCount - 1}][Surname]" class="cm-field" type="text" required placeholder="Your surname here" />
              </div>
            </div>
            <div class="cm-row">
              <div>
                <label class="cm-label">Birth date*</label>
                <input id="dateofbirth" name="personDetails[${personCount - 1}][dateofbirth]" class="cm-field" required type="date" />
              </div>
              <div>
                <label class="cm-label">Gender*</label>
                <select id="Gender" name="personDetails[${personCount - 1}][Gender]" class="cm-field" required>
                  <option>Male</option>
                  <option>Female</option>
                  <option>Other</option>
                </select>
              </div>
            </div>
            <div class="cm-row">
            <div>
            <label class="cm-label">Mobile number*</label>
            <input id="mobileno" name="personDetails[${personCount - 1}][mobileno]" class="cm-field" type="tel" placeholder="+91 Enter your mobile number" />
            </div><div>
            <label class="cm-label">Alternative number</label>
            <input id="alternateNumber" name="personDetails[${personCount - 1}][alternateNumber]" class="cm-field" type="tel" placeholder="+91 Enter alt mobile number" />
            </div>
            `;
              personContainer.appendChild(personDiv);
              const addPerson = document.getElementById('AddPerson');
              if (parseInt(personContainer.children.length) == (parseInt(NoofAdutts) + parseInt(NoofChild))) {
                addPerson.style.display = 'none';
              } else {
                addPerson.style.display = 'block';
              }
            }
          }
        </script>
        <!-- remove person Field -->
         <script>
          function removePerson(removePersonId) {
            let div = document.getElementById(`person${removePersonId}`);
            if (div) {
              div.remove();
            }
            const addPerson = document.getElementById('AddPerson');
              addPerson.style.display = 'block';
          }
         </script>
        <!-- on load Script -->
        <script>
          window.onload = () =>{
           // const typeSelect = document.getElementById('type');
            const allFields = document.querySelectorAll('.enable-disable');

            // Focus on the Type dropdown
           // typeSelect.focus();

            // Disable all other fields
            allFields.forEach(field => field.disabled = true);
            allFields.forEach(field => field.classList.add('blocked'));
            // // Enable them on Type selection
            // typeSelect.addEventListener('change', function () {
            //   const hasValue = typeSelect.value !== "";
            //   allFields.forEach(field => field.disabled = !hasValue);
            // });
              //document.getElementById("travelDate").value = selectedInfo1.date;
            populateDates();
          };
          // window.addEventListener("DOMContentLoaded", () => {
          //   populateDates();
          // });
        </script>
        <!-- Submit Form  with Validation -->
         <script>
           document.getElementById('bookingForm').addEventListener('submit', function (e){
            e.preventDefault();
            // validation 

            // create object for send data 
            const form = document.querySelector('bookingForm');
            const formData = new FormData(form);
            const data = {
                  adultPrice: formData.get('Adultprice'),
                  adults: formData.get('adults'),
                  childPrice: formData.get('childprice'),
                  children: formData.get('children'),
                  payingAmount: formData.get('payingAmount'),
                  transportType: formData.get('transportType'),
                  travelDate: formData.get('travelDate'),
                  personDetails: [
                    {
                      firstName: formData.get('personDetails[0][firstName]'),
                      surname: formData.get('personDetails[0][Surname]'),
                      gender: formData.get('personDetails[0][Gender]'),
                      dateOfBirth: formData.get('personDetails[0][dateofbirth]'),
                      mobileNo: formData.get('personDetails[0][mobileno]'),
                      alternateNumber: formData.get('personDetails[0][alternateNumber]')
                    }
                  ]
                };
            console.log("submit");
           });
         </script>
         <!-- open Model with update trigger -->
        <script>
          document.addEventListener("DOMContentLoaded", function () {
          const costModal = new bootstrap.Modal(document.getElementById("costBreakdownModal"));
          document.getElementById("openCostModalBtn").addEventListener("click", function () {
            const costTable = document.getElementById("costTableBody");
            costTable.innerHTML = "";
            // Get value 
            const AdultpriceValue = document.getElementById('Adultprice').value.trim();
            const childpriceValue = document.getElementById('childprice').value.trim();
            const NoofAdutts = document.getElementById('adults').value.trim();
            const NoofChild = document.getElementById('children').value.trim();
            const totalCost = document.getElementById('totalCost');
            const costDetails = [
                { label: "Adults", quantity: NoofAdutts, price: AdultpriceValue, total: NoofAdutts* AdultpriceValue },
                { label: "Child", quantity: NoofChild, price: childpriceValue, total: NoofChild* childpriceValue},
                { label: "Couple stay", quantity: 1, price: 3000, total: 3000 }
              ]
              const subtotalAmountValue = (NoofAdutts* AdultpriceValue) + (NoofChild* childpriceValue) + 3000;
              const gstAmountValue = subtotalAmountValue * 0.05;
              const totalAmount = subtotalAmountValue + gstAmountValue;
            // Adding row
            costDetails.forEach(item => {
                const row = `<tr>
                  <td>${item.label}</td>
                  <td>${item.quantity} x â‚¹${item.price}</td>
                  <td>â‚¹${item.total}</td>
                </tr>`;
                costTable.innerHTML += row;
              });  
              document.getElementById("MSubtotal").textContent = `â‚¹${subtotalAmountValue}`;
              document.getElementById("MGst").textContent = `â‚¹${gstAmountValue}`;
              document.getElementById("MTotal").textContent = `â‚¹${totalAmount}`;
              costModal.show();
          });
            // Show the modal manually
        });
        </script>
</body>
</html>