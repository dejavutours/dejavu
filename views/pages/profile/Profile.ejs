<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <!-- <title>Document</title> -->
    <!-- <link rel="stylesheet" href="member-profile.css"> -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css" integrity="sha384-xOolHFLEh07PJGoPkLv1IbcEPTNtaed2xpHsD9ESMhqIYd0nLMwNLD69Npy4HI+N" crossorigin="anonymous">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:ital,opsz,wght@0,14..32,100..900;1,14..32,100..900&display=swap" rel="stylesheet">
    <style>
        .d-none-list {
            display: none !important;
            /* Use !important to ensure it overrides */
        }

        .member_profile-container .profile-left-bar p.active {
            background-color: #f3f4f6;
            border-left: 4px solid #1a3c6c;
        }

        .member_profile-container {
            gap: 30px;
        }

        .member_profile-container .trip_details {
            gap: 8px;
        }

        .member_profile-container .trip-card-expand .inner-content {
            gap: 15px;
        }

        .member_profile-container .profile-left-bar p {
            padding: 10px 15px;
            margin: 0;
            cursor: pointer;
            border-left: 4px solid transparent;
        }

        .member_profile-container .profile-left-bar {
            min-width: 300px;
        }

        .member_profile-container .right_block .form-container h2 {
            text-align: left;
            margin-bottom: 20px;
            font-size: 18px;
            line-height: 28px;
            color: #111827;
        }

        .member_profile-container .right_block .form-group {
            margin-bottom: 15px;
        }

        .member_profile-container .right_block .form-group label {
            display: block;
            margin-bottom: 5px;
            /* font-weight: bold; */
            font-size: 14px;
            line-height: 20px;
        }

        .member_profile-container .right_block .form-group input,
        .member_profile-container .right_block .form-group select {
            width: 100%;
            padding: 10px;
            border: 1px solid #868fa029;
            border-radius: 6px;
        }

        .member_profile-container .right_block .form-group input[type="date"] {
            padding: 8px;
        }

        .member_profile-container .right_block .form-row {
            display: flex;
            gap: 25px;
        }

        .member_profile-container .right_block .form-row .form-group {
            flex: 1;
        }

        .member_profile-container .right_block .upload-section {
            align-items: center;
            gap: 10px;
        }

        .member_profile-container .right_block .upload-section input[type="file"] {
            display: none;
        }

        .member_profile-container .right_block .upload-section label {
            cursor: pointer;
        }

        .member_profile-container .right_block .form-group button {
            width: 100%;
            padding: 10px;
            background-color: #007bff;
            border: none;
            border-radius: 5px;
            color: #fff;
            font-size: 16px;
            cursor: pointer;
        }

        .member_profile-container .right_block .form-group button:hover {
            background-color: #0056b3;
        }

        .member_profile-container .right_block .upload-section .upload-label {
            border: 1px dotted #687182;
            padding: 8px 20px;
            border-radius: 12px;
            display: block;
            max-width: max-content;
        }

        .member_profile-container .right_block {
            width: 700px;
        }

        .member_profile-container .single-trip-card h4 {
            font-size: 20px;
            line-height: 28px;
            font-weight: 700;
            letter-spacing: -0.25px;
        }

        .member_profile-container .trip_details p {
            font-size: 14px;
        }

        @media (max-width: 1024px) {
            .member_profile-container {
                flex-wrap: wrap;
            }

            .member_profile-container .trip-card-expand {
                margin-top: 20px !important;
            }

            .member_profile-container .booking_history .search_bar input {
                min-width: 100% !important;
            }
        }

        .member_profile-container .single-trip-card {
            border-radius: 16px;
            gap: 10px;
        }

        .member_profile-container .trip-card-expand {
            margin-top: 50px;
        }

        .member_profile-container p {
            margin: 0;
            font-size: 14px;
        }

        .member_profile-container .booking_history .search_bar input {
            min-width: 500px;
            padding: 8px 10px;
            border-radius: 10px;
            font-size: 14px;
            outline: 0;
            box-shadow: none;
            border: 1px solid #868fa029;
        }

        /* Add this to your existing styles */
        .member_profile-container .right_block .form-group input,
        .member_profile-container .right_block .form-group select {
            width: 100%;
            padding: 10px;
            border: 1px solid #868fa029;
            border-radius: 6px;
            background-color: #ffffff;
            /* Set background color to white */
        }

        .member_profile-container .right_block .upload-section .upload-label {
            border: 1px dotted #687182;
            padding: 8px 20px;
            border-radius: 12px;
            display: block;
            max-width: max-content;
            background-color: #ffffff;
            /* Set background color to white */
        }

        .member_profile-container .right_block .nice-select,
        .member_profile-container .right_block .nice-select .list {
            width: 100%;
            /* Ensure dropdowns are full width */
        }

        .orderId,
        .travellers,
        .booking_status {
            border-right: 1px solid #ccc;
            padding-right: 8px;
        }

        .pagination {
            display: inline-block;
            margin-top: 20px;
        }

        .pagination a {
            padding: 8px 16px;
            margin: 4px;
            text-decoration: none;
            border: 1px solid #ddd;
            border-radius: 5px;
            color: black;
        }

        .pagination a:hover {
            background-color: #ddd;
        }
    </style>
    <%- include('../../partials/headtag'); %>
</head>

<body>
    <%- include('../../partials/header'); %>
    <main>
        <div class="container my-5">
            <div class="d-flex gap-4 member_profile-container">
                <div class="profile-left-bar" onclick="handleProfileTabDivClick(event)">
                    <p class="active" data-tab-index="1">Profile</p>
                    <p data-tab-index="2">Upcoming trips</p>
                    <p data-tab-index="3">Booking history</p>
                </div>
                <input type="hidden" name="_csrf" value="<%= csrfToken %>">
                <div class="right_block">
                    <div class="profile_block" data-block-index="1">
                        <div class="form-container">
                            <h2 class="text-left">Personal details</h2>
                            <form id="profileUpdateForm" action="/profile/update" method="POST">

                                <div class="form-row">
                                    <div class="form-group">
                                        <label for="FirstName">First Name*</label>
                                        <input type="text" id="FirstName" name="firstName" placeholder="First name" value="<%= profileFormData.firstName %>" required>
                                    </div>
                                    <div class="form-group">
                                        <label for="LastName">Last Name*</label>
                                        <input type="text" id="LastName" name="lastName" placeholder="Last name" value="<%= profileFormData.lastName %>" required>
                                    </div>
                                </div>

                                <div class="form-row">
                                    <div class="form-group">
                                        <label for="BirthDate">Birth date*</label>
                                        <input type="date" id="BirthDate" name="birthDate" value="<%= profileFormData.birthDate %>" required>
                                    </div>
                                    <div class="form-group">
                                        <label for="gender">Gender*</label>
                                        <select id="gender" name="gender" required>
                                            <option value="male" <%=profileFormData.gender=='male' ? 'selected' : ''
                                                    %>>Male</option>
                                            <option value="female" <%=profileFormData.gender=='female' ? 'selected'
                                                    : '' %>>Female</option>
                                            <option value="other" <%=profileFormData.gender=='other' ? 'selected'
                                                    : '' %>>Other</option>
                                        </select>
                                    </div>
                                </div>

                                <div class="form-row">
                                    <div class="form-group">
                                        <label for="MobileNumber">Mobile number*</label>
                                        <input type="tel" id="MobileNumber" name="mobileNumber" placeholder="Enter 10-digit mobile number" value="<%= profileFormData.mobileNumber %>" required pattern="^\d{10}$" maxlength="10" inputmode="numeric" aria-required="true" oninput="this.value = this.value.replace(/[^0-9]/g, '')"> <!-- Remove any non-numeric input -->
                                    </div>
                                    <div class="form-group">
                                        <label for="AlternateNumber">Alternative number</label>
                                        <input type="tel" id="AlternateNumber" name="alternateNumber" placeholder="Enter 10-digit alternative number" value="<%= profileFormData.alternateNumber %>" pattern="^\d{10}$" maxlength="10" inputmode="numeric" aria-required="false" oninput="this.value = this.value.replace(/[^0-9]/g, '')"> <!-- Remove any non-numeric input -->
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="email">Email id</label>
                                    <input type="email" id="email" name="email" placeholder="example@gmail.com" value="<%= profileFormData.email %>" required>
                                </div>

                                <!-- Commented out the code for State and City input as it is not needed currently; it will be added in a future task if needed. -->
                                <!-- <div class="form-row">
                                    <div class="form-group">
                                        <label for="state">State</label>
                                        <select id="state" name="state">
                                            <option value="gujarat" <%=profileFormData.state=='gujarat' ? 'selected'
                                                    : '' %>>Gujarat</option>
                                            <option value="maharashtra" <%=profileFormData.state=='maharashtra'
                                                    ? 'selected' : '' %>>Maharashtra</option>
                                            <option value="rajasthan" <%=profileFormData.state=='rajasthan'
                                                    ? 'selected' : '' %>>Rajasthan</option>
                                        </select>
                                    </div>
                                    <div class="form-group">
                                        <label for="city">City</label>
                                        <input type="text" id="city" name="city" placeholder="City" value="<%= profileFormData.city %>">
                                    </div>
                                </div> -->

                                <div class="form-group">
                                    <button type="submit">Submit</button>
                                </div>
                            </form>
                            <div id="successAlert" class="alert alert-success d-none" role="alert">
                                Profile updated successfully!
                            </div>
                        </div>
                    </div>

                    <!-- Booking History/Upcoming Trips section -->
                    <div class="upcoming_trips d-none" id="trip-section" data-block-index="2" onclick="handleTipCardExpand(event)">
                        <!-- The DOM will be loaded from JavaScript. -->

                    </div>

                    <!-- booking history -->
                    <div class="booking_history d-none" id="trip-section" data-block-index="3" onclick="handleTipCardExpand(event)">
                        <!-- The DOM will be loaded from JavaScript. -->
                    </div>

                    <div class="pagination" id="pagination-container"></div>
                </div>
            </div>
        </div>
    </main>
    <%- include('../../partials/footer'); %>
    <%- include('../../partials/scripttag'); %>
    <script>
        let crrLoadedTabIdx = "1";

        function stopPropagationFn(event) {
            // The purpose of writing this code is to prevent the card from expanding when clicking on link elements inside the card. 
            // Note: Do not use "preventDefault" as we need to open the links based on the click event.
            event.stopPropagation();
        }

        // Function to handle tab click event
        async function handleProfileTabDivClick(event) {
            // Get the clicked element
            const clickedElement = event.target;
            const newTabIndex = clickedElement.getAttribute('data-tab-index');

            // Ensure the clicked element is a paragraph and is different from the currently active tab
            if (clickedElement.tagName === 'P' && newTabIndex !== crrLoadedTabIdx) {
                // Get the currently active tab and corresponding content block
                const prevTabElement = document.querySelector(
                    `[data-tab-index="${crrLoadedTabIdx}"]`
                );
                const prevDataElement = document.querySelector(
                    `[data-block-index="${crrLoadedTabIdx}"]`
                );

                // Get the new tab and corresponding content block
                const newDataElement = document.querySelector(
                    `[data-block-index="${newTabIndex}"]`
                );

                if (prevTabElement && prevDataElement) {
                    // Remove 'active' class from previous tab and hide its content
                    prevTabElement.classList.remove('active');
                    prevDataElement.classList.add('d-none');
                }

                if (clickedElement && newDataElement) {
                    // Add 'active' class to new tab and show its content
                    clickedElement.classList.add('active');
                    newDataElement.classList.remove('d-none');
                }

                // Update the currently loaded tab index
                crrLoadedTabIdx = newTabIndex;

                if (newTabIndex > 1) {
                    // Load data for the newly selected tab
                    await loadTripData(newTabIndex);
                }
            }
        }

        // BT: ::Pending:: Move all Javascript helper function to separate file.
        // Load upcoming/history trip data based on pagination.
        async function loadTripData(newTabIndex, crrPage = 1) {
            try {
                const csrfToken = document.querySelector('input[name="_csrf"]').value;
                const response = await fetch('/profile/getBookingHistoryItem', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-CSRF-Token': csrfToken,
                    },
                    // BT: ::Pending:: Make Pagination dynamic.
                    body: JSON.stringify({
                        crrPage: crrPage,
                        newTabIndex,
                    }),
                });

                if (!response.ok) {
                    // BT: ::Pending:: Handle Error by use common notification.
                    throw new Error('Failed to fetch trip data');
                }

                const result = await response.json();

                if (result.items && result.items.length > 0) {
                    let myTrips = result.items;
                    let tripContainer = document.querySelector(
                        '.upcoming_trips[data-block-index="2"]'
                    );
                    tripContainer.innerHTML = ''; // Clear previous content

                    myTrips.forEach((trip) => {
                        let tripHTML = `
                            <div class="single-trip-card d-flex gap-4 border order-1 border-opacity-10 p-3 mt-3">
                                <div>
                                    <!-- Image, updated based on trip.imageName -->
                                    <!-- // We will implement redirection in in future flow.  --> 
                                     <!-- // <a href="/tripdetails/${trip.toursSystemId}" onclick="stopPropagationFn(event)">  --> 
                                        <img class="rounded-lg" src="../../../images/${
                                        trip.imageName || 'ahmedabadcity-tour.jpg'
                                        }" width="150">
                                    <!-- // </a> --> 
                                </div>
                                <div>
                                    <h4 class="trip_title">${trip.tripName}</h4>
                                    <p class="trip_date mb-2 d-flex align-items-center">
                                        <span class="me-2">
                                            <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                <path d="M5.625 2.5V4.375M14.375 2.5V4.375M2.5 15.625V6.25C2.5 5.75272 2.69754 5.27581 3.04917 4.92417C3.40081 4.57254 3.87772 4.375 4.375 4.375H15.625C16.1223 4.375 16.5992 4.57254 16.9508 4.92417C17.3025 5.27581 17.5 5.75272 17.5 6.25V15.625M2.5 15.625C2.5 16.1223 2.69754 16.5992 3.04917 16.9508C3.40081 17.3025 3.87772 17.5 4.375 17.5H15.625C16.1223 17.5 16.5992 17.3025 16.9508 16.9508C17.3025 16.5992 17.5 16.1223 17.5 15.625M2.5 15.625V9.375C2.5 8.87772 2.69754 8.40081 3.04917 8.04917C3.40081 7.69754 3.87772 7.5 4.375 7.5H15.625C16.1223 7.5 16.5992 7.69754 16.9508 8.04917C17.3025 8.40081 17.5 8.87772 17.5 9.375V15.625M10 10.625H10.0067V10.6317H10V10.625ZM10 12.5H10.0067V12.5067H10V12.5ZM10 14.375H10.0067V14.3817H10V14.375ZM8.125 12.5H8.13167V12.5067H8.125V12.5ZM8.125 14.375H8.13167V14.3817H8.125V14.375ZM6.25 12.5H6.25667V12.5067H6.25V12.5ZM6.25 14.375H6.25667V14.3817H6.25V14.375ZM11.875 10.625H11.8817V10.6317H11.875V10.625ZM11.875 12.5H11.8817V12.5067H11.875V12.5ZM11.875 14.375H11.8817V14.3817H11.875V14.375ZM13.75 10.625H13.7567V10.6317H13.75V10.625ZM13.75 12.5H13.7567V12.5067H13.75V12.5Z" stroke="#4B5563" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
                                            </svg>
                                        </span>&nbsp;
                                        <!-- BT: ::Confirm:: if it needs to be shown in 'how many days, how many nights' format? -->
                                        ${trip.tripStartDate} - ${trip.tripEndDate}
                                    </p>
                                    <div class="d-flex column-gap-2 row-gap-2 trip_details flex-wrap">
                                        <div class="orderId">
                                            <p class="m-0">Trip code</p>
                                            <p class="m-0">${trip.tripCode}</p>
                                        </div>
                                        <div class="travellers">
                                            <p class="m-0">Booking number</p>
                                            <p class="m-0">${trip.bookingNumber}</p>
                                        </div>
                                        <div class="booking_status">
                                            <p class="m-0">Booking</p>
                                            <p>${trip.bookingStatus}</p>
                                        </div>
                                        <div class="payment_status">
                                            <p class="m-0">Payment</p>
                                            <p class="badge ${
                                            trip.paymentStatus === 'Paid'
                                                ? 'm-0 text-success'
                                                : 'm-0 text-danger'
                                            }">
                                                ${trip.paymentStatus}
                                            </p>
                                        </div>
                                    </div>
                                    <div class="trip-card-expand d-none">
                                        <div class="d-flex gap-4 mb-4 inner-content">
                                            <div class="pickup_details">
                                                <p class="pickup-from">Joining from:</p>
                                                <p class="pickup_city">${
                                                trip.joiningFrom
                                                }</p>
                                            </div>
                                            <div class="travel_date">
                                                <p>Travel date:</p>
                                                <p class="date_from">${
                                                trip.tripStartDate
                                                } - ${trip.tripEndDate}</p>
                                            </div>
                                        </div>
                                        <div class="d-flex gap-4 mb-4 inner-content">
                                            <div class="person_details">
                                                <p class="mb-1">Total person</p>
                                                <p class="adults">Adults : ${
                                                trip.totalPerson?.adult
                                                }</p>
                                                <p class="childs">Children : ${
                                                trip.totalPerson?.child
                                                }</p>
                                            </div>
                                            <div class="total_costs">
                                                <p class="mb-1">Total costs</p>
                                                <p>₹${trip.totalTripCost}</p>
                                            </div>  
                                            ${trip.duePayment > 0 ? `                                            
                                                <div class="Due Payment">
                                                    <p class="mb-1">Due Payment</p>
                                                    <p class="text-danger">${
                                                    trip.duePayment || 0
                                                    }</p>
                                                </div>
                                            `:''}
                                        </div>

                                        <div class="person_names">
                                            <details>
                                                <summary onclick="stopPropagationFn(event)">View person’s details 
                                                    <span><svg width="14" height="15" viewBox="0 0 14 15" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                        <path d="M11.375 5.3125L7 9.6875L2.625 5.3125" stroke="#111827" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
                                                    </svg></span>
                                                </summary>
                                                <ul>
                                                    ${trip.personDetails
                                                    ?.map(
                                                        (person, index) =>
                                                        `<li>${index + 1}. ${person.name} (${person.age})</li>`
                                                    )
                                                    .join('')}
                                                </ul>
                                            </details>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        `;
                        tripContainer.insertAdjacentHTML('beforeend', tripHTML);
                    });
                    tripContainer.classList.remove('d-none');
                } else {
                    console.log('No trips found');
                }
                renderPagination(result.paginationDet);
            } catch (error) {
                console.error('Error fetching trip data:', error);
            }
        }

        // Function to render the pagination buttons
        function renderPagination(paginationDet) {
            const paginationContainer = document.getElementById('pagination-container');

            // Clear previous pagination buttons
            paginationContainer.innerHTML = '';
            if (paginationDet.totalPages > 1) {
                for (let i = 1; i <= paginationDet.totalPages; i++) {
                    const button = document.createElement('a');
                    button.textContent = i;
                    button.onclick = () => {
                        // event.preventDefault();
                        // event.stopPropagation();
                        if (paginationDet.crrPage !== i) {
                            const crrTabIndex = document.querySelector('.profile-left-bar .active')?.getAttribute('data-tab-index')
                            loadTripData(crrTabIndex, i);
                            document.getElementById('trip-section').scrollIntoView({
                                behavior: 'smooth'
                            });
                        }
                    };

                    // Add an active class to the current page button
                    if (i === paginationDet.crrPage) {
                        button.style.backgroundColor = '#ddd';
                    }

                    paginationContainer.appendChild(button);
                }
            }
        }

        // Manage code for card collapse and expand.
        function handleTipCardExpand(event) {
            const expandedElement = document.querySelector("#trip-section .trip-card-expanded");
            expandedElement?.classList.toggle("d-none");
            expandedElement?.classList.toggle("trip-card-expanded");

            const clickedCardElement = event.target.closest('.single-trip-card');
            const crrElement = clickedCardElement.querySelector(".trip-card-expand");
            if (expandedElement !== crrElement) {
                crrElement?.classList.toggle("d-none");
                crrElement?.classList.toggle("trip-card-expanded");
            }
        }

        // Submit Form
        document.getElementById('profileUpdateForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            const formData = new FormData(e.target);
            const csrfToken = document.querySelector('input[name="_csrf"]').value;
            const response = await fetch(e.target.action, {
                method: 'POST',
                body: formData,
                headers: {
                    'X-CSRF-Token': csrfToken
                }
            });
            const result = await response.json();
            // BT: ::Pending:: Create Global notification bar.
            if (response.ok) {
                document.getElementById('successAlert').classList.remove('d-none');
                setTimeout(() => {
                    document.getElementById('successAlert').classList.add('d-none');
                }, 3000);
                // Update profile data on UI
                // You can also update the UI directly with result.updatedUser.details
            } else {
                alert(result.message || 'Failed to update profile');
            }
        });
    </script>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-Fy6S3B9q64WdZWQUiU+q4/2Lc9npb8tCaSX9FK7E8HnRr0Jz8D6OP9dO5Vg3Q9ct" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>
    <script>
        // Filter function
        // document.getElementById('searchInput').addEventListener('keyup', function() {
        //     const filter = this.value.toLowerCase();
        //     const items = document.querySelectorAll('#booking_history .searching');
        //     console.log(items);
        //     items.forEach(item => {
        //         console.log(item)
        //         const nestedText = item.querySelector('.searchfilter').textContent.toLowerCase();
        //         console.log(nestedText)

        //         if (nestedText.includes(filter)) {
        //             item.classList.remove('d-none-list') // Show item
        //         } else {
        //             item.classList.add('d-none-list'); // Hide item
        //         }
        //     });
        // });
    </script>
</body>

</html>