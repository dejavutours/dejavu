<!doctype html>
<html class="no-js" lang="zxx">

<head>
  <%- include('../partials/headtag'); %>
  
  <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.5/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-SgOJa3DmI69IUzQ2PVdRZhwQ+dy64/BUtbMJw1MZ8t5HZApcHrRKUc4W0kG879m7" crossorigin="anonymous">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css" />
  <link rel="stylesheet" href="css/dashboard.css">
  <link rel="stylesheet" href="css/style.css">
  <style>
    /* Departure City Section */
    .departure_city_section {
      padding-bottom: 3rem;
    }

    /* Tabs Styling */
    .departure-city-tabs {
      border-bottom: 1px solid #dee2e6;
      gap: 0.5rem;
    }

    .departure-city-tabs .nav-link {
      padding: 0.5rem 1.5rem;
      border: 1px solid transparent;
      border-radius: 10px;
      color: #6c757d;
      font-weight: 500;
      transition: all 0.3s ease;
    }

    .departure-city-tabs .nav-link:hover {
      background-color: #f8f9fa;
      border-color: #dee2e6;
    }

    .departure-city-tabs .nav-link.active {
      background-color: #ffffff;
      color: #000000;
      border-color: #000000;
    }

    /* Trip Cards Container */
    .trip-cards-container {
      position: relative;
      overflow-x: auto;
      scroll-behavior: smooth;
      -webkit-overflow-scrolling: touch;
      scrollbar-width: none;
      -ms-overflow-style: none;
      scroll-snap-type: x mandatory;
      /* Enable scroll snapping */
    }

    /* Hide Scrollbar on Webkit Browsers */
    .trip-cards-container::-webkit-scrollbar {
      display: none;
    }

    .trip-cards-row {
      display: flex;
      flex-wrap: nowrap;
      gap: 1rem;
      padding: 0 1rem;
      /* Add padding to ensure cards don't touch edges */
      min-width: max-content;
    }

    /* Trip Card Styling */
    .trip-card {
      flex: 0 0 auto;
      width: 340px;
      height: 369px;
      border: 1px solid #dee2e6;
      border-radius: 20px;
      overflow: hidden;
      background-color: #fff;
      transition: transform 0.3s ease;
      scroll-snap-align: start;
      /* Snap cards to start of container */
    }

    .trip-card:hover {
      transform: translateY(-2px);
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    /* Ensure Swiper slider doesn't interfere */
    .trip-image-slider {
      position: relative;
      height: 250px;
      touch-action: pan-y;
    }

    .trip-image-slider img {
      width: 100%;
      height: 100%;
      object-fit: cover;
      pointer-events: none;
    }

    /* Swiper Navigation Buttons for Trip Slider */
    .swiper-button-prev,
    .swiper-button-next {
      width: 30px;
      height: 30px;
      background-color: #fff;
      border-radius: 50%;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
      color: #000;
      opacity: 0.8;
      transition: opacity 0.3s ease;
    }

    .swiper-button-prev:hover,
    .swiper-button-next:hover {
      opacity: 1;
    }

    .swiper-button-prev::after,
    .swiper-button-next::after {
      font-size: 14px;
      font-weight: bold;
    }

    .swiper-button-prev {
      left: 10px;
    }

    .swiper-button-next {
      right: 10px;
    }

    /* Row Navigation Buttons */
    .row-nav-btn {
      position: absolute;
      top: 50%;
      transform: translateY(-50%);
      width: 40px;
      height: 40px;
      background-color: #fff;
      border: 1px solid #dee2e6;
      color: #000;
      display: flex;
      align-items: center;
      justify-content: center;
      z-index: 10;
      transition: background-color 0.3s ease;
    }

    .row-nav-btn:hover {
      background-color: #f8f9fa;
    }

    .row-nav-prev {
      left: 0;
    }

    .row-nav-next {
      right: 0;
    }

    .row-nav-btn i {
      font-size: 16px;
    }

    .row-nav-btn:disabled {
      opacity: 0.5;
      cursor: not-allowed;
    }

    .trip-cards-container.scrolled-to-start::after {
      background: none;
    }

    /* Responsive Adjustments */
    @media (max-width: 767.98px) {
      .trip-card {
        width: 280px;
      }

      .trip-image-slider {
        height: 180px;
      }

      .trip-cards-row {
        padding: 0 5px;
      }

      .row-nav-btn {
        width: 32px;
        height: 32px;
        font-size: 14px;
      }

      .row-nav-prev {
        left: 5px;
      }

      .row-nav-next {
        right: 5px;
      }
    }

    @media (max-width: 575.98px) {
      .trip-cards-container::after {
        width: 15px;
      }
    }
  </style>
</head>

<body>
  <%- include('../partials/header', {title: "Deja-vu tours treks and travel"}); %>

  <section class="banner_section pb-4 position-relative">
    <div class="container-fluid">
      <div class="image-slider swiper">
        <div class="swiper-wrapper">
          <% if (bannerImages && bannerImages.length > 0) { %>
          <% bannerImages.forEach((img, index) => { %>
          <div class="swiper-slide">
            <div class="banner-image-container">
              <img src="<%= img.url %>" alt="Banner Image <%= index + 1 %>" class="w-100 h-100 object-fit-cover" onerror="this.onerror=null; this.src='/images/placholderbanner.jpg';" />
              <% if (img.caption) { %>
              <div class="banner-caption">
                <h3><%= img.caption %></h3>
              </div>
              <% } %>
            </div>
          </div>
          <% }); %>
          <% } else { %>
          <div class="swiper-slide">
            <div class="banner-image-container">
              <img src="<%= trips.imageurl %>" alt="Main Image" class="w-100 h-100 object-fit-cover" onerror="this.onerror=null; this.src='/images/placholderbanner.jpg';">
            </div>
          </div>
          <% } %>
        </div>
        <div class="swiper-pagination"></div>
        <div class="swiper-button-prev"></div>
        <div class="swiper-button-next"></div>
      </div>
    </div>
    <div class="hero_section position-absolute top-0 left-0 h-100 w-100 text-center d-flex align-items-center">
      <div class="container position-relative z-1">
        <div class="form rounded-5 bg-white p-md-2 mt-md-4 position-relative">
          <div class="filter_row rounded-5 d-none d-md-flex gap-2 position-relative z-1">
            <div class="dropdown">
              <button class="btn btn-light d-flex gap-2 align-items-center rounded-pill dropdownBtn" type="button" data-bs-toggle="dropdown" aria-expanded="false">All <i class="bi bi-chevron-down ms-auto"></i></button>
              <ul class="dropdown-menu">
                <li class="dropdown-item">All</li>
                <li class="dropdown-item">Categories</li>
                <li class="dropdown-item">Destinations</li>
                <li class="dropdown-item">Tour type</li>
              </ul>
            </div>
            <input type="text" class="outline-0 border-0 flex-grow-1" placeholder="Search destination">
            <button id="search_btn" class="btn btn-link align-self-center"><i class="bi bi-search text-body"></i></button>
          </div>

          <div class="d-none text-start text-body rounded-5 position-absolute top-0 start-0 w-100 shadow-sm filters bg-white px-3">
            <br><br><br>
            <article class="categories_filter filter_item">
              <p class="mb-1">Categories</p>
              <ul class="d-inline-flex flex-wrap gap-2 px-0 filter_list" data-filter-key="category">
                <% categoryItems.forEach(category => { %>
                <li role="button" tabindex="-1" data-item="<%= category.name %>" class="border rounded px-2 py-1 small">
                  <%= category.name %>
                </li>
                <% }) %>
              </ul>
            </article>
            <article class="destinations_filter filter_item">
              <p class="mb-1">Trending Destinations</p>
              <ul class="d-inline-flex flex-wrap gap-2 px-0 filter_list" data-filter-key="destination">
                <% placeItems.forEach(place => { %>
                <li role="button" tabindex="-1" data-item="<%= place.name %>" class="border rounded px-2 py-1 small"><%= place.name %></li>
                <% }) %>
              </ul>
            </article>
            <article class="tourtype_filter filter_item">
              <p class="mb-1">Tour Type</p>
              <ul class="d-inline-flex flex-wrap gap-2 px-0 filter_list" data-filter-key="tourType">
                <li role="button" tabindex="-1" data-item="Family" class="border rounded px-2 py-1 small">Family</li>
                <li role="button" tabindex="-1" data-item="Solo" class="border rounded px-2 py-1 small">Solo</li>
                <li role="button" tabindex="-1" data-item="Couple friendly" class="border rounded px-2 py-1 small">Couple friendly</li>
                <li role="button" tabindex="-1" data-item="Bachelors" class="border rounded px-2 py-1 small">Bachelors</li>
                <li role="button" tabindex="-1" data-item="Students" class="border rounded px-2 py-1 small">Students</li>
              </ul>
            </article>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Filter Modal for Small Screens -->
  <div class="modal fade" id="filterModal" tabindex="-1" aria-labelledby="filterModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
      <div class="modal-content rounded-4">
        <div class="modal-header border-0 pb-0">
          <h5 class="modal-title" id="filterModalLabel">Search & Filters</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body pt-2">
          <div class="mb-3">
            <input type="text" class="form-control rounded-pill" placeholder="Search destination" id="modalSearchInput">
          </div>
          <div class="mb-3">
            <label class="form-label fw-semibold">Category</label>
            <select class="form-select rounded-pill" id="modalCategorySelect">
              <% categoryItems.forEach(category => { %>
              <option value="<%= category.name %>"><%= category.name %></option>
              <% }) %>
            </select>
          </div>
          <div class="mb-3">
            <label class="form-label fw-semibold">Destination</label>
            <select class="form-select rounded-pill" id="modalDestinationSelect">
              <% placeItems.forEach(place => { %>
              <option value="<%= place.name %>"><%= place.name %></option>
              <% }) %>
            </select>
          </div>
          <div class="mb-3">
            <label class="form-label fw-semibold">Tour Type</label>
            <select class="form-select rounded-pill" id="modalTourTypeSelect">
              <option value="">All</option>
              <option value="Family">Family</option>
              <option value="Solo">Solo</option>
              <option value="Couple friendly">Couple friendly</option>
              <option value="Bachelors">Bachelors</option>
              <option value="Students">Students</option>
            </select>
          </div>
        </div>
        <div class="modal-footer border-0 pt-0">
          <button type="button" class="btn btn-light rounded-pill" id="modalResetBtn">Reset</button>
          <button type="button" class="btn btn-dark rounded-pill" id="modalApplyBtn">Apply</button>
        </div>
      </div>
    </div>
  </div>

  <% 
    // Filter packages based on user role
    let displayedPackages = tourPackages.filter(tour => tour.isActive)
  %>

  <!-- Trending destination section -->
  <section class="trending_section container-xl mt-3 py-4 py-lg-5">
    <p>
      <small class="text-dejavu-secondary-light">Experience our</small><br>
      <span class="fw-semibold h3">Trending destinations</span>
    </p>
    <aside class="overflow-auto d-flex h-scroll">
      <% displayedPackages.forEach(function(tour, index) { %>
      <a href="/tripdetail/<%= tour.name %>" title="<%= tour.name %>" class="rounded-4 item_card overflow-hidden">
        <div class="cover position-relative">
          <img src="<%= tour.imageurl %>" alt="Tour package - <%= tour.name %> in <%= tour.state %>, India" class="w-100 object-fit-cover" height="220" width="300" loading="lazy" onerror="this.onerror=null; this.src='/images/placeholder.jpg';">
          <p class="px-3 py-2 mb-0 d-flex flex-column text-light position-absolute bottom-0 w-100 shadow_content">
            <strong><%= tour.name %></strong>
            <small><%= tour.state %>, India</small>
          </p>
        </div>
        <p class="bg-white px-3 py-2 mb-0 d-flex justify-content-between gap-3 position-relative">
          <small>From <strong>₹<%- tour.price %></strong>/person</small>
          <small class="text-end"><i class="bi bi-calendar"></i> <strong><%- tour.days %></strong></small>
        </p>
      </a>
      <% }); %>
    </aside>
  </section>

  <!-- Trending state section -->
  <section class="trending_state_section container-xl py-4 pb-lg-5">
    <p class="pb-md-3">
      <small class="text-dejavu-secondary-light">Explore trips by</small><br>
      <span class="fw-semibold h3">Trending State</span>
    </p>
    <aside class="overflow-auto d-flex position-relative">
      <% for (let item of placeItems ) { %>
      <a href="/triplist?filterValue=<%= encodeURIComponent(JSON.stringify({ 'States': [item?.name] })) %>" style="--bg-image: url('<%= item.thumb %>'); background-image: var(--bg-image); background-position: center; background-repeat: no-repeat;" class="rounded-4 item_card overflow-hidden">
        <p class="p-3 mb-0 text-light text-center shadow_content">
          <span class="fs-5"><%= item.name %></span><br>
          <small><%= item.place %> Place</small>
        </p>
      </a>
      <% } %>
    </aside>
  </section>

  <!-- Category section -->
  <section class="cat_section container-xl pb-4 pb-lg-5">
    <p class="pb-md-3">
      <small class="text-dejavu-secondary-light">Explore trips by</small><br>
      <span class="fw-semibold h3">Categories</span>
    </p>
    <aside class="overflow-auto text-nowrap">
      <% categoryItems.forEach(category => { %>
      <a href="/triplist?filterValue=<%= encodeURIComponent(JSON.stringify({ 'Tour category': [category.name] })) %>" class="rounded-4 item_card position-relative d-inline-flex align-items-center">
        <img src="<%= category.thumb %>" alt="<%= category.name %>" class="rounded-4 w-100 object-fit-cover h-100" width="200" height="230" loading="lazy">
        <span class="px-3 py-1 bg-white text-center mx-auto rounded content">
          <strong class="text-truncate"><%= category.name %></strong><br>
          <small class="small text-secondary"><%= category.count %> Tour<%= category.count > 1 ? 's' : '' %></small>
        </span>
      </a>
      <% }) %>
    </aside>
  </section>

  <!-- Departure city section -->
  <section class="departure_city_section container-xl py-4 pb-lg-5">
    <p class="pb-md-3">
      <small class="text-dejavu-secondary-light">Departing from your nearby location</small><br>
      <span class="fw-semibold h3">Tour packages available from</span>
    </p>

    <!-- Tabs for Departure Cities -->
    <ul class="nav nav-tabs departure-city-tabs mb-4" id="departureCityTabs" role="tablist">
      <% departureCities.forEach((city, index) => { %>
      <li class="nav-item" role="presentation">
        <button class="nav-link <%= index === 0 ? 'active' : '' %>" id="tab-<%= city.name.toLowerCase().replace(/\s+/g, '-') %>" data-bs-toggle="tab" data-bs-target="#pane-<%= city.name.toLowerCase().replace(/\s+/g, '-') %>" type="button" role="tab" aria-controls="pane-<%= city.name.toLowerCase().replace(/\s+/g, '-') %>" aria-selected="<%= index === 0 ? 'true' : 'false' %>">
          <%= city.name %>
        </button>
      </li>
      <% }); %>
    </ul>

    <!-- Tab Content -->
    <div class="tab-content" id="departureCityTabContent">
      <% departureCities.forEach((city, index) => { %>
      <div class="tab-pane fade <%= index === 0 ? 'show active' : '' %>" id="pane-<%= city.name.toLowerCase().replace(/\s+/g, '-') %>" role="tabpanel" aria-labelledby="tab-<%= city.name.toLowerCase().replace(/\s+/g, '-') %>">
        <!-- Trip Cards Container with Navigation -->
        <div class="position-relative">
          <div class="trip-cards-container">
            <div class="trip-cards-row">
              <% city.trips.forEach((trip, tripIndex) => { %>
              <div class="trip-card" data-card-index="<%= tripIndex %>" onclick="window.location.href='/tripdetail/<%= trip.name %>'">
                <!-- Swiper Slider for Banner Images -->
                <div class="trip-image-slider swiper">
                  <div class="swiper-wrapper">
                    <% if (trip.bannerimages && trip.bannerimages.length > 0) { %>
                    <% trip.bannerimages.forEach((img, imgIndex) => { %>
                    <div class="swiper-slide">
                      <img src="<%= img %>" alt="Trip Image <%= imgIndex + 1 %>" class="w-100 h-100 object-fit-cover" onerror="this.onerror=null; this.src='/images/placeholder.jpg';" />
                    </div>
                    <% }); %>
                    <% } else { %>
                    <div class="swiper-slide">
                      <img src="<%= trip.imageurl %>" alt="Trip Image" class="w-100 h-100 object-fit-cover" onerror="this.onerror=null; this.src='/images/placeholder.jpg';" />
                    </div>
                    <% } %>
                  </div>
                  <!-- Navigation Buttons for Slider -->
                  <% if (trip.bannerimages && trip.bannerimages.length > 1) { %>
                  <div class="swiper-button-prev swiper-button-white-black" aria-label="Previous slide"></div>
                  <div class="swiper-button-next swiper-button-white-black" aria-label="Next slide"></div>
                  <% } %>
                </div>
                <!-- Trip Details -->
                <div class="p-3">
                  <h6 class="mb-1"><%= trip.name %></h6>
                  <p class="text-muted small mb-2">
                    <%= trip.destinations %>
                  </p>
                  <div class="d-flex justify-content-between align-items-center">
                    <span class="fw-bold">₹<%= trip.adultPrice || trip.price %>/person</span>
                    <span class="text-muted small">
                      <i class="bi bi-calendar"></i> <%= trip.tripDuration || '2 Days - 3 Nights' %>
                    </span>
                  </div>
                </div>
              </div>
              <% }); %>
            </div>
          </div>
          <!-- Navigation Buttons for Row -->
          <button class="row-nav-btn row-nav-prev btn btn-light rounded-circle shadow-sm" aria-label="Previous cards" disabled>
            <i class="bi bi-chevron-left"></i>
          </button>
          <button class="row-nav-btn row-nav-next btn btn-light rounded-circle shadow-sm" aria-label="Next cards">
            <i class="bi bi-chevron-right"></i>
          </button>
        </div>
      </div>
      <% }); %>
    </div>
  </section>

  <!-- Accomodation section -->
  <section class="accomodation_section my-4 my-lg-5 px-3 px-md-0">
    <div class="cover_sec" style="--bg-image: url('../img/dashboard/accomodation_bg.jpg');"></div>
    <aside class="content_sec py-3 p-md-4 p-xl-5 d-flex flex-column align-items-start justify-content-center">
      <p class="text-dejavu-secondary-light mb-2">Deja-vu stays</p>
      <h3><strong>Looking for accommodation?</strong></h3>
      <p class="col-md-10">Discover our specially curated local accommodations with delicious food to fulfill your travel desires! Whether you prefer driving on your own or exploring places using local transportation, we will help you find beautiful and unique accommodations.</p>
      <button class="btn btn-dark rounded-pill">Book now</button>
    </aside>
  </section>

  <!-- Customization section -->
  <section class="custom_section container-xl pt-md-3 pb-lg-5">
    <div class="rounded-4 overflow-hidden position-relative" style="min-height: 300px;">
      <div class="position-absolute top-0 start-0 w-100 h-100" style="
          background-image: url('../img/dashboard/dream_trip.png');
          background-size: cover;
          background-position: center;
          background-repeat: no-repeat;
        ">
      </div>
      <div class="d-flex flex-column align-items-start justify-content-center h-100 p-3 p-md-4 p-xl-5 text-light position-relative z-1">
        <small>We're Crafting the Perfect Getaway You'll Love</small>
        <h4>Let's Make Your Dream Trip</h4>
        <p class="small col-xl-6">Customized trip is your gateway to personalized travel. Tell us your interests, and we'll curate an itinerary that you'll love.</p>
        <button class="btn btn-light rounded-pill" onclick="window.location.href='/dreamtrip'">Customize Trip</button>
      </div>
    </div>
  </section>

  <!-- International Gateways Section -->
  <section class="international_section container-xl py-4 pb-lg-5 position-relative overflow-hidden">
    <p class="pb-md-3">
      <small class="text-dejavu-secondary-light">Dejavu global</small><br>
      <span class="fw-semibold h3">Experience International Gateways!</span>
    </p>
    <div class="row g-2 international-cards-row">
      <!-- Dubai -->
      <div class="col-12 col-sm-6 col-lg-3">
        <a href="#" class="international-card rounded-4 overflow-hidden d-block position-relative text-decoration-none" style="background-image: url('/img/dashboard/dubai.jpg'); background-size: cover; background-position: center; background-repeat: no-repeat; max-height: 450px; height: 450px;">
          <p class="text-light p-3 m-0 fs-3 position-absolute top-50 start-50 translate-middle text-center" style="background: linear-gradient(to top, rgba(0, 0, 0, 0.2), transparent); width: 100%;">
            <strong>Dubai</strong>
          </p>
        </a>
      </div>
      <!-- Thailand -->
      <div class="col-12 col-sm-6 col-lg-3">
        <a href="#" class="international-card rounded-4 overflow-hidden d-block position-relative text-decoration-none" style="background-image: url('/img/dashboard/Thailand.jpg'); background-size: cover; background-position: center; background-repeat: no-repeat; max-height: 450px; height: 450px;">
          <p class="text-light p-3 m-0 fs-3 position-absolute top-50 start-50 translate-middle text-center" style="background: linear-gradient(to top, rgba(0, 0, 0, 0.2), transparent); width: 100%;">
            <strong>Thailand</strong>
          </p>
        </a>
      </div>
      <!-- Singapore -->
      <div class="col-12 col-sm-6 col-lg-3">
        <a href="#" class="international-card rounded-4 overflow-hidden d-block position-relative text-decoration-none" style="background-image: url('/img/dashboard/Singapore.jpg'); background-size: cover; background-position: center; background-repeat: no-repeat; max-height: 450px; height: 450px;">
          <p class="text-light p-3 m-0 fs-3 position-absolute top-50 start-50 translate-middle text-center" style="background: linear-gradient(to top, rgba(0, 0, 0, 0.2), transparent); width: 100%;">
            <strong>Singapore</strong>
          </p>
        </a>
      </div>
      <!-- Vietnam -->
      <div class="col-12 col-sm-6 col-lg-3">
        <a href="#" class="international-card rounded-4 overflow-hidden d-block position-relative text-decoration-none" style="background-image: url('/img/dashboard/Vietnam.jpg'); background-size: cover; background-position: center; background-repeat: no-repeat; max-height: 450px; height: 450px;">
          <p class="text-light p-3 m-0 fs-3 position-absolute top-50 start-50 translate-middle text-center" style="background: linear-gradient(to top, rgba(0, 0, 0, 0.2), transparent); width: 100%;">
            <strong>Vietnam</strong>
          </p>
        </a>
      </div>
    </div>
  </section>

  <%- include('../partials/footer'); %>
  <%- include('../partials/scripttag'); %>
  <script src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js"></script>
  <script>
    document.addEventListener("DOMContentLoaded", function() {
      // Banner slider initialization
      const swiper = new Swiper(".banner_section .image-slider", {
        loop: true,
        autoplay: {
          delay: 3000,
          disableOnInteraction: false,
        },
        pagination: {
          el: ".banner_section .swiper-pagination",
          clickable: true,
        },
        navigation: {
          nextEl: ".banner_section .swiper-button-next",
          prevEl: ".banner_section .swiper-button-prev",
        },
        breakpoints: {
          320: {
            slidesPerView: 1,
            spaceBetween: 0
          },
          768: {
            slidesPerView: 1,
            spaceBetween: 0
          },
          992: {
            slidesPerView: 1,
            spaceBetween: 0
          },
        },
      });
    });
  </script>
  <script>
    // Initialize Swiper sliders for each trip card and row navigation
    document.addEventListener("DOMContentLoaded", function() {
      // Initialize Swiper for each trip card slider
      document.querySelectorAll(".trip-image-slider").forEach((slider) => {
        const slides = slider.querySelectorAll(".swiper-slide");
        if (slides.length === 1) {
          slider.classList.add("single-slide");
          return; // Skip Swiper initialization for single slides
        }

        new Swiper(slider, {
          loop: true,
          navigation: {
            nextEl: slider.querySelector(".swiper-button-next"),
            prevEl: slider.querySelector(".swiper-button-prev"),
          },
          slidesPerView: 1,
          spaceBetween: 0,
        });
      });

      // Row Navigation for Trip Cards
      document.querySelectorAll(".trip-cards-container").forEach((container) => {
        const row = container.querySelector(".trip-cards-row");
        const prevBtn = container.parentElement.querySelector(".row-nav-prev");
        const nextBtn = container.parentElement.querySelector(".row-nav-next");

        // Initialize scroll position
        container.scrollLeft = 0;

        // Function to update button states
        function updateNavButtons() {
          const scrollLeft = container.scrollLeft;
          const maxScroll = container.scrollWidth - container.clientWidth;

          prevBtn.disabled = scrollLeft <= 0;
          nextBtn.disabled = scrollLeft >= maxScroll - 1;

          // Update visual cue for scrollability
          container.classList.toggle("scrolled-to-start", scrollLeft <= 0);
        }

        // Initial button state
        updateNavButtons();

        // Update button states on scroll
        container.addEventListener("scroll", updateNavButtons);

        // Calculate scroll distance dynamically
        function getScrollDistance() {
          const card = container.querySelector(".trip-card");
          if (!card) return 0;
          const style = window.getComputedStyle(card);
          const cardWidth = parseFloat(style.width);
          const gap = parseFloat(window.getComputedStyle(row).gap) || 16; // Default to 1rem (16px)
          return cardWidth + gap;
        }

        // Handle previous button click
        prevBtn.addEventListener("click", () => {
          const scrollDistance = getScrollDistance();
          container.scrollBy({
            left: -scrollDistance,
            behavior: "smooth",
          });
        });

        // Handle next button click
        nextBtn.addEventListener("click", () => {
          const scrollDistance = getScrollDistance();
          const maxScroll = container.scrollWidth - container.clientWidth;
          const currentScroll = container.scrollLeft;
          const remainingScroll = maxScroll - currentScroll;

          // If remaining scroll is less than a full card, scroll to the end
          if (remainingScroll <= scrollDistance) {
            container.scrollTo({
              left: maxScroll,
              behavior: "smooth",
            });
          } else {
            container.scrollBy({
              left: scrollDistance,
              behavior: "smooth",
            });
          }
        });

        // Ensure keyboard navigation
        prevBtn.addEventListener("keydown", (e) => {
          if (e.key === "Enter" || e.key === " ") {
            e.preventDefault();
            prevBtn.click();
          }
        });

        nextBtn.addEventListener("keydown", (e) => {
          if (e.key === "Enter" || e.key === " ") {
            e.preventDefault();
            nextBtn.click();
          }
        });
      });
    });

    function displayall() {
      var showmorebtn = document.getElementById("btntag");
      if (showmorebtn.innerText == "Show More") {
        showmorebtn.innerText = "Show Less";
      } else {
        showmorebtn.innerText = "Show More";
      }
      var x = document.getElementsByName("showmore");
      var i;
      for (i = 0; i < x.length; i++) {
        if (x[i].style.display === "none") {
          x[i].style.display = "flex";
        } else {
          x[i].style.display = "none";
        }
      }
    }

    function displayallaccods() {
      var showmorebtn = document.getElementById("btntagaccods");
      if (showmorebtn.innerText == "Show More") {
        showmorebtn.innerText = "Show Less";
      } else {
        showmorebtn.innerText = "Show More";
      }
      var x = document.getElementsByName("showmoreaccods");
      var i;
      for (i = 0; i < x.length; i++) {
        if (x[i].style.display === "none") {
          x[i].style.display = "flex";
        } else {
          x[i].style.display = "none";
        }
      }
    }

    // Packages Show More Logic
    document.addEventListener("DOMContentLoaded", function() {
      // Initialize Bootstrap tooltips
      $('[data-bs-toggle="tooltip"]').tooltip();

      // Packages Show More Logic
      const grid = document.querySelector(".packages-grid");
      const cards = grid.querySelectorAll(".package-card");
      const showMoreBtn = document.getElementById("btn-packages");
      const maxInitialCards = 6;

      // Hide cards beyond initial limit
      cards.forEach((card, index) => {
        if (index >= maxInitialCards) {
          card.style.display = "none";
        }
      });

      // Toggle visibility on button click
      showMoreBtn.addEventListener("click", function() {
        const isShowingMore = showMoreBtn.innerText === "Show Less";
        showMoreBtn.innerText = isShowingMore ? "Show More" : "Show Less";

        cards.forEach((card, index) => {
          if (index >= maxInitialCards) {
            card.style.display = isShowingMore ? "none" : "block";
          }
        });
      });

      // Hide button if fewer than maxInitialCards
      if (cards.length <= maxInitialCards) {
        showMoreBtn.style.display = "none";
      }
    });

    // Define Shared State Object for filter and search
    const filterState = {
      search: '',
      category: '',
      destination: '',
      tourType: '',
    };

    document.addEventListener("DOMContentLoaded", function() {
      const dropdownBtn = document.querySelector(".hero_section .dropdownBtn");
      const dropdownItems = document.querySelectorAll(".hero_section .dropdown-menu .dropdown-item");
      const filter_row = document.querySelector(".hero_section .filter_row");
      const filterContainer = document.querySelector(".hero_section .form");
      const filters = document.querySelector(".hero_section .filters");
      // Initialize dropdown with "All" selected
      dropdownBtn.innerHTML = 'All <i class="bi bi-chevron-down ms-auto"></i>';
      // Show filtersContainer when any element in filter_row is focused
      document.addEventListener('click', function(e) {
        const isModalOpen = document.querySelector('#filterModal.show');
        if (isModalOpen) return;
        const isClickInside = filterContainer.contains(e.target);
        if (isClickInside) {
          filters.classList.remove('d-none');
          filter_row.classList.add('shadow-sm');
        } else {
          filters.classList.add('d-none');
          filter_row.classList.remove('shadow-sm');
        }
      });
      document.addEventListener('keydown', function(e) {
        if (e.key === 'Escape') {
          filters.classList.add('d-none');
          filter_row.classList.remove('shadow-sm');
        }
      });

      window.addEventListener('resize', (e) => {
        if (window.innerWidth < 768 && !filters.classList.contains('d-none')) {
          filters.classList.add('d-none');
          filter_row.classList.remove('shadow-sm');
        }
      });
      const allSections = [{
          key: "categories",
          section: filters.querySelector(".categories_filter")
        },
        {
          key: "destinations",
          section: filters.querySelector(".destinations_filter")
        },
        {
          key: "tourType",
          section: filters.querySelector(".tourtype_filter")
        }
      ];

      function showSections(selected) {
        if (selected === "All") {
          allSections.forEach(obj => obj.section.style.display = "");
        } else {
          allSections.forEach(obj => {
            if (
              (selected === "Categories" && obj.key === "categories") ||
              (selected === "Destinations" && obj.key === "destinations") ||
              (selected === "Tour type" && obj.key === "tourType")
            ) {
              obj.section.style.display = "";
            } else {
              obj.section.style.display = "none";
            }
          });
        }
      }

      dropdownItems.forEach(item => {
        item.addEventListener("click", function(e) {
          e.preventDefault();
          dropdownBtn.innerHTML = item.textContent + ' <i class="bi bi-chevron-down ms-auto"></i>';
          showSections(item.textContent.trim());
        });
      });

      // Show all sections by default
      showSections("All");

      const input2 = filter_row?.querySelector('input');
      const heroSearchBtn = filter_row?.querySelector('#search_btn');

      // Modal filter logic
      const modal = document.getElementById('filterModal');
      modal?.addEventListener('shown.bs.modal', () => {
        const searchInput = document.getElementById('modalSearchInput');
        const categorySelect = document.getElementById('modalCategorySelect');
        const destinationSelect = document.getElementById('modalDestinationSelect');
        const tourTypeSelect = document.getElementById('modalTourTypeSelect');
        const resetBtn = document.getElementById('modalResetBtn');
        const applyBtn = document.getElementById('modalApplyBtn');

        // Delay patching inputs and focusing to avoid interfering with global click listener
        setTimeout(() => {
          searchInput.value = filterState['search'] || '';
          categorySelect.value = filterState['category'] || '';
          destinationSelect.value = filterState['destination'] || '';
          tourTypeSelect.value = filterState['tourType'] || '';
          searchInput.focus();
        }, 50);

        searchInput?.addEventListener('input', function(e) {
          filterState['search'] = e.target.value;
          input2.value = e.target.value;
        });
        categorySelect?.addEventListener('change', function(e) {
          filterState['category'] = e.target.value;
          syncInputs('category');
        });
        destinationSelect?.addEventListener('change', (e) => {
          filterState['destination'] = e.target.value;
          syncInputs('destination');
        });
        tourTypeSelect?.addEventListener('change', (e) => {
          filterState['tourType'] = e.target.value;
          syncInputs('tourType');
        });

        applyBtn?.addEventListener('click', () => {
          const modalInstance = bootstrap.Modal.getInstance(modal);
          modalInstance?.hide();
          redirectWithFilters();
        });
        resetBtn?.addEventListener('click', function() {
          for (const key in filterState) {
            filterState[key] = '';
            syncInputs(key);
          }
        });
      });

      input2?.addEventListener('input', (e) => {
        filterState['search'] = e.target.value;
      });

      function syncInputs(key) {
        const filterLists = document.querySelectorAll(`.filter_list[data-filter-key="${key}"]`);
        filterLists.forEach(list => {
          const listItems = list.querySelectorAll("li");
          listItems.forEach(li => {
            li.classList.toggle("text-bg-secondary", li.getAttribute("data-item") === filterState[key]);
          });
        });
      }

      // Setup filter list click handlers
      setupFilterList((key, value) => {
        filterState[key] = value || '';
        syncInputs(key);
      });

      // Redirect with filters
      function redirectWithFilters() {
        const filters = {};
        if (filterState.category) {
          filters['Tour category'] = [filterState.category.toLocaleLowerCase()];
        }
        if (filterState.destination) {
          filters['States'] = [filterState.destination.toLocaleLowerCase()];
        }
        if (filterState.tourType) {
          filters['Tour type'] = [filterState.tourType.toLocaleLowerCase()];
        }
        const queryParams = new URLSearchParams();
        queryParams.append('filterValue', JSON.stringify(filters));
        if (filterState.search) {
          queryParams.append('searchValue', filterState.search);
        }
        window.location.href = `/triplist?${queryParams.toString()}`;
      }

      heroSearchBtn?.addEventListener('click', redirectWithFilters);
    });

    const filterLists = document.querySelectorAll(".filter_list");
    filterLists.forEach(list => {
      list.querySelectorAll('li').forEach(li => {
        li.addEventListener('mouseenter', (e) => {
          let isActive = li.classList.contains('text-bg-secondary');
          li.classList.add(isActive ? 'bg-dark' : 'bg-light');
        });
        li.addEventListener('mouseleave', (e) => {
          let isActive = li.classList.contains('text-bg-secondary');
          li.classList.remove('bg-light');
          li.classList.remove('bg-dark');
        });
      });
    });

    function setupFilterList(onSelect) {
      filterLists.forEach(list => {
        list.addEventListener("click", function(e) {
          if (e.target.tagName !== "LI") return;
          const clickedItem = e.target;
          const key = list.getAttribute("data-filter-key");
          const selectedValue = clickedItem.getAttribute("data-item");
          const listItems = list.querySelectorAll("li");
          if (clickedItem.classList.contains("text-bg-secondary")) {
            clickedItem.classList.remove("text-bg-secondary");
            onSelect(key, null);
          } else {
            listItems.forEach(li => li.classList.remove("text-bg-secondary"));
            clickedItem.classList.add("text-bg-secondary");
            onSelect(key, selectedValue);
          }
        });
      });
    }
  </script>
  <!-- SEO Schema Markup -->
  <script type="application/ld+json">
    {
      "@context": "http://schema.org",
      "@type": "TravelAgency",
      "name": "Dejavu Tours",
      "url": "https://www.dejavutours.in",
      "offers": [
        <% 
        let displayedPackage = profile?.email === process.env.GMAIL_ADMIN 
          ? tourPackages 
          : tourPackages.filter(tour => tour.isActive);
        displayedPackage.forEach(function(tour, index) { 
      %> {
          "@type": "Offer",
          "name": "<%= tour.name %>",
          "description": "Tour package to <%= tour.destinations %>",
          "price": "<%= tour.price %>",
          "priceCurrency": "INR",
          "availability": "<%= tour.isActive ? 'InStock' : 'OutOfStock' %>",
          "url": "https://www.dejavutours.in/tripdetail/<%= tour.name %>"
        }
        <%= index < displayedPackage.length - 1 ? ',' : '' %>
        <% }); %>
      ]
    }
  </script>
</body>

</html>