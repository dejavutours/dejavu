<style>
  /* Custom styles to match the exact UI */
  #exampleModal .modal-content {
    border-radius: 12px;
    border: none;
    padding: 10px;
  }

  #exampleModal .modal-header {
    border-bottom: 1px solid rgb(109, 109, 109);
  }

  #exampleModal .modal-title {
    font-weight: 600;
    font-size: 18px;
  }

  #exampleModal .modal-body {
    padding: 10px 20px;
  }

  #exampleModal .modal-footer {
    border-top: 1px solid rgb(109, 109, 109);
    padding: 15px 20px;
  }

  #exampleModal .form-group label {
    font-weight: 500;
    font-size: 14px;
    margin-bottom: 5px;
  }

  #exampleModal .input-group {
    border: 1px solid #ccc;
    border-radius: 11px;
    overflow: hidden;
  }

  #exampleModal .input-group-text {
    background-color: #ffffff;
    border: none;
    font-weight: 500;
  }

  #exampleModal .form-control {
    border: none;
    box-shadow: none;
  }

  #exampleModal .form-control:focus {
    box-shadow: none;
  }

  #exampleModal .text-muted {
    font-size: 13px;
    margin-top: 5px;
  }

  #exampleModal .btn-primary {
    width: 100%;
    border-radius: 8px;
    background-color: #1e3a73;
  }

  #exampleModal .btn-disabled {
    background-color: #e4e4e4;
    border: none;
    color: #ffffff;
    cursor: not-allowed;
  }

  #exampleModal .close {
    font-size: 22px;
    opacity: 0.6;
  }

  /* Otp section style */
  /* Custom styles to match the exact UI */
  #verifyModal .modal-content {
    border-radius: 12px;
    border: none;
    padding: 10px;
  }

  #verifyModal .modal-header {
    border-bottom: 1px solid black;
    padding: 16px 20px;
  }

  #verifyModal .modal-title {
    font-weight: 600;
    font-size: 18px;
  }

  #verifyModal .modal-body {
    padding: 10px 20px;
    text-align: center;
  }

  #verifyModal .modal-footer {
    border-top: none;
    padding: 15px 20px;
  }

  #verifyModal .close {
    font-size: 22px;
    opacity: 0.6;
  }

  #verifyModal .otp-container {
    display: flex;
    justify-content: center;
    gap: 8px;
  }

  #verifyModal .otp-input {
    width: 50px;
    height: 50px;
    text-align: center;
    font-size: 20px;
    border: 1px solid #ccc;
    border-radius: 8px;
    outline: none;
  }

  #verifyModal .otp-input:focus {
    border-color: #0056b3;
    box-shadow: 0 0 5px rgba(0, 86, 179, 0.3);
  }

  #verifyModal .text-muted {
    font-size: 14px;
    margin-top: 5px;
  }

  #verifyModal .btn-primary {
    width: 100%;
    border-radius: 8px;
    background-color: #1e3a73;
  }

  #verifyModal .btn-disabled {
    background-color: #e4e4e4;
    border: none;
    color: #ffffff;
    cursor: not-allowed;
  }


  #verifyModal .edit-icon {
    margin-left: 8px;
    cursor: pointer;
    font-size: 16px;
    color: #007bff;
  }

  #verifyModal .resend-link {
    font-size: 14px;
    color: #007bff;
    text-decoration: none;
    font-weight: 500;
  }

  #verifyModal .resend-link:hover {
    text-decoration: underline;
  }
</style>

</style>
<header>
  <div class="header-area">
    <div id="sticky-header" class="main-header-area">
      <div class="container-fluid">
        <div class="header_bottom_border">
          <div class="row align-items-center">
            <div class="col-xl-2 col-lg-2">
              <div class="logo">
                <a href="/">
                  <img src="/images/logo.png" alt="" />
                </a>
              </div>
            </div>
            <div class="col-xl-7 col-lg-7">
              <div class="main-menu d-none d-lg-block">
                <nav>
                  <ul id="navigation">
                    <li><a class="active" href="/">Home</a></li>
                    <li>
                      <a href="/upcomingtrips">Upcoming<i class="ti-angle-down"></i></a>
                    </li>
                    <li>
                      <a class="destination-link">Tour Packages <i class="ti-angle-down"></i></a>
                      <ul class="submenu">
                        <li><a href="/filters/Gujarat">Gujarat </a></li>
                        <li><a href="/filters/Maharashtra">Maharashtra </a></li>
                        <li><a href="/filters/Himalayan">Himalayas </a></li>
                        <li><a href="/filters/Rajasthan">Rajasthan </a></li>
                        <li><a href="/filters/North-East">North-East </a></li>
                        <li><a href="/filters/South-India">South-India </a></li>
                      </ul>
                    </li>
                    <li><a href="/accomodation">accomodation</a></li>
                    <li>
                      <a class="destination-link">More<i class="ti-angle-down"></i></a>
                      <ul class="submenu">
                        <li><a href="/blog">Travel Stories</a></li>
                        <li><a href="/about">About</a></li>
                        <li><a href="/contact">Contact</a></li>
                      </ul>
                    </li>
                    <% if(profile?.email || accessToken) { %>
                    <li>
                      <i class="fa fa-user-o fa-sm"></i>&nbsp;<a class="destination-link">
                        <%= profile?.name || profile?.email ||
                        Buffer.from(accessToken.split('.')[1], 'base64'
                        ).toString() %>
                      </a>
                      <ul class="submenu">
                        <% if(profile?.email===process.env.GMAIL_ADMIN) { %>
                        <li><a href="/admin/login">Admin</a></li>
                        <% } %>
                        <!-- <li><a href="/profile">Profile</a></li> -->
                        <li><a href="/profile">Profile</a></li>
                        <!-- <li><a href="/logout">Sign Out</a></li> -->
                        <li>
                          <form id="my_form" action="/logout" method="post">
                            <!-- <a href="#" type="submit">Sign Out</a> -->
                            <!-- <button class="btn btn-light" type="submit"><a>Sign out</a></button> -->
                            <a href="javascript:{}" onclick="signout(accessTokens)">Sign Out</a>
                            <input type="hidden" name="_csrf" value="<%= csrfToken %>" />
                          </form>
                        </li>
                      </ul>
                    </li>
                    <%} else { %>
                    <!-- <li>
                                            <button class="btn btn-sm btn-primary"><a href="/login/federated/google" style="color: white;">SignIn with Google</a></button>
                                          </li> -->
                    <li>
                      <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#exampleModal">
                        Sign In
                      </button>
                    </li>
                    <% } %>
                  </ul>
                </nav>
              </div>
            </div>
            <div class="col-xl-3 col-lg-3 d-none d-lg-block">
              <div class="social_wrap d-flex align-items-center justify-content-end">
                <div class="number">
                  <p>+91 851111 7891</p>
                </div>
                <div class="social_links d-none d-xl-block">
                  <ul>
                    <li>
                      <a href="https://www.instagram.com/dejavutours/" target="_blank" rel="nofollow noopener">
                        <i class="fa fa-instagram"></i>
                      </a>
                    </li>
                    <li>
                      <a href="https://www.youtube.com/watch?v=56-u7Pv-cQg" target="_blank" rel="nofollow noopener">
                        <i class="fa fa-youtube-play"></i>
                      </a>
                    </li>
                    <li>
                      <a href="https://www.facebook.com/dejavutours.in" target="_blank" rel="nofollow noopener">
                        <i class="fa fa-facebook"></i>
                      </a>
                    </li>
                    <!-- <li><a href="https://twitter.com/dejavutours_in" target="_blank" rel="nofollow noopener"> <i class="fa fa-twitter"></i> </a></li> -->
                  </ul>
                </div>
              </div>
            </div>
            <div class="seach_icon">
              <a data-toggle="modal" data-target="#exampleModalCenter" href="#">
                <i class="fa fa-search"></i>
              </a>
            </div>
            <div class="col-12">
              <div class="mobile_menu d-block d-lg-none"></div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</header>
<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <form id="getotp">
        <div class="modal-header">
          <h5 class="modal-title" id="exampleModalLabel">Register</h5>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body pb-5 pt-3">
          <div class="form-group">
            <label for="phone">Mobile Number *</label>
            <div class="input-group">
              <div class="input-group-prepend">
                <span class="input-group-text">+91</span>
              </div>
              <input type="hidden" name="_csrf" value="<%= csrfToken %>" />
              <input type="tel" class="form-control" id="mobileNumber" name="phone" placeholder="Enter your mobile number" pattern="^\d{10}$" required>
            </div>
          </div>
          <p class="text-muted">We'll send you a 4-digit code to this mobile number.</p>
        </div>
        <div class="modal-footer">
          <button type="submit" class="btn btn-primary btn-disabled" id="sendCodeBtn">Send code</button>
        </div>
      </form>
    </div>
  </div>
</div>

<div class="modal fade" id="verifyModal" tabindex="-1" aria-labelledby="verifyModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <form id="verifyotp">
        <div class="modal-header">
          <h5 class="modal-title" id="verifyModalLabel">Verify code</h5>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body">
          <input type="hidden" name="_csrf" value="<%= csrfToken %>" />
          <p class="mb-2">
            Code sent to <strong id="phoneNumberDisplay">+91 </strong>
            <span class="edit-icon" id="editPhone">&#9998;</span>
          </p>
          <div class="otp-container">
            <input type="text" class="otp-input" maxlength="1" id="otp1" required oninput="moveFocus(1)" onkeydown="handleBackspace(1, event)">
            <input type="text" class="otp-input" maxlength="1" id="otp2" required oninput="moveFocus(2)" onkeydown="handleBackspace(2, event)">
            <input type="text" class="otp-input" maxlength="1" id="otp3" required oninput="moveFocus(3)" onkeydown="handleBackspace(3, event)">
            <input type="text" class="otp-input" maxlength="1" id="otp4" required oninput="moveFocus(4)" onkeydown="handleBackspace(4, event)">
            <input type="hidden" class="form-control" id="mobileNumber2" name="phone2" placeholder="Enter Phone Number" />
            <input type="hidden" class="form-control" id="otp" name="otp" placeholder="Enter OTP" />
          </div>
          <p class="mt-3">
            Didn't receive code? <a href="#" class="resend-link">Resend</a>
          </p>
        </div>
        <div class="modal-footer">
          <button type="submit" class="btn btn-primary btn-disabled" id="verifyBtn">Verify code</button>
        </div>
      </form>
    </div>
  </div>
</div>
<!-- header-end -->
<script>
  async function signout(accessToken) {
    if (accessToken) {
      sessionStorage.removeItem("accessToken");
      // cookies.remove({name: 'accessToken'}).then((data=> console.log('cookiedata', data)));
      cookieStore.getAll().then((p) => p.forEach((c) => cookieStore.delete(c)));
      if (caches) {
        const names = await caches.keys();
        await Promise.all(names.map((name) => caches.delete(name)));
      }
      window.location.reload();
    } else {
      document.getElementById("my_form").submit();
    }
  }
</script>
<!-- Validate mobile number and enable the submit buttons -->
<script>
  document.getElementById("mobileNumber").addEventListener("input", function() {
    const sendCodeBtn = document.getElementById("sendCodeBtn");
    const isValid = /^\d{10}$/.test(this.value);

    sendCodeBtn.disabled = !isValid;
    sendCodeBtn.classList.toggle("btn-disabled", !isValid);
  });
</script>
<!--- On Press of submit button of get otp -->
<script>
  document.addEventListener("DOMContentLoaded", function() {
    var accessTokens = "<%= accessToken %>";
    const getOtpForm = document.getElementById("getotp");
    const verifyForm = document.getElementById("verifyotp");
    const verifyBtn = document.getElementById("verifyBtn");
    const resendLink = document.querySelector(".resend-link");
    const otpInputs = document.querySelectorAll(".otp-input");
    const sendCodeBtn = document.getElementById("sendCodeBtn");
    const timerDisplay = document.createElement("span");
    resendLink.parentElement.appendChild(timerDisplay);
    let resendTimer;

    const editPhoneIcon = document.getElementById("editPhone"); // Edit icon in verifyModal

    // Handle edit icon click to move back to registration
    editPhoneIcon.addEventListener("click", function() {
      const phoneNumber = document.getElementById("phoneNumberDisplay").textContent.replace('+91 ', ''); // Get the phone number
      document.getElementById("mobileNumber").value = phoneNumber; // Set the phone number in the registration modal
      $("#verifyModal").modal("hide");
      $("#exampleModal").modal("show");
    });

    function requestOTP(mobileNumber) {
      if (!mobileNumber || !/^(\+?\d{1,3}[-\s]?)?\d{10}$/.test(mobileNumber)) {
        return alert("Enter a valid mobile number!"); // Validate phone number format
      }
      var formData = new FormData(getOtpForm || verifyForm);
      // Remove the previous 'phone' field if it exists
      formData.delete('phone');

      // Append the new phone number
      formData.append('phone', mobileNumber);
      fetch("/getotp", {
          method: "POST",
          body: formData
        })
        .then((response) => response.json())
        .then((data) => {
          if (data) {
            document.getElementById("mobileNumber2").value = mobileNumber;
            document.getElementById("phoneNumberDisplay").textContent = "+91 " + mobileNumber;
            $("#exampleModal").modal("hide");
            $("#verifyModal").modal("show");
          } else {
            alert("Failed to send OTP. Please try again.");
          }
        })
        .catch((error) => console.log("Error:", error));
    }

    // Handle initial OTP request
    getOtpForm.addEventListener("submit", function(event) {
      event.preventDefault();
      const mobileNumber = document.getElementById("mobileNumber").value;
      requestOTP(mobileNumber);
    });

    // Handle Resend OTP button click
    resendLink.addEventListener("click", function(e) {
      e.preventDefault();
      startResendTimer();
      const phoneNumber = document.getElementById("mobileNumber2").value;
      requestOTP(phoneNumber);
    });

    // Handle OTP input validation
    otpInputs.forEach((input, index) => {
      input.addEventListener("input", function() {
        this.value = this.value.replace(/\D/g, ""); // Only allow numbers
        if (this.value && index < otpInputs.length - 1) {
          otpInputs[index + 1].focus();
        }
        validateOTP();
      });

      input.addEventListener("keydown", function(e) {
        if (e.key === "Backspace" && !this.value && index > 0) {
          otpInputs[index - 1].focus();
        }
      });
    });

    function validateOTP() {
      const allFilled = [...otpInputs].every((input) => /^[0-9]$/.test(input.value));
      verifyBtn.disabled = !allFilled;
      verifyBtn.classList.toggle("btn-disabled", !allFilled);
    }

    // Handle OTP Verification
    verifyForm.addEventListener("submit", function(event) {
      event.preventDefault();
      verifyBtn.innerHTML = "Verifying...";
      verifyBtn.disabled = true;

      const fullOtp = [...otpInputs].map((input) => input.value).join("");
      document.getElementById("otp").value = fullOtp;

      fetch("/verifyotp", {
          method: "POST",
          body: new FormData(verifyForm),
        })
        .then((response) => response.json())
        .then((data) => {
          if (data) {
            sessionStorage.setItem("accessToken", data.accessToken);
            document.cookie = `accessToken=${data.accessToken}`;
            window.location.href = "/";
          } else {
            alert("Verification failed. Please try again.");
          }
        })
        .catch((error) => console.error("Error:", error))
        .finally(() => {
          verifyBtn.innerHTML = "Verify Code";
          verifyBtn.disabled = false;
        });
    });

    // Start a countdown for the Resend button
    function startResendTimer() {
      resendLink.style.pointerEvents = "none";
      let timeLeft = 10;

      resendTimer = setInterval(() => {
        if (timeLeft <= 0) {
          clearInterval(resendTimer);
          timerDisplay.innerHTML = "";
          resendLink.style.pointerEvents = "auto";
        } else {
          timerDisplay.innerHTML = ` (Wait ${timeLeft--}s)`;
        }
      }, 1000);
    }
  });

</script>

<style>
  * {
    box-sizing: border-box;
  }

  body {
    font: 16px Arial;
  }

  /*the container must be positioned relative:*/
  .autocomplete {
    position: relative;
    display: inline-block;
  }

  input {
    border: 1px solid transparent;
    background-color: #f1f1f1;
    padding: 10px;
    font-size: 16px;
  }

  input[type="text"] {
    background-color: #f1f1f1;
    width: 100%;
  }

  input[type="submit"] {
    background-color: DodgerBlue;
    color: #fff;
    cursor: pointer;
  }

  .autocomplete-items {
    position: absolute;
    border: 1px solid #d4d4d4;
    border-bottom: none;
    border-top: none;
    z-index: 99;
    /*position the autocomplete items to be the same width as the container:*/
    top: 100%;
    left: 0;
    right: 0;
  }

  .autocomplete-items div {
    padding: 10px;
    cursor: pointer;
    background-color: #fff;
    border-bottom: 1px solid #d4d4d4;
  }

  /*when hovering an item:*/
  .autocomplete-items div:hover {
    background-color: #e9e9e9;
  }

  /*when navigating through the items using the arrow keys:*/
  .autocomplete-active {
    background-color: DodgerBlue !important;
    color: #ffffff;
  }
</style>
<!-- Modal -->
<div class="modal fade custom_search_pop" id="exampleModalCenter" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered" role="document">
    <div class="modal-content">
      <div class="serch_form">
        <form action="/search/trip" method="POST">
          <input type="text" placeholder="Search" autocomplete="off" id="SearchTrip" name="SearchTrip" />
          <input type="hidden" name="_csrf" value="<%= csrfToken %>" />
          <button type="submit">search</button>
        </form>
      </div>
    </div>
  </div>
</div>
<script>
  function autocomplete(inp, arr) {
    /*the autocomplete function takes two arguments,
    the text field element and an array of possible autocompleted values:*/
    var currentFocus;
    /*execute a function when someone writes in the text field:*/
    inp.addEventListener("input", function(e) {
      var a, b, i, val = this.value;
      /*close any already open lists of autocompleted values*/
      closeAllLists();
      if (!val) {
        return false;
      }
      currentFocus = -1;
      /*create a DIV element that will contain the items (values):*/
      a = document.createElement("DIV");
      a.setAttribute("id", this.id + "autocomplete-list");
      a.setAttribute("class", "autocomplete-items");
      /*append the DIV element as a child of the autocomplete container:*/
      this.parentNode.appendChild(a);
      /*for each item in the array...*/
      for (i = 0; i < arr.length; i++) {
        /*check if the item starts with the same letters as the text field value:*/
        if (arr[i].substr(0, val.length).toUpperCase() == val.toUpperCase()) {
          /*create a DIV element for each matching element:*/
          b = document.createElement("DIV");
          /*make the matching letters bold:*/
          b.innerHTML = "<strong>" + arr[i].substr(0, val.length) + "</strong>";
          b.innerHTML += arr[i].substr(val.length);
          /*insert a input field that will hold the current array item's value:*/
          b.innerHTML += "<input type='hidden' value='" + arr[i] + "'>";
          /*execute a function when someone clicks on the item value (DIV element):*/
          b.addEventListener("click", function(e) {
            /*insert the value for the autocomplete text field:*/
            inp.value = this.getElementsByTagName("input")[0].value;
            /*close the list of autocompleted values,
            (or any other open lists of autocompleted values:*/
            closeAllLists();
          });
          a.appendChild(b);
        }
      }
    });
    /*execute a function presses a key on the keyboard:*/
    inp.addEventListener("keydown", function(e) {
      var x = document.getElementById(this.id + "autocomplete-list");
      if (x) x = x.getElementsByTagName("div");
      if (e.keyCode == 40) {
        /*If the arrow DOWN key is pressed,
        increase the currentFocus variable:*/
        currentFocus++;
        /*and and make the current item more visible:*/
        addActive(x);
      } else if (e.keyCode == 38) { //up
        /*If the arrow UP key is pressed,
        decrease the currentFocus variable:*/
        currentFocus--;
        /*and and make the current item more visible:*/
        addActive(x);
      } else if (e.keyCode == 13) {
        /*If the ENTER key is pressed, prevent the form from being submitted,*/
        e.preventDefault();
        if (currentFocus > -1) {
          /*and simulate a click on the "active" item:*/
          if (x) x[currentFocus].click();
        }
      }
    });

    function addActive(x) {
      /*a function to classify an item as "active":*/
      if (!x) return false;
      /*start by removing the "active" class on all items:*/
      removeActive(x);
      if (currentFocus >= x.length) currentFocus = 0;
      if (currentFocus < 0) currentFocus = (x.length - 1);
      /*add class "autocomplete-active":*/
      x[currentFocus].classList.add("autocomplete-active");
    }

    function removeActive(x) {
      /*a function to remove the "active" class from all autocomplete items:*/
      for (var i = 0; i < x.length; i++) {
        x[i].classList.remove("autocomplete-active");
      }
    }

    function closeAllLists(elmnt) {
      /*close all autocomplete lists in the document,
      except the one passed as an argument:*/
      var x = document.getElementsByClassName("autocomplete-items");
      for (var i = 0; i < x.length; i++) {
        if (elmnt != x[i] && elmnt != inp) {
          x[i].parentNode.removeChild(x[i]);
        }
      }
    }
    /*execute a function when someone clicks in the document:*/
    document.addEventListener("click", function(e) {
      closeAllLists(e.target);
    });
  }
</script>